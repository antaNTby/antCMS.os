{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"colu",
				"columnIndex"
			],
			[
				"E_",
				"E_ALL"
			],
			[
				"_re",
				"_request"
			],
			[
				"re",
				"regOK"
			],
			[
				"DB",
				"DB_HOST"
			],
			[
				"da",
				"dataFromRBC"
			],
			[
				"pare",
				"parentTR"
			],
			[
				"new",
				"newValue"
			],
			[
				"disa",
				"disabledControlSnippets"
			],
			[
				"set",
				"setAttribute"
			],
			[
				"que",
				"querySelectorAll"
			],
			[
				"each",
				"forEach"
			],
			[
				"qu",
				"querySelector"
			],
			[
				"debug",
				"debug_print\tsmarty debug print"
			],
			[
				"array_",
				"array_values"
			],
			[
				"lower",
				"strtolower()"
			],
			[
				"fore",
				"foreach\tforeach …"
			],
			[
				"for",
				"foreach\tforeach …"
			],
			[
				"arr",
				"array_keys"
			],
			[
				"table",
				"table_name"
			],
			[
				"current",
				"current_sub_id"
			],
			[
				"vi",
				"visible"
			],
			[
				"wrapper",
				"wrapperConfirmSelect"
			],
			[
				"swi",
				"switcher"
			],
			[
				"inp",
				"inputType"
			],
			[
				"ht",
				"html_options"
			],
			[
				"class",
				"classList"
			],
			[
				"sta",
				"standartLayout"
			],
			[
				"pl",
				"plucked_dpt_ids"
			],
			[
				"D",
				"Deparments"
			],
			[
				"PATH",
				"PATH_TPL"
			],
			[
				"su",
				"subExtended"
			],
			[
				"sub_",
				"sub_departments"
			],
			[
				"dep",
				"dep_id"
			],
			[
				"de",
				"dep_id"
			],
			[
				"AD",
				"ADMIN_DEPARTMENTS"
			],
			[
				"def",
				"default"
			],
			[
				"cu",
				"current_tables"
			],
			[
				"req",
				"req\trequire …"
			],
			[
				"boo",
				"bootstrap.php"
			],
			[
				"curr",
				"current_dpt"
			],
			[
				"is",
				"is_null"
			],
			[
				"j",
				"jsonColumns"
			],
			[
				"current_sub_",
				"current_sub_index"
			],
			[
				"plu",
				"plucked_dpt"
			],
			[
				"sw",
				"switcherMenuPosition"
			],
			[
				"x",
				"xwer"
			],
			[
				"_req",
				"_request"
			],
			[
				"dark",
				"darkgrey"
			],
			[
				"dar",
				"darkorchid"
			],
			[
				"blu",
				"cadetblue"
			],
			[
				"blue",
				"powderblue"
			],
			[
				"deep",
				"deepskyblue"
			],
			[
				"ero",
				"error_log"
			],
			[
				"er",
				"error_log"
			],
			[
				"style",
				"style=\"color:red"
			],
			[
				"bg",
				"bg-opacity-75"
			],
			[
				"bt",
				"btnClose"
			]
		]
	},
	"buffers":
	[
		{
			"file": "admin/log/q/PDOx.md",
			"settings":
			{
				"buffer_size": 14066,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "admin/js/dt/dataTables.cellEdit.js",
			"settings":
			{
				"buffer_size": 15893,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "Searching 5855 files for \"MakeCellsEditable\"\n\nC:\\OSPanel\\domains\\antCMS.os\\admin\\js\\dt\\dataTables.cellEdit.js:\n   20   * For details please refer to: http://www.datatables.net\n   21   */\n   22: jQuery.fn.dataTable.Api.register('MakeCellsEditable()', function(settings) {\n   23      let table = this.table();\n   24      jQuery.fn.extend({\n\nC:\\OSPanel\\domains\\antCMS.os\\admin\\js\\dt\\dataTables.cellEdit_ORIGINAL.js:\n   22   */\n   23  \n   24: jQuery.fn.dataTable.Api.register('MakeCellsEditable()', function(settings) {\n   25      var table = this.table();\n   26  \n\nC:\\OSPanel\\domains\\antCMS.os\\admin\\js\\dt\\dtEditExample.js:\n    2  $(document).ready(function() {\n    3      table = $('#myAdvancedTable').DataTable();\n    4:     table.MakeCellsEditable({\n    5          \"onUpdate\": myCallbackFunction,\n    6          \"inputCss\": 'my-input-class',\n    .\n   54      if ($.fn.DataTable.isDataTable('#myAdvancedTable')) {\n   55          table.destroy();\n   56:         table.MakeCellsEditable(\"destroy\");\n   57      }\n   58  }\n\nC:\\OSPanel\\domains\\antCMS.os\\admin\\js\\dt\\standartDataTable.js:\n  121  //\n  122  //\n  123: table.MakeCellsEditable(\n  124      //\n  125      {\n  ...\n  232      if ($.fn.DataTable.isDataTable('#defaultDataTable')) {\n  233          table.destroy();\n  234:         table.MakeCellsEditable(\"destroy\");\n  235      }\n  236  }\n\n6 matches across 4 files\n\n\nSearching 5855 files for \"redb\"\n\nC:\\OSPanel\\domains\\antCMS.os\\admin\\core\\bootstrap.php:\n   11  // composer require smarty/smarty\n   12  // composer require twbs/bootstrap-icons\n   13: // composer require gabordemooij/redbean\n   14  \n   15  \n\nC:\\OSPanel\\domains\\antCMS.os\\admin\\log\\q\\php.php:\n   94  showSubSmartyOutput($DPT_SUB);\n   95  \n   96: use RedBeanPHP\\R;\n   97  R::setup('mysql:host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USER, DB_PASS);\n   98  \n\nC:\\OSPanel\\domains\\antCMS.os\\lib\\datatables\\datatables.js:\n 17653      var Base = C_lib.Base;\n 17654      var WordArray = C_lib.WordArray;\n 17655:     var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n 17656      var C_enc = C.enc;\n 17657      var Utf8 = C_enc.Utf8;\n .....\n 17668       * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n 17669       */\n 17670:     var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n 17671        /**\n 17672         * Configuration options.\n .....\n 17740        reset: function reset() {\n 17741          // Reset data buffer\n 17742:         BufferedBlockAlgorithm.reset.call(this);\n 17743  \n 17744          // Perform concrete-cipher logic\n .....\n 19038       * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n 19039       */\n 19040:     var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n 19041        /**\n 19042         * Resets this block algorithm's data buffer to its initial state.\n .....\n 19044         * @example\n 19045         *\n 19046:        *     bufferedBlockAlgorithm.reset();\n 19047         */\n 19048        reset: function reset() {\n .....\n 19058         * @example\n 19059         *\n 19060:        *     bufferedBlockAlgorithm._append('data');\n 19061:        *     bufferedBlockAlgorithm._append(wordArray);\n 19062         */\n 19063        _append: function _append(data) {\n .....\n 19082         * @example\n 19083         *\n 19084:        *     var processedData = bufferedBlockAlgorithm._process();\n 19085:        *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n 19086         */\n 19087        _process: function _process(doFlush) {\n .....\n 19134         * @example\n 19135         *\n 19136:        *     var clone = bufferedBlockAlgorithm.clone();\n 19137         */\n 19138        clone: function clone() {\n .....\n 19149       * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n 19150       */\n 19151:     var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n 19152        /**\n 19153         * Configuration options.\n .....\n 19179        reset: function reset() {\n 19180          // Reset data buffer\n 19181:         BufferedBlockAlgorithm.reset.call(this);\n 19182  \n 19183          // Perform concrete-hasher logic\n\nC:\\OSPanel\\domains\\antCMS.os\\lib\\datatables\\datatables.min.js:\n   26  \n   27  /*! pdfmake v0.2.7, @license MIT, @link http://pdfmake.org */\n   28: <skipped 90764 characters> ...k>>>8&255]<<8|w[255&P])^o[I++],r[i]=R,r[i+1]=D,r[i+2]=N,r[i+3]=W},keySize:8});r.AES=i._createHelper(R)}(),u.AES)},1582:function(r,i,o){\"use strict\";var u;o(7042),o(2222),o(1539),o(9714),o(561),r.exports=(u=o(757),o(3839),void(u.lib.Cipher||function(r){var i=u,o=i.lib,p=o.Base,g=o.WordArray,y=o.BufferedBlockAlgorithm,w=i.enc,_=(w.Utf8,w.Base64),x=i.algo.EvpKDF,k=o.Cipher=y.extend({cfg:p.extend(),createEncryptor:function createEncryptor(r,i){return this.create(this._ENC_XFORM_MODE,r,i)},createDecryptor:function createDecryptor(r,i){return this.create(this._DEC_XFORM_MODE,r,i)},init:function init(r,i... <skipped 6916 characters> ...++)o[u>>>2]|=(255&r.charCodeAt(u))<<24-u%4*8;return new x.init(o,i)}},I=k.Utf8={stringify:function stringify(r){try{return decodeURIComponent(escape(O.stringify(r)))}catch(r){throw new Error(\"Malformed UTF-8 data\")}},parse:function parse(r){return O.parse(unescape(encodeURIComponent(r)))}},B=w.BufferedBlockAlgorithm=_.extend({reset:function reset(){this._data=new x.init,this._nDataBytes=0},_append:function _append(r){\"string\"==typeof r&&(r=I.parse(r)),this._data.concat(r),this._nDataBytes+=r.sigBytes},_process:function _process(i){var o,u=this._data,p=u.words,g=u.sigBytes,y=this.blockSize,w=g/(4*y... <skipped 1119082 characters> ...\n   29  //# sourceMappingURL=pdfmake.min.js.map\n   30  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\composer\\autoload_psr4.php:\n   10      'Symfony\\\\Component\\\\VarDumper\\\\' => array($vendorDir . '/symfony/var-dumper'),\n   11      'Smarty\\\\' => array($vendorDir . '/smarty/smarty/src'),\n   12:     'RedBeanPHP\\\\' => array($vendorDir . '/gabordemooij/redbean/RedBeanPHP'),\n   13      'Buki\\\\' => array($vendorDir . '/izniburak/pdox/src'),\n   14  );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\composer\\autoload_static.php:\n   24          'R' => \n   25          array (\n   26:             'RedBeanPHP\\\\' => 11,\n   27          ),\n   28          'B' => \n   ..\n   45              0 => __DIR__ . '/..' . '/smarty/smarty/src',\n   46          ),\n   47:         'RedBeanPHP\\\\' => \n   48          array (\n   49:             0 => __DIR__ . '/..' . '/gabordemooij/redbean/RedBeanPHP',\n   50          ),\n   51          'Buki\\\\' => \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\composer\\installed.json:\n   54          },\n   55          {\n   56:             \"name\": \"gabordemooij/redbean\",\n   57              \"version\": \"v5.7.4\",\n   58              \"version_normalized\": \"5.7.4.0\",\n   59              \"source\": {\n   60                  \"type\": \"git\",\n   61:                 \"url\": \"https://github.com/gabordemooij/redbean.git\",\n   62                  \"reference\": \"274c426583d91b20a1e39968b2e20969ef83cd1d\"\n   63              },\n   64              \"dist\": {\n   65                  \"type\": \"zip\",\n   66:                 \"url\": \"https://api.github.com/repos/gabordemooij/redbean/zipball/274c426583d91b20a1e39968b2e20969ef83cd1d\",\n   67                  \"reference\": \"274c426583d91b20a1e39968b2e20969ef83cd1d\",\n   68                  \"shasum\": \"\"\n   ..\n   76              \"autoload\": {\n   77                  \"psr-4\": {\n   78:                     \"RedBeanPHP\\\\\": \"RedBeanPHP\"\n   79                  }\n   80              },\n   ..\n   86                  {\n   87                      \"name\": \"Gabor de Mooij\",\n   88:                     \"email\": \"gabor@redbeanphp.com\",\n   89:                     \"homepage\": \"https://redbeanphp.com\"\n   90                  }\n   91              ],\n   92:             \"description\": \"RedBeanPHP ORM\",\n   93:             \"homepage\": \"https://redbeanphp.com/\",\n   94              \"keywords\": [\n   95                  \"orm\"\n   96              ],\n   97              \"support\": {\n   98:                 \"issues\": \"https://github.com/gabordemooij/redbean/issues\",\n   99:                 \"source\": \"https://github.com/gabordemooij/redbean/tree/v5.7.4\"\n  100              },\n  101:             \"install-path\": \"../gabordemooij/redbean\"\n  102          },\n  103          {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\composer\\installed.php:\n   29              'dev_requirement' => false,\n   30          ),\n   31:         'gabordemooij/redbean' => array(\n   32              'pretty_version' => 'v5.7.4',\n   33              'version' => '5.7.4.0',\n   34              'reference' => '274c426583d91b20a1e39968b2e20969ef83cd1d',\n   35              'type' => 'library',\n   36:             'install_path' => __DIR__ . '/../gabordemooij/redbean',\n   37              'aliases' => array(),\n   38              'dev_requirement' => false,\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\README.markdown:\n    1: RedBeanPHP 5\n    2  ============\n    3  \n    4: [![Build Status](https://travis-ci.org/gabordemooij/redbean.svg?branch=master)](https://travis-ci.org/gabordemooij/redbean)\n    5  \n    6: RedBeanPHP is an easy to use ORM tool for PHP.\n    7  \n    8  * Automatically creates tables and columns as you go\n    .\n   13  ---------------------------\n   14  \n   15: Download RedBeanPHP from the website:\n   16  \n   17: https://redbeanphp.com/download\n   18  \n   19  Extract the archive and put it in your PHP project, voila!\n   ..\n   25  -----------------------------------------\n   26  \n   27: Just open your composer.json file and add the package name ```(e.g. \"gabordemooij/redbean\": \"dev-master\")``` in your require list.\n   28  \n   29  ```json\n   30  {\n   31      \"require\": {\n   32:         \"gabordemooij/redbean\": \"dev-master\"\n   33      }\n   34  }\n   ..\n   36  \n   37  **NOTE**: \n   38: You will find many examples on the RedBean website make use of RedBean's `R` class. Because of namespaced autoloading in Composer, this class will be available as `\\RedbeanPHP\\R` instead of `R`. If you desire to use the much shorter `R` alias, you can add a `use` statement at the beginning of your code:\n   39  \n   40  ```php\n   41: use \\RedBeanPHP\\R as R;\n   42  ```\n   43  **NOTE:**\n   44: It is important to note that when using RedBeanPHP with Composer, there are some extra precautions needed when working with [Models](https://redbeanphp.com/index.php?p=/models). Due to the namespace requirements of Composer, when creating Models we need to use the `SimpleModel` to extend, not `RedBean_SimpleModel`. Furthermore, we need to specify the namespace of the `SimpleModel`, so a full example of using a Model with RedBean with Composer is as follows:\n   45  \n   46  ```php\n   47: use \\RedBeanPHP\\R;\n   48  \n   49: class User extends \\RedBeanPHP\\SimpleModel\n   50  {\n   51      ...\n   52  }\n   53  ```\n   54: Notice that we also need to add the `use \\RedBeanPHP\\R` statement so that we can use the `R::` shortcut within the Model.\n   55  \n   56  \n   ..\n   58  -------------\n   59  \n   60: How we store a book object with RedBeanPHP:\n   61  ```php\n   62  $book = R::dispense(\"book\");\n   ..\n   72  ----------------\n   73  \n   74: For more information about RedBeanPHP please consult\n   75: the RedBeanPHP website:\n   76  \n   77: https://www.redbeanphp.com/\n   78  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\replica2-win.php:\n    1  <?php\n    2  \n    3: echo \"Welcome to Replica 2 Build Script for RedBeanPHP\\n\";\n    4  echo \"Now building your beans!\\n\";\n    5  echo \"-------------------------------------------\\n\";\n    .\n   12  echo \"Trying to create a directory called build to build the PHAR... \";\n   13  @mkdir('build');\n   14: @mkdir('build\\RedBeanPHP');\n   15  echo \"Done.\\n\";\n   16  \n   17: echo \"Trying to copy RedBeanPHP to build/RedBeanPHP... \";\n   18: @exec('xcopy .\\RedBeanPHP .\\build\\RedBeanPHP /e /y');\n   19  echo \"Done.\\n\";\n   20  \n   21  echo \"Moving loader to build folder... \";\n   22: @exec('move .\\build\\RedBeanPHP\\loader.php .\\build\\loader.php');\n   23  echo \"Done.\\n\";\n   24  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\replica2.php:\n    2  <?php\n    3  \n    4: echo \"Welcome to Replica 2 Build Script for RedBeanPHP\\n\";\n    5  echo \"Now building your beans!\\n\";\n    6  echo \"-------------------------------------------\\n\";\n    .\n   27  }\n   28  \n   29: define('DIR', 'RedBeanPHP/');\n   30  \n   31  addFile( DIR . 'Logger.php' );\n   ..\n   87  \n   88  //make some classes available for backward compatibility\n   89: class RedBean_SimpleModel extends \\RedBeanPHP\\SimpleModel {};\n   90  \n   91  if (!class_exists('R')) {\n   92: \tclass R extends \\RedBeanPHP\\Facade{};\n   93  }\n   94  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Adapter.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    6   * Adapter Interface.\n    7:  * Describes the API for a RedBeanPHP Database Adapter.\n    8   * This interface defines the API contract for\n    9:  * a RedBeanPHP Database Adapter.\n   10   *\n   11:  * @file    RedBeanPHP/Adapter.php\n   12:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   13   * @license BSD/GPLv2\n   14   *\n   15   * @copyright\n   16:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   17   * This source file is subject to the BSD/GPLv2 License that is bundled\n   18   * with this source code in the file license.txt.\n   ..\n  144  \t * Returns the original database resource. This is useful if you want to\n  145  \t * perform operations on the driver directly instead of working with the\n  146: \t * adapter. RedBean will only access the adapter and never to talk\n  147  \t * directly to the driver though.\n  148  \t *\n  ...\n  152  \n  153  \t/**\n  154: \t * This method is part of the RedBean Transaction Management\n  155  \t * mechanisms.\n  156  \t * Starts a transaction.\n  ...\n  161  \n  162  \t/**\n  163: \t * This method is part of the RedBean Transaction Management\n  164  \t * mechanisms.\n  165  \t * Commits the transaction.\n  ...\n  170  \n  171  \t/**\n  172: \t * This method is part of the RedBean Transaction Management\n  173  \t * mechanisms.\n  174  \t * Rolls back the transaction.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\AssociationManager.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\RedException\\SQL as SQLException;\n    9  \n   10  /**\n   ..\n   15   * can also be related to multiple beans.\n   16   *\n   17:  * @file    RedBeanPHP/AssociationManager.php\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license BSD/GPLv2\n   20   *\n   21   * @copyright\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n  159  \t * instance you'll need to pass a ToolBox object.\n  160  \t *\n  161: \t * @param ToolBox $tools toolbox supplying core RedBeanPHP objects\n  162  \t */\n  163  \tpublic function __construct( ToolBox $tools )\n  164  \t{\n  165: \t\t$this->oodb    = $tools->getRedBean();\n  166  \t\t$this->adapter = $tools->getDatabaseAdapter();\n  167  \t\t$this->writer  = $tools->getWriter();\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\BeanCollection.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\Cursor as Cursor;\n    6: use RedBeanPHP\\Repository as Repository;\n    7  \n    8  /**\n    .\n   20   * alternative though.\n   21   *\n   22:  * @file    RedBeanPHP/BeanCollection.php\n   23:  * @author  Gabor de Mooij and the RedBeanPHP community\n   24   * @license BSD/GPLv2\n   25   *\n   26   * @copyright\n   27:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   28   * This source file is subject to the BSD/GPLv2 License that is bundled\n   29   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\BeanHelper.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\ToolBox as ToolBox;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7  \n    8  /**\n    .\n   11   * Interface for Bean Helper.\n   12   * A little bolt that glues the whole machinery together.\n   13:  * The Bean Helper is passed to the OODB RedBeanPHP Object to\n   14   * facilitate the creation of beans and providing them with\n   15   * a toolbox. The Helper also facilitates the FUSE feature,\n   ..\n   18   * fit your business application needs.\n   19   *\n   20:  * @file    RedBeanPHP/IBeanHelper.php\n   21:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   22   * @license BSD/GPLv2\n   23   *\n   24   * @copyright\n   25:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   26   * This source file is subject to the BSD/GPLv2 License that is bundled\n   27   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Cursor.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    .\n    9   * be quite large. This interface describes the API of a database\n   10   * cursor. There can be multiple implementations of the Cursor,\n   11:  * by default RedBeanPHP offers the PDOCursor for drivers shipping\n   12:  * with RedBeanPHP and the NULLCursor.\n   13   *\n   14:  * @file    RedBeanPHP/Cursor.php\n   15:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   16   * @license BSD/GPLv2\n   17   *\n   18   * @copyright\n   19:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   20   * This source file is subject to the BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Driver.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    .\n    8   * for database drivers.\n    9   *\n   10:  * @file       RedBeanPHP/Driver.php\n   11:  * @author     Gabor de Mooij and the RedBeanPHP Community\n   12   * @license    BSD/GPLv2\n   13   *\n   14   * @copyright\n   15:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   16   * This source file is subject to the BSD/GPLv2 License that is bundled\n   17   * with this source code in the file license.txt.\n   ..\n  132  \t * </code>\n  133  \t *\n  134: \t * The example above illustrates how to use the RedBeanPHP\n  135  \t * query debugger through the facade.\n  136  \t *\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\DuplicationManager.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\ToolBox as ToolBox;\n    6: use RedBeanPHP\\AssociationManager as AssociationManager;\n    7: use RedBeanPHP\\OODB as OODB;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   10  \n   11  /**\n   ..\n   23   * used internally by exportAll().\n   24   *\n   25:  * @file    RedBeanPHP/DuplicationManager.php\n   26:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   27   * @license BSD/GPLv2\n   28   *\n   29   * @copyright\n   30:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   31   * This source file is subject to the BSD/GPLv2 License that is bundled\n   32   * with this source code in the file license.txt.\n   ..\n   47  \t * @var OODB\n   48  \t */\n   49: \tprotected $redbean;\n   50  \n   51  \t/**\n   ..\n   75  \n   76  \t/**\n   77: \t * Copies the shared beans in a bean, i.e. all the sharedBean-lists.\n   78  \t *\n   79  \t * @param OODBBean $copy   target bean to copy lists to\n   ..\n   83  \t * @return void\n   84  \t */\n   85: \tprivate function copySharedBeans( OODBBean $copy, $shared, $beans )\n   86  \t{\n   87  \t\t$copy->$shared = array();\n   ..\n  126  \t\t$type = $bean->getMeta( 'type' );\n  127  \n  128: \t\t$copy = $this->redbean->dispense( $type );\n  129  \t\t$copy->setMeta( 'sys.dup-from-id', $bean->id );\n  130  \t\t$copy->setMeta( 'sys.old-id', $bean->id );\n  ...\n  232  \t\t\tif ( $this->hasSharedList( $type, $table ) ) {\n  233  \t\t\t\tif ( $beans = $bean->$shared ) {\n  234: \t\t\t\t\t$this->copySharedBeans( $copy, $shared, $beans );\n  235  \t\t\t\t}\n  236  \t\t\t} elseif ( $this->hasOwnList( $type, $table ) ) {\n  ...\n  259  \t{\n  260  \t\t$this->toolbox            = $toolbox;\n  261: \t\t$this->redbean            = $toolbox->getRedBean();\n  262: \t\t$this->associationManager = $this->redbean->getAssociationManager();\n  263  \t}\n  264  \n  ...\n  439  \t * export arrays. The default mode is 'snake case' but this leaves the\n  440  \t * keys as-is, because 'snake' is the default case style used by\n  441: \t * RedBeanPHP in the database. You can set this to 'camel' for\n  442  \t * camel cased keys or 'dolphin' (same as camelcase but id will be\n  443  \t * converted to ID instead of Id).\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Facade.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\QueryWriter as QueryWriter;\n    6: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    7: use RedBeanPHP\\RedException\\SQL as SQLException;\n    8: use RedBeanPHP\\Logger as Logger;\n    9: use RedBeanPHP\\Logger\\RDefault as RDefault;\n   10: use RedBeanPHP\\Logger\\RDefault\\Debug as Debug;\n   11: use RedBeanPHP\\Adapter as Adapter;\n   12: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   13: use RedBeanPHP\\RedException as RedException;\n   14: use RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper as SimpleFacadeBeanHelper;\n   15: use RedBeanPHP\\Driver\\RPDO as RPDO;\n   16: use RedBeanPHP\\Util\\MultiLoader as MultiLoader;\n   17: use RedBeanPHP\\Util\\Transaction as Transaction;\n   18: use RedBeanPHP\\Util\\Dump as Dump;\n   19: use RedBeanPHP\\Util\\DispenseHelper as DispenseHelper;\n   20: use RedBeanPHP\\Util\\ArrayTool as ArrayTool;\n   21: use RedBeanPHP\\Util\\QuickExport as QuickExport;\n   22: use RedBeanPHP\\Util\\MatchUp as MatchUp;\n   23: use RedBeanPHP\\Util\\Look as Look;\n   24: use RedBeanPHP\\Util\\Diff as Diff;\n   25: use RedBeanPHP\\Util\\Tree as Tree;\n   26: use RedBeanPHP\\Util\\Feature;\n   27  \n   28  /**\n   29:  * RedBean Facade\n   30   *\n   31   * Version Information\n   32:  * RedBean Version @version 5.7\n   33   *\n   34   * This class hides the object landscape of\n   35:  * RedBeanPHP behind a single letter class providing\n   36   * almost all functionality with simple static calls.\n   37   *\n   38:  * @file    RedBeanPHP/Facade.php\n   39:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   40   * @license BSD/GPLv2\n   41   *\n   42   * @copyright\n   43:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   44   * This source file is subject to the BSD/GPLv2 License that is bundled\n   45   * with this source code in the file license.txt.\n   ..\n   48  {\n   49  \t/**\n   50: \t * RedBeanPHP version constant.\n   51  \t */\n   52: \tconst C_REDBEANPHP_VERSION = '5.7';\n   53  \n   54  \t/**\n   ..\n   60  \t * @var OODB\n   61  \t */\n   62: \tprivate static $redbean;\n   63  \n   64  \t/**\n   ..\n  154  \tprivate static function query( $method, $sql, $bindings )\n  155  \t{\n  156: \t\tif ( !self::$redbean->isFrozen() ) {\n  157  \t\t\ttry {\n  158  \t\t\t\t$rs = Facade::$adapter->$method( $sql, $bindings );\n  ...\n  196  \n  197  \t/**\n  198: \t * Returns the RedBeanPHP version string.\n  199: \t * The RedBeanPHP version string always has the same format \"X.Y\"\n  200  \t * where X is the major version number and Y is the minor version number.\n  201  \t * Point releases are not mentioned in the version string.\n  ...\n  205  \tpublic static function getVersion()\n  206  \t{\n  207: \t\treturn self::C_REDBEANPHP_VERSION;\n  208  \t}\n  209  \n  ...\n  239  \n  240  \t/**\n  241: \t * Kickstarts redbean for you. This method should be called before you start using\n  242: \t * RedBeanPHP. The Setup() method can be called without any arguments, in this case it will\n  243  \t * try to create a SQLite database in /tmp called red.db (this only works on UNIX-like systems).\n  244  \t *\n  ...\n  382  \tpublic static function transaction( $callback )\n  383  \t{\n  384: \t\tif ( !self::$allowFluidTransactions && !self::$redbean->isFrozen() ) return FALSE;\n  385  \t\treturn Transaction::transaction( self::$adapter, $callback );\n  386  \t}\n  ...\n  420  \n  421  \t\tif ( !is_null( $beanHelper ) ) {\n  422: \t\t\tself::$toolboxes[$key]->getRedBean()->setBeanHelper( $beanHelper );\n  423  \t\t}\n  424  \t}\n  425  \n  426  \t/**\n  427: \t * Creates a toolbox. This method can be called if you want to use redbean non-static.\n  428  \t * It has the same interface as R::setup(). The createToolbox() method can be called\n  429  \t * without any arguments, in this case it will try to create a SQLite database in\n  ...\n  484  \t\t\tthrow new RedException( 'Unsupported database ('.$wkey.').' );\n  485  \t\t}\n  486: \t\t$writerClass = '\\\\RedBeanPHP\\\\QueryWriter\\\\'.$writers[$wkey];\n  487  \t\t/** @var AQueryWriter $writer */\n  488  \t\t$writer      = new $writerClass( $adapter );\n  489: \t\t$redbean     = new OODB( $writer, $frozen );\n  490  \n  491  \t\tif ( $partialBeans ) {\n  492: \t\t\t$redbean->getCurrentRepository()->usePartialBeans( $partialBeans );\n  493  \t\t}\n  494  \n  495: \t\treturn new ToolBox( $redbean, $adapter, $writer );\n  496  \t}\n  497  \n  ...\n  626  \t * OODBBean Bean Object $bean and stores it\n  627  \t * in the database. If the database schema is not compatible\n  628: \t * with this bean and RedBean runs in fluid mode the schema\n  629  \t * will be altered to store the bean correctly.\n  630  \t * If the database schema is not compatible with this bean and\n  631: \t * RedBean runs in frozen mode it will throw an exception.\n  632  \t * This function returns the primary key ID of the inserted\n  633  \t * bean.\n  ...\n  653  \t *\n  654  \t * If the second parameter is set to TRUE and\n  655: \t * Hybrid mode is allowed (default OFF for novice), then RedBeanPHP\n  656  \t * will automatically temporarily switch to fluid mode to attempt to store the\n  657  \t * bean in case of an SQLException.\n  ...\n  666  \t\t$result = NULL;\n  667  \t\ttry {\n  668: \t\t\t$result = self::$redbean->store( $bean );\n  669  \t\t} catch (SQLException $exception) {\n  670: \t\t\t$wasFrozen = self::$redbean->isFrozen();\n  671  \t\t\tif ( !self::$allowHybridMode || !$unfreezeIfNeeded ) throw $exception;\n  672  \t\t\tself::freeze( FALSE );\n  673: \t\t\t$result = self::$redbean->store( $bean );\n  674  \t\t\tself::freeze( $wasFrozen );\n  675  \t\t}\n  ...\n  692  \tpublic static function freeze( $tf = TRUE )\n  693  \t{\n  694: \t\tself::$redbean->freeze( $tf );\n  695  \t}\n  696  \n  ...\n  700  \t * for loading a one-to-one relation. In a typical 1-1 relation,\n  701  \t * you have two records sharing the same primary key.\n  702: \t * RedBeanPHP has only limited support for 1-1 relations.\n  703  \t * In general it is recommended to use 1-N for this.\n  704  \t *\n  ...\n  716  \tpublic static function loadMulti( $types, $id )\n  717  \t{\n  718: \t\treturn MultiLoader::load( self::$redbean, $types, $id );\n  719  \t}\n  720  \n  ...\n  723  \t * It searches for a OODBBean Bean Object in the\n  724  \t * database. It does not matter how this bean has been stored.\n  725: \t * RedBean uses the primary key ID $id and the string $type\n  726  \t * to find the bean. The $type specifies what kind of bean you\n  727  \t * are looking for; this is the same type as used with the\n  728: \t * dispense() function. If RedBean finds the bean it will return\n  729  \t * the OODB Bean object; if it cannot find the bean\n  730: \t * RedBean will return a new bean of type $type and with\n  731  \t * primary key ID 0. In the latter case it acts basically the\n  732  \t * same as dispense().\n  ...\n  761  \t{\n  762  \t\tif ( $snippet !== NULL ) self::$writer->setSQLSelectSnippet( $snippet );\n  763: \t\t$bean = self::$redbean->load( $type, $id );\n  764  \t\treturn $bean;\n  765  \t}\n  ...\n  868  \t{\n  869  \t\tif ( is_string( $beanOrType ) ) return self::trash( self::load( $beanOrType, $id ) );\n  870: \t\treturn self::$redbean->trash( $beanOrType );\n  871  \t}\n  872  \n  873  \t/**\n  874: \t * Dispenses a new RedBean OODB Bean for use with\n  875: \t * the rest of the methods. RedBeanPHP thinks in beans, the bean is the\n  876: \t * primary way to interact with RedBeanPHP and the database managed by\n  877: \t * RedBeanPHP. To load, store and delete data from the database using RedBeanPHP\n  878: \t * you exchange these RedBeanPHP OODB Beans. The only exception to this rule\n  879  \t * are the raw query methods like R::getCell() or R::exec() and so on.\n  880  \t * The dispense method is the 'preferred way' to create a new bean.\n  ...\n  919  \tpublic static function dispense( $typeOrBeanArray, $num = 1, $alwaysReturnArray = FALSE )\n  920  \t{\n  921: \t\treturn DispenseHelper::dispense( self::$redbean, $typeOrBeanArray, $num, $alwaysReturnArray );\n  922  \t}\n  923  \n  ...\n  952  \tpublic static function dispenseAll( $order, $onlyArrays = FALSE )\n  953  \t{\n  954: \t\treturn DispenseHelper::dispenseAll( self::$redbean, $order, $onlyArrays );\n  955  \t}\n  956  \n  ...\n  990  \t/**\n  991  \t * Finds beans using a type and optional SQL statement.\n  992: \t * As with most Query tools in RedBean you can provide values to\n  993  \t * be inserted in the SQL statement by populating the value\n  994  \t * array parameter; you can either use the question mark notation\n  ...\n 1121  \t *\n 1122  \t * If you want to re-map your beans, so you can use $movie->ownReviewList without\n 1123: \t * having RedBeanPHP executing an SQL query you can use the fourth parameter to\n 1124  \t * define a selection of remapping closures.\n 1125  \t *\n ....\n 1192  \tpublic static function batch( $type, $ids )\n 1193  \t{\n 1194: \t\treturn self::$redbean->batch( $type, $ids );\n 1195  \t}\n 1196  \n ....\n 1208  \tpublic static function loadAll( $type, $ids )\n 1209  \t{\n 1210: \t\treturn self::$redbean->batch( $type, $ids );\n 1211  \t}\n 1212  \n ....\n 1226  \n 1227  \t/**\n 1228: \t * Convenience function to fire an SQL query using the RedBeanPHP\n 1229  \t * database adapter. This method allows you to directly query the\n 1230  \t * database without having to obtain an database adapter instance first.\n ....\n 1244  \n 1245  \t/**\n 1246: \t * Convenience function to fire an SQL query using the RedBeanPHP\n 1247  \t * database adapter. This method allows you to directly query the\n 1248  \t * database without having to obtain an database adapter instance first.\n ....\n 1261  \n 1262  \t/**\n 1263: \t * Convenience function to fire an SQL query using the RedBeanPHP\n 1264  \t * database adapter. This method allows you to directly query the\n 1265  \t * database without having to obtain an database adapter instance first.\n ....\n 1278  \n 1279  \t/**\n 1280: \t * Convenience function to fire an SQL query using the RedBeanPHP\n 1281  \t * database adapter. This method allows you to directly query the\n 1282  \t * database without having to obtain an database adapter instance first.\n ....\n 1295  \n 1296  \t/**\n 1297: \t * Convenience function to fire an SQL query using the RedBeanPHP\n 1298  \t * database adapter. This method allows you to directly query the\n 1299  \t * database without having to obtain an database adapter instance first.\n ....\n 1331  \n 1332  \t/**\n 1333: \t * Convenience function to fire an SQL query using the RedBeanPHP\n 1334  \t * database adapter. This method allows you to directly query the\n 1335  \t * database without having to obtain an database adapter instance first.\n ....\n 1447  \t * The following options are accepted:\n 1448  \t *\n 1449: \t * * 'default' RedBeanPHP by default enforces Snake Case (i.e. book_id is_valid )\n 1450  \t * * 'camel'   Camel Case   (i.e. bookId isValid   )\n 1451  \t * * 'dolphin' Dolphin Case (i.e. bookID isValid   ) Like CamelCase but ID is written all uppercase\n 1452  \t *\n 1453: \t * @warning RedBeanPHP transforms camelCase to snake_case using a slightly different\n 1454  \t * algorithm, it also converts isACL to is_acl (not is_a_c_l) and bookID to book_id.\n 1455  \t * Due to information loss this cannot be corrected. However if you might try\n ....\n 1506  \tpublic static function convertToBeans( $type, $rows, $metamask = NULL )\n 1507  \t{\n 1508: \t\treturn self::$redbean->convertToBeans( $type, $rows, $metamask );\n 1509  \t}\n 1510  \n ....\n 1521  \t{\n 1522  \t\tif ( !count( $row ) ) return NULL;\n 1523: \t\t$beans = self::$redbean->convertToBeans( $type, array( $row ), $metamask );\n 1524  \t\t$bean  = reset( $beans );\n 1525  \t\treturn $bean;\n ....\n 1572  \t\t$rows = self::query( 'get', $sql, $bindings );\n 1573  \t\t$beans = array();\n 1574: \t\tif (count($rows)) $beans = self::$redbean->convertToBeans( $type, $rows, $metamask );\n 1575  \t\tif ($autoExtract && is_array($metamask)) {\n 1576  \t\t\t$values = array();\n ....\n 1810  \tpublic static function wipe( $beanType )\n 1811  \t{\n 1812: \t\treturn Facade::$redbean->wipe( $beanType );\n 1813  \t}\n 1814  \n ....\n 1826  \tpublic static function count( $type, $addSQL = '', $bindings = array() )\n 1827  \t{\n 1828: \t\treturn Facade::$redbean->count( $type, $addSQL, $bindings );\n 1829  \t}\n 1830  \n ....\n 1844  \t\tself::$writer             = self::$toolbox->getWriter();\n 1845  \t\tself::$adapter            = self::$toolbox->getDatabaseAdapter();\n 1846: \t\tself::$redbean            = self::$toolbox->getRedBean();\n 1847  \t\tself::$finder             = new Finder( self::$toolbox );\n 1848  \t\tself::$associationManager = new AssociationManager( self::$toolbox );\n 1849  \t\tself::$tree               = new Tree( self::$toolbox );\n 1850: \t\tself::$redbean->setAssociationManager( self::$associationManager );\n 1851  \t\tself::$labelMaker         = new LabelMaker( self::$toolbox );\n 1852  \t\t$helper                   = new SimpleModelHelper();\n 1853: \t\t$helper->attachEventListeners( self::$redbean );\n 1854: \t\tif (self::$redbean->getBeanHelper() === NULL) {\n 1855: \t\t\tself::$redbean->setBeanHelper( new SimpleFacadeBeanHelper );\n 1856  \t\t}\n 1857  \t\tself::$duplicationManager = new DuplicationManager( self::$toolbox );\n ....\n 1879  \t * </code>\n 1880  \t *\n 1881: \t * The example above illustrates how transactions in RedBeanPHP are used.\n 1882  \t * In this example 2 beans are stored or nothing is stored at all.\n 1883  \t * It's not possible for this piece of code to store only half of the beans.\n ....\n 1896  \tpublic static function begin()\n 1897  \t{\n 1898: \t\tif ( !self::$allowFluidTransactions && !self::$redbean->isFrozen() ) return FALSE;\n 1899  \t\tself::$adapter->startTransaction();\n 1900  \t\treturn TRUE;\n ....\n 1920  \t * </code>\n 1921  \t *\n 1922: \t * The example above illustrates how transactions in RedBeanPHP are used.\n 1923  \t * In this example 2 beans are stored or nothing is stored at all.\n 1924  \t * It's not possible for this piece of code to store only half of the beans.\n ....\n 1937  \tpublic static function commit()\n 1938  \t{\n 1939: \t\tif ( !self::$allowFluidTransactions && !self::$redbean->isFrozen() ) return FALSE;\n 1940  \t\tself::$adapter->commit();\n 1941  \t\treturn TRUE;\n ....\n 1961  \t * </code>\n 1962  \t *\n 1963: \t * The example above illustrates how transactions in RedBeanPHP are used.\n 1964  \t * In this example 2 beans are stored or nothing is stored at all.\n 1965  \t * It's not possible for this piece of code to store only half of the beans.\n ....\n 1978  \tpublic static function rollback()\n 1979  \t{\n 1980: \t\tif ( !self::$allowFluidTransactions && !self::$redbean->isFrozen() ) return FALSE;\n 1981  \t\tself::$adapter->rollback();\n 1982  \t\treturn TRUE;\n ....\n 2122  \t{\n 2123  \t\tif ( $alsoDeleteTables ) {\n 2124: \t\t\tif ( !self::$redbean->isFrozen() ) {\n 2125  \t\t\t\tself::$writer->wipeAll();\n 2126  \t\t\t}\n ....\n 2139  \t *\n 2140  \t * If the second parameter is set to TRUE and\n 2141: \t * Hybrid mode is allowed (default OFF for novice), then RedBeanPHP\n 2142  \t * will automatically temporarily switch to fluid mode to attempt to store the\n 2143  \t * bean in case of an SQLException.\n ....\n 2266  \n 2267  \t/**\n 2268: \t * Generates and returns an ENUM value. This is how RedBeanPHP handles ENUMs.\n 2269  \t * Either returns a (newly created) bean representing the desired ENUM\n 2270  \t * value or returns a list of all enums for the type.\n ....\n 2388  \t * Sets the Query Writer you want to use.\n 2389  \t * The Query Writer writes and executes database queries using\n 2390: \t * the database adapter. It turns RedBeanPHP 'commands' into\n 2391  \t * database 'statements'.\n 2392  \t *\n ....\n 2402  \t/**\n 2403  \t * Sets the OODB you want to use.\n 2404: \t * The RedBeanPHP Object oriented database is the main RedBeanPHP\n 2405: \t * interface that allows you to store and retrieve RedBeanPHP\n 2406  \t * objects (i.e. beans).\n 2407  \t *\n 2408: \t * @param OODB $redbean Object Database for facade to use\n 2409  \t */\n 2410: \tpublic static function setRedBean( OODB $redbean )\n 2411  \t{\n 2412: \t\tself::$redbean = $redbean;\n 2413  \t}\n 2414  \n ....\n 2477  \t * @return OODB\n 2478  \t */\n 2479: \tpublic static function getRedBean()\n 2480  \t{\n 2481: \t\treturn self::$redbean;\n 2482  \t}\n 2483  \n ....\n 2503  \t * Returns the components in the following order:\n 2504  \t *\n 2505: \t * # OODB instance (getRedBean())\n 2506  \t * # Database Adapter\n 2507  \t * # Query Writer\n ....\n 2512  \tpublic static function getExtractedToolbox()\n 2513  \t{\n 2514: \t\treturn array( self::$redbean, self::$adapter, self::$writer, self::$toolbox );\n 2515  \t}\n 2516  \n ....\n 2632  \tpublic static function bindFunc( $mode, $field, $function, $isTemplate = FALSE )\n 2633  \t{\n 2634: \t\tself::$redbean->bindFunc( $mode, $field, $function, $isTemplate );\n 2635  \t}\n 2636  \n ....\n 2902  \tpublic static function usePartialBeans( $yesNoBeans )\n 2903  \t{\n 2904: \t\treturn self::$redbean->getCurrentRepository()->usePartialBeans( $yesNoBeans );\n 2905  \t}\n 2906  \n ....\n 2944  \t/**\n 2945  \t * MatchUp is a powerful productivity boosting method that can replace simple control\n 2946: \t * scripts with a single RedBeanPHP command. Typically, matchUp() is used to\n 2947  \t * replace login scripts, token generation scripts and password reset scripts.\n 2948  \t * The MatchUp method takes a bean type, an SQL query snippet (starting at the WHERE clause),\n ....\n 2983  \t * The instance will be configured with the current toolbox.\n 2984  \t *\n 2985: \t * In previous versions of RedBeanPHP you had to use:\n 2986  \t * R::getLook()->look() instead of R::look(). However to improve useability of the\n 2987  \t * library the look() function can now directly be invoked from the facade.\n ....\n 3032  \t * newline character specified in the last parameter for readability.\n 3033  \t *\n 3034: \t * In previous versions of RedBeanPHP you had to use:\n 3035  \t * R::getLook()->look() instead of R::look(). However to improve useability of the\n 3036  \t * library the look() function can now directly be invoked from the facade.\n ....\n 3088  \n 3089  \t/**\n 3090: \t * The gentleman's way to register a RedBeanPHP ToolBox instance\n 3091  \t * with the facade. Stores the toolbox in the static toolbox\n 3092  \t * registry of the facade class. This allows for a neat and\n ....\n 3104  \n 3105  \t/**\n 3106: \t * The gentleman's way to remove a RedBeanPHP ToolBox instance\n 3107  \t * from the facade. Removes the toolbox identified by\n 3108  \t * the specified key in the static toolbox\n ....\n 3311  \n 3312  \t/**\n 3313: \t * Globally available service method for RedBeanPHP.\n 3314  \t * Converts a snake cased string to a camel cased string.\n 3315  \t * If the parameter is an array, the keys will be converted.\n ....\n 3338  \n 3339  \t/**\n 3340: \t * Globally available service method for RedBeanPHP.\n 3341  \t * Converts a camel cased string to a snake cased string.\n 3342  \t * If the parameter is an array, the keys will be converted.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Finder.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  \n    6  /**\n    7:  * RedBeanPHP Finder.\n    8   * Service class to find beans. For the most part this class\n    9   * offers user friendly utility methods for interacting with the\n   ..\n   11   * used to find beans using plain old SQL queries.\n   12   *\n   13:  * @file    RedBeanPHP/Finder.php\n   14:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   15   * @license BSD/GPLv2\n   16   *\n   17   * @copyright\n   18:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   19   * This source file is subject to the BSD/GPLv2 License that is bundled\n   20   * with this source code in the file license.txt.\n   ..\n   30  \t * @var OODB\n   31  \t */\n   32: \tprotected $redbean;\n   33  \n   34  \t/**\n   ..\n   41  \t{\n   42  \t\t$this->toolbox = $toolbox;\n   43: \t\t$this->redbean = $toolbox->getRedBean();\n   44  \t}\n   45  \n   ..\n  178  \t/**\n  179  \t * Finds a bean using a type and a where clause (SQL).\n  180: \t * As with most Query tools in RedBean you can provide values to\n  181  \t * be inserted in the SQL statement by populating the value\n  182  \t * array parameter; you can either use the question mark notation\n  ...\n  197  \t\t}\n  198  \n  199: \t\treturn $this->redbean->find( $type, array(), $sql, $bindings );\n  200  \t}\n  201  \n  ...\n  293  \n  294  \t\tif ( empty( $foundBeans ) ) {\n  295: \t\t\treturn array( $this->redbean->dispense( $type ) );\n  296  \t\t} else {\n  297  \t\t\treturn $foundBeans;\n  ...\n  313  \tpublic function findCollection( $type, $sql, $bindings = array() )\n  314  \t{\n  315: \t\treturn $this->redbean->findCollection( $type, $sql, $bindings );\n  316  \t}\n  317  \n  ...\n  344  \t\t\t}\n  345  \n  346: \t\t\t$bean = $this->redbean->dispense( $type );\n  347  \t\t\t$bean->import( $like );\n  348: \t\t\t$this->redbean->store( $bean );\n  349  \t\t\t$hasBeenCreated = true;\n  350  \t\t\treturn $bean;\n  ...\n  360  \t * of the query using an AND operator. Note that this is as far as this method\n  361  \t * can go, there is no way to glue additional SQL using an OR-condition.\n  362: \t * This method provides access to an underlying mechanism in the RedBeanPHP architecture\n  363  \t * to find beans using criteria sets. However, please do not use this method\n  364  \t * for complex queries, use plain SQL instead ( the regular find method ) as it is\n  ...\n  375  \tpublic function findLike( $type, $conditions = array(), $sql = '', $bindings = array() )\n  376  \t{\n  377: \t\treturn $this->redbean->find( $type, $conditions, $sql, $bindings );\n  378  \t}\n  379  \n  ...\n  396  \t *\n  397  \t * If you want to re-map your beans, so you can use $movie->ownReviewList without\n  398: \t * having RedBeanPHP executing an SQL query you can use the fourth parameter to\n  399  \t * define a selection of remapping closures.\n  400  \t *\n  ...\n  454  \t * and bean oriented approaches but it is really on the edge of both worlds. You can safely\n  455  \t * use this function to load additional records as beans in paginated context, let's say\n  456: \t * 50-250 records. Anything above that will gradually perform worse. RedBeanPHP was never\n  457  \t * intended to replace SQL but offer tooling to integrate SQL with object oriented\n  458  \t * designs. If you have come to this function, you have reached the final border between\n  ...\n  473  \t\tif ( is_null( $sql ) ) {\n  474  \t\t\t$beans = array();\n  475: \t\t\tforeach( $types as $type ) $beans[$type] = $this->redbean->find( $type );\n  476  \t\t} else {\n  477  \t\t\tif ( !is_array( $sql ) ) {\n  ...\n  523  \t\t\t$beans = array();\n  524  \t\t\tforeach( $wannaBeans as $type => $wannabees ) {\n  525: \t\t\t\t$beans[$type] = $this->redbean->convertToBeans( $type, $wannabees );\n  526  \t\t\t}\n  527  \t\t}\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Functions.php:\n    2  \n    3  /**\n    4:  * Support functions for RedBeanPHP.\n    5:  * Additional convenience shortcut functions for RedBeanPHP.\n    6   *\n    7:  * @file    RedBeanPHP/Functions.php\n    8:  * @author  Gabor de Mooij and the RedBeanPHP community\n    9   * @license BSD/GPLv2\n   10   *\n   11   * @copyright\n   12:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   13   * This source file is subject to the BSD/GPLv2 License that is bundled\n   14   * with this source code in the file license.txt.\n   ..\n   35  \tfunction EID($enumName)\n   36  \t{\n   37: \t\treturn \\RedBeanPHP\\Facade::enum( $enumName )->id;\n   38  \t}\n   39  \n   ..\n   52  \tfunction dmp( $list )\n   53  \t{\n   54: \t\tprint_r( \\RedBeanPHP\\Facade::dump( $list ) );\n   55  \t}\n   56  }\n   ..\n   63  \tfunction genslots( $slots, $tpl = NULL )\n   64  \t{\n   65: \t\treturn \\RedBeanPHP\\Facade::genSlots( $slots, $tpl );\n   66  \t}\n   67  }\n   ..\n   74  \tfunction array_flatten( $array )\n   75  \t{\n   76: \t\treturn \\RedBeanPHP\\Facade::flat( $array );\n   77  \t}\n   78  }\n   ..\n  130  \n  131  \tfunction DBPrefix( $prefix = '\\\\Model' ) {\n  132: \t\treturn new \\RedBeanPHP\\BeanHelper\\DynamicBeanHelper( $prefix );\n  133  \t}\n  134  }\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\LabelMaker.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\ToolBox as ToolBox;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7  \n    8  /**\n    .\n   14   * beans.\n   15   *\n   16:  * @file       RedBeanPHP/LabelMaker.php\n   17:  * @author     Gabor de Mooij and the RedBeanPHP Community\n   18   * @license    BSD/GPLv2\n   19   *\n   20   * @copyright\n   21:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   22   * This source file is subject to the BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n   59  \t\t$labelBeans = array();\n   60  \t\tforeach ( $labels as $label ) {\n   61: \t\t\t$labelBean       = $this->toolbox->getRedBean()->dispense( $type );\n   62  \t\t\t$labelBean->name = $label;\n   63  \t\t\t$labelBeans[]    = $labelBean;\n   ..\n  138  \tpublic function enum( $enum )\n  139  \t{\n  140: \t\t$oodb = $this->toolbox->getRedBean();\n  141  \n  142  \t\tif ( strpos( $enum, ':' ) === FALSE ) {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\license.txt:\n    1  \n    2: RedBeanPHP \n    3  Written by Gabor de Mooij\n    4  \n    5: RedBean is DUAL Licensed New BSD and GPLv2. You may choose the license that fits\n    6  best for your project.\n    7  \n    .\n   15  notice, this list of conditions and the following disclaimer in the\n   16  documentation and/or other materials provided with the distribution.\n   17: * Neither the name of RedBeanPHP nor the\n   18  names of its contributors may be used to endorse or promote products\n   19  derived from this software without specific prior written permission.\n   ..\n   31  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   32  \n   33: RedBeanPHP is Written by Gabor de Mooij (G.J.G.T de Mooij) Copyright (c) 2018.\n   34  \n   35  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\loader.php:\n    2  \n    3  //Set the directory path\n    4: define('REDBEANPHP_MAIN_DIR', 'phar://rb.phar/RedBeanPHP/');\n    5  \n    6  //Load Database drivers\n    7: require( REDBEANPHP_MAIN_DIR . 'Logger.php' );\n    8: require( REDBEANPHP_MAIN_DIR . 'Logger/RDefault.php' );\n    9: require( REDBEANPHP_MAIN_DIR . 'Logger/RDefault/Debug.php' );\n   10: require( REDBEANPHP_MAIN_DIR . 'Driver.php' );\n   11: require( REDBEANPHP_MAIN_DIR . 'Driver/RPDO.php' );\n   12  \n   13  //Load Infrastructure\n   14: require( REDBEANPHP_MAIN_DIR . 'OODBBean.php' );\n   15: require( REDBEANPHP_MAIN_DIR . 'Observable.php' );\n   16: require( REDBEANPHP_MAIN_DIR . 'Observer.php' );\n   17  \n   18  //Load Database Adapters\n   19: require( REDBEANPHP_MAIN_DIR . 'Adapter.php' );\n   20: require( REDBEANPHP_MAIN_DIR . 'Adapter/DBAdapter.php' );\n   21: require( REDBEANPHP_MAIN_DIR . 'Cursor.php');\n   22: require( REDBEANPHP_MAIN_DIR . 'Cursor/PDOCursor.php');\n   23: require( REDBEANPHP_MAIN_DIR . 'Cursor/NullCursor.php');\n   24: require( REDBEANPHP_MAIN_DIR . 'BeanCollection.php' );\n   25  \n   26  //Load SQL drivers\n   27: require( REDBEANPHP_MAIN_DIR . 'QueryWriter.php' );\n   28: require( REDBEANPHP_MAIN_DIR . 'QueryWriter/AQueryWriter.php' );\n   29: require( REDBEANPHP_MAIN_DIR . 'QueryWriter/MySQL.php' );\n   30: require( REDBEANPHP_MAIN_DIR . 'QueryWriter/SQLiteT.php' );\n   31: require( REDBEANPHP_MAIN_DIR . 'QueryWriter/PostgreSQL.php' );\n   32  \n   33  //Load required Exceptions\n   34: require( REDBEANPHP_MAIN_DIR . 'RedException.php' );\n   35: require( REDBEANPHP_MAIN_DIR . 'RedException/SQL.php' );\n   36  \n   37  //Load Repository Classes\n   38: require( REDBEANPHP_MAIN_DIR . 'Repository.php' );\n   39: require( REDBEANPHP_MAIN_DIR . 'Repository/Fluid.php' );\n   40: require( REDBEANPHP_MAIN_DIR . 'Repository/Frozen.php' );\n   41  \n   42  //Load Core functionality\n   43: require( REDBEANPHP_MAIN_DIR . 'OODB.php' );\n   44: require( REDBEANPHP_MAIN_DIR . 'ToolBox.php' );\n   45: require( REDBEANPHP_MAIN_DIR . 'Finder.php' );\n   46  \n   47  //Load extended functionality\n   48: require( REDBEANPHP_MAIN_DIR . 'AssociationManager.php' );\n   49: require( REDBEANPHP_MAIN_DIR . 'BeanHelper.php' );\n   50: require( REDBEANPHP_MAIN_DIR . 'BeanHelper/SimpleFacadeBeanHelper.php' );\n   51: require( REDBEANPHP_MAIN_DIR . 'BeanHelper/DynamicBeanHelper.php' );\n   52  \n   53  /* Developer Comfort */\n   54: require( REDBEANPHP_MAIN_DIR . 'SimpleModel.php' );\n   55: require( REDBEANPHP_MAIN_DIR . 'SimpleModelHelper.php' );\n   56: require( REDBEANPHP_MAIN_DIR . 'TagManager.php' );\n   57: require( REDBEANPHP_MAIN_DIR . 'LabelMaker.php' );\n   58: require( REDBEANPHP_MAIN_DIR . 'Facade.php' );\n   59: require( REDBEANPHP_MAIN_DIR . 'DuplicationManager.php' );\n   60: require( REDBEANPHP_MAIN_DIR . 'Plugin.php' );\n   61: require( REDBEANPHP_MAIN_DIR . 'Functions.php' );\n   62  \n   63  /* Facade Utilities */\n   64: require( REDBEANPHP_MAIN_DIR . 'Util/ArrayTool.php' );\n   65: require( REDBEANPHP_MAIN_DIR . 'Util/DispenseHelper.php' );\n   66: require( REDBEANPHP_MAIN_DIR . 'Util/Dump.php' );\n   67: require( REDBEANPHP_MAIN_DIR . 'Util/MultiLoader.php' );\n   68: require( REDBEANPHP_MAIN_DIR . 'Util/Transaction.php' );\n   69: require( REDBEANPHP_MAIN_DIR . 'Util/QuickExport.php' );\n   70: require( REDBEANPHP_MAIN_DIR . 'Util/MatchUp.php' );\n   71: require( REDBEANPHP_MAIN_DIR . 'Util/Look.php' );\n   72: require( REDBEANPHP_MAIN_DIR . 'Util/Diff.php' );\n   73: require( REDBEANPHP_MAIN_DIR . 'Util/Tree.php' );\n   74: require( REDBEANPHP_MAIN_DIR . 'Util/Feature.php' );\n   75  \n   76  //Allow users to mount the plugin folder.\n   77: if ( defined( 'REDBEANPHP_PLUGINS' ) ) {\n   78:     Phar::mount( 'RedBeanPHP/Plugin', REDBEANPHP_PLUGINS );\n   79  }\n   80  \n   81  //make some classes available for backward compatibility\n   82: class RedBean_SimpleModel extends \\RedBeanPHP\\SimpleModel {};\n   83  \n   84  if (!class_exists('R')) {\n   85: \tclass R extends \\RedBeanPHP\\Facade{};\n   86  }\n   87  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Logger.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    6:  * RedBean Logging interface.\n    7   * Provides a uniform and convenient logging\n    8:  * interface throughout RedBeanPHP.\n    9   *\n   10:  * @file    RedBean/Logging.php\n   11:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   12   * @license BSD/GPLv2\n   13   *\n   14   * @copyright\n   15:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   16   * This source file is subject to the BSD/GPLv2 License that is bundled\n   17   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Observable.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\Observer as Observer;\n    6  \n    7  /**\n    .\n    9   * Base class for Observables\n   10   *\n   11:  * @file            RedBeanPHP/Observable.php\n   12:  * @author          Gabor de Mooij and the RedBeanPHP community\n   13   * @license         BSD/GPLv2\n   14   *\n   15   * @copyright\n   16:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   17   * This source file is subject to the BSD/GPLv2 License that is bundled\n   18   * with this source code in the file license.txt.\n   ..\n   54  \t * Sends the signal $eventname, the event identifier and a message object\n   55  \t * to all observers that have been registered to receive notification for\n   56: \t * this event. Part of the observer pattern implementation in RedBeanPHP.\n   57  \t *\n   58  \t * @param string $eventname event you want signal\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Observer.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    .\n    9   * observer pattern.\n   10   *\n   11:  * @file    RedBeanPHP/Observer.php\n   12:  * @author  Gabor de Mooij and the RedBeanPHP community\n   13   * @license BSD/GPLv2\n   14:  * @desc    Part of the observer pattern in RedBean\n   15   *\n   16   * @copyright\n   17:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   18   * This source file is subject to the BSD/GPLv2 License that is bundled\n   19   * with this source code in the file license.txt.\n   ..\n   25  \t * notifications. Therefore the observer needs to implement the\n   26  \t * onEvent method with two parameters: the event identifier specifying the\n   27: \t * current event and a message object (in RedBeanPHP this can also be a bean).\n   28  \t *\n   29  \t * @param string $eventname event identifier\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\OODB.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\BeanHelper as BeanHelper;\n    8: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    9: use RedBeanPHP\\Repository as Repository;\n   10: use RedBeanPHP\\Repository\\Fluid as FluidRepo;\n   11: use RedBeanPHP\\Repository\\Frozen as FrozenRepo;\n   12  \n   13  /**\n   14:  * RedBean Object Oriented DataBase.\n   15   *\n   16:  * The RedBean OODB Class is the main class of RedBeanPHP.\n   17   * It takes OODBBean objects and stores them to and loads them from the\n   18   * database as well as providing other CRUD functions. This class acts as a\n   19   * object database.\n   20   *\n   21:  * @file    RedBeanPHP/OODB.php\n   22:  * @author  Gabor de Mooij and the RedBeanPHP community\n   23   * @license BSD/GPLv2\n   24   *\n   25   * @copyright\n   26:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   27   * This source file is subject to the BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n   ..\n  127  \t * Most of the time, you do not need to use this constructor,\n  128  \t * since the facade takes care of constructing and wiring the\n  129: \t * RedBeanPHP core objects. However if you would like to\n  130  \t * assemble an OODB instance yourself, this is how it works:\n  131  \t *\n  ...\n  143  \t * </code>\n  144  \t *\n  145: \t * The example above creates the 3 RedBeanPHP core objects:\n  146  \t * the Adapter, the Query Writer and the OODB instance and\n  147  \t * wires them together. The example also demonstrates some of\n  ...\n  211  \n  212  \t/**\n  213: \t * Returns the current mode of operation of RedBean.\n  214  \t * In fluid mode the database\n  215  \t * structure is adjusted to accommodate your objects.\n  ...\n  245  \t * use this function to get an empty bean object. Never\n  246  \t * instantiate a OODBBean yourself because it needs\n  247: \t * to be configured before you can use it with RedBean. This\n  248  \t * function applies the appropriate initialization /\n  249  \t * configuration for you.\n  ...\n  364  \t * OODBBean Bean Object $bean and stores it\n  365  \t * in the database. If the database schema is not compatible\n  366: \t * with this bean and RedBean runs in fluid mode the schema\n  367  \t * will be altered to store the bean correctly.\n  368  \t * If the database schema is not compatible with this bean and\n  369: \t * RedBean runs in frozen mode it will throw an exception.\n  370  \t * This function returns the primary key ID of the inserted\n  371  \t * bean.\n  ...\n  394  \t * It searches for a OODBBean Bean Object in the\n  395  \t * database. It does not matter how this bean has been stored.\n  396: \t * RedBean uses the primary key ID $id and the string $type\n  397  \t * to find the bean. The $type specifies what kind of bean you\n  398  \t * are looking for; this is the same type as used with the\n  399: \t * dispense() function. If RedBean finds the bean it will return\n  400  \t * the OODB Bean object; if it cannot find the bean\n  401: \t * RedBean will return a new bean of type $type and with\n  402  \t * primary key ID 0. In the latter case it acts basically the\n  403  \t * same as dispense().\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\OODBBean.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    6: use RedBeanPHP\\BeanHelper as BeanHelper;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\Util\\Either as Either;\n    9  \n   10  /**\n   ..\n   22   * with databases systems as well as some meta-data.\n   23   *\n   24:  * @file    RedBeanPHP/OODBBean.php\n   25:  * @author  Gabor de Mooij and the RedBeanPHP community\n   26   * @license BSD/GPLv2\n   27:  * @desc    OODBBean represents a bean. RedBeanPHP uses beans\n   28   *\n   29   * @copyright\n   30:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   31   * This source file is subject to the BSD/GPLv2 License that is bundled\n   32   * with this source code in the file license.txt.\n   ..\n  340  \t *\n  341  \t * @param string  $type    the name of the list you want to retrieve\n  342: \t * @param OODB    $redbean instance of the RedBeanPHP OODB class\n  343  \t * @param ToolBox $toolbox instance of ToolBox (to get access to core objects)\n  344  \t *\n  345  \t * @return array\n  346  \t */\n  347: \tprivate function getSharedList( $type, $redbean, $toolbox )\n  348  \t{\n  349  \t\t$writer = $toolbox->getWriter();\n  ...\n  359  \t\tif ($this->getID()) {\n  360  \t\t\t$type             = $this->beau( $type );\n  361: \t\t\t$assocManager     = $redbean->getAssociationManager();\n  362  \t\t\t$beans            = $assocManager->related( $this, $type, $this->withSql, $this->withParams );\n  363  \t\t}\n  ...\n  388  \t * @return array\n  389  \t */\n  390: \tprivate function getOwnList( $type, $redbean )\n  391  \t{\n  392  \t\t$type = $this->beau( $type );\n  ...\n  416  \t\t\t\t$bindings[':slot0'] = $this->getID();\n  417  \t\t\t}\n  418: \t\t\t$beans = $redbean->find( $type, array(), $sql, $bindings );\n  419  \t\t}\n  420  \t\tforeach ( $beans as $beanFromList ) {\n  ...\n  458  \t * Here you can change the Bean Helper. The Bean Helper is an object\n  459  \t * providing access to a toolbox for the bean necessary to retrieve\n  460: \t * nested beans (bean lists: ownBean, sharedBean) without the need to\n  461  \t * rely on static calls to the facade (or make this class dep. on OODB).\n  462  \t *\n  ...\n  526  \t\t\t\t\tif ( is_array($value ) ) {\n  527  \t\t\t\t\t\tif ( isset( $value['_type'] ) ) {\n  528: \t\t\t\t\t\t\t$bean = $this->beanHelper->getToolbox()->getRedBean()->dispense( $value['_type'] );\n  529  \t\t\t\t\t\t\tunset( $value['_type'] );\n  530  \t\t\t\t\t\t\t$bean->import($value);\n  ...\n  533  \t\t\t\t\t\t\t$listBeans = array();\n  534  \t\t\t\t\t\t\tforeach( $value as $listKey => $listItem ) {\n  535: \t\t\t\t\t\t\t\t$bean = $this->beanHelper->getToolbox()->getRedBean()->dispense( $listItem['_type'] );\n  536  \t\t\t\t\t\t\t\tunset( $listItem['_type'] );\n  537  \t\t\t\t\t\t\t\t$bean->import($listItem);\n  ...\n  983  \n  984  \t/**\n  985: \t * Modifiers are a powerful concept in RedBeanPHP, they make it possible\n  986  \t * to change the way a property has to be loaded.\n  987: \t * RedBeanPHP uses property modifiers using a prefix notation like this:\n  988  \t *\n  989  \t * <code>\n  ...\n 1047  \t * Magic Getter. Gets the value for a specific property in the bean.\n 1048  \t * If the property does not exist this getter will make sure no error\n 1049: \t * occurs. This is because RedBean allows you to query (probe) for\n 1050  \t * properties. If the property can not be found this method will\n 1051  \t * return NULL instead.\n ....\n 1107  \t\t\t * PHP Stack trace:\n 1108  \t\t\t * PHP 1. {main}() testje.php:0\n 1109: \t\t\t * PHP 2. RedBeanPHP\\OODBBean->__get() testje.php:22\n 1110  \t\t\t * Notice: Only variable references should be returned by reference in rb.php on line 2529\n 1111  \t\t\t */\n ....\n 1131  \t\t}\n 1132  \n 1133: \t\tlist( $redbean, , , $toolbox ) = $this->beanHelper->getExtractedToolbox();\n 1134  \n 1135  \t\t//If it's another bean, then we load it and return\n ....\n 1149  \t\t\t\t$bean = NULL;\n 1150  \t\t\t\tif ( !is_null( $this->properties[$fieldLink] ) ) {\n 1151: \t\t\t\t\t$bean = $redbean->load( $type, $this->properties[$fieldLink] );\n 1152  \t\t\t\t}\n 1153  \t\t\t}\n ....\n 1161  \t\t\t$beans = array();\n 1162  \t\t} elseif ( $isOwn ) {\n 1163: \t\t\t$beans = $this->getOwnList( $listName, $redbean );\n 1164  \t\t} else {\n 1165: \t\t\t$beans = $this->getSharedList( lcfirst( substr( $property, 6 ) ), $redbean, $toolbox );\n 1166  \t\t}\n 1167  \t\t$this->properties[$property]          = $beans;\n ....\n 1221  \n 1222  \t\t\tif ( !$this->noLoad ) {\n 1223: \t\t\t\tlist( $redbean, , , $toolbox ) = $this->beanHelper->getExtractedToolbox();\n 1224  \t\t\t\tif ( $isOwn ) {\n 1225: \t\t\t\t\t$beans = $this->getOwnList( $listName, $redbean );\n 1226  \t\t\t\t} else {\n 1227: \t\t\t\t\t$beans = $this->getSharedList( lcfirst( substr( $property, 6 ) ), $redbean, $toolbox );\n 1228  \t\t\t\t}\n 1229  \t\t\t\t$this->__info[\"sys.shadow.$property\"] = $beans;\n ....\n 1300  \t * contains additional information about the bean object that will not\n 1301  \t * be stored in the database. Meta information is used to instruct\n 1302: \t * RedBeanPHP as well as other systems how to deal with the bean.\n 1303  \t * If the property cannot be found this getter will return NULL instead.\n 1304  \t *\n ....\n 1309  \t * </code>\n 1310  \t *\n 1311: \t * RedBeanPHP also stores meta data in beans, this meta data uses\n 1312  \t * keys prefixed with 'sys.' (system).\n 1313  \t *\n ....\n 1362  \t * The first argument should be the key to store the value under,\n 1363  \t * the second argument should be the value. It is common to use\n 1364: \t * a path-like notation for meta data in RedBeanPHP like:\n 1365  \t * 'my.meta.data', however the dots are purely for readability, the\n 1366  \t * meta data methods do not store nested structures or hierarchies.\n ....\n 1869  \t * Note that a bean becomes tainted as soon as you retrieve a list from\n 1870  \t * the bean. This is because the bean lists are arrays and the bean cannot\n 1871: \t * determine whether you have made modifications to a list so RedBeanPHP\n 1872  \t * will mark the whole bean as tainted.\n 1873  \t *\n ....\n 2000  \t\tif ( is_string( $typeOrBean ) ) {\n 2001  \t\t\t$typeOrBean = AQueryWriter::camelsSnake( $typeOrBean );\n 2002: \t\t\t$bean = $this->beanHelper->getToolBox()->getRedBean()->dispense( $typeOrBean );\n 2003  \t\t\tif ( is_string( $qualification ) ) {\n 2004  \t\t\t\t$data = json_decode( $qualification, TRUE );\n ....\n 2020  \t * Returns a bean of the given type with the same ID of as\n 2021  \t * the current one. This only happens in a one-to-one relation.\n 2022: \t * This is as far as support for 1-1 goes in RedBeanPHP. This\n 2023  \t * method will only return a reference to the bean, changing it\n 2024  \t * and storing the bean will not update the related one-bean.\n ....\n 2033  \t * The example loads the biography associated with the author\n 2034  \t * using a one-to-one relation. These relations are generally not\n 2035: \t * created (nor supported) by RedBeanPHP.\n 2036  \t *\n 2037  \t * @param  $type type of bean to load\n ....\n 2042  \t\treturn $this->beanHelper\n 2043  \t\t\t->getToolBox()\n 2044: \t\t\t->getRedBean()\n 2045  \t\t\t->load( $type, $this->id );\n 2046  \t}\n ....\n 2077  \t\treturn $this->beanHelper\n 2078  \t\t\t->getToolbox()\n 2079: \t\t\t->getRedBean()\n 2080  \t\t\t->load( $this->getMeta( 'type' ), $this->properties['id'] );\n 2081  \t}\n ....\n 2178  \t\t\t\t$count = $this->beanHelper->getToolbox()->getWriter()->queryRecordCount( $type, array(), $sql, $bindings );\n 2179  \t\t\t} else {\n 2180: \t\t\t\t$count = $this->beanHelper->getToolbox()->getRedBean()->count( $type, $sql, $bindings );\n 2181  \t\t\t}\n 2182  \t\t}\n ....\n 2211  \t{\n 2212  \t\t$toolbox = $this->beanHelper->getToolbox();\n 2213: \t\t$redbean = $toolbox->getRedBean();\n 2214  \t\t$writer  = $toolbox->getWriter();\n 2215  \t\tif ( $this->via ) {\n ....\n 2224  \t\t$count = 0;\n 2225  \t\tif ( $this->getID() ) {\n 2226: \t\t\t$count = $redbean->getAssociationManager()->relatedCount( $this, $type, $this->withSql, $this->withParams );\n 2227  \t\t}\n 2228  \t\t$this->clearModifiers();\n ....\n 2275  \t\t}\n 2276  \n 2277: \t\t$beans = $this->beanHelper->getToolBox()->getRedBean()->batch( $type, $ids );\n 2278  \n 2279  \t\t//now preload the beans as well\n ....\n 2309  \t * The example above compares the flavour label 'mocca' with\n 2310  \t * the flavour label attached to the $coffee bean. This illustrates\n 2311: \t * how to use equals() with RedBeanPHP-style enums.\n 2312  \t *\n 2313  \t * @param OODBBean|null $bean other bean\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Plugin.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    6:  * RedBean Plugin.\n    7   * Marker interface for plugins.\n    8   * Use this interface when defining new plugins, it's an\n    .\n   11   * implement a specific API.\n   12   *\n   13:  * @file    RedBean/Plugin.php\n   14:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   15   * @license BSD/GPLv2\n   16   *\n   17   * @copyright\n   18:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   19   * This source file is subject to the BSD/GPLv2 License that is bundled\n   20   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\QueryWriter.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    .\n   19   * - columnNoQ (same as property, but in context of a database operation)\n   20   *\n   21:  * @file    RedBeanPHP/QueryWriter.php\n   22:  * @author  Gabor de Mooij and the RedBeanPHP community\n   23   * @license BSD/GPLv2\n   24   *\n   25   * @copyright\n   26:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   27   * This source file is subject to the BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n   ..\n  499  \t * Checks and filters a database structure element like a table of column\n  500  \t * for safe use in a query. A database structure has to conform to the\n  501: \t * RedBeanPHP DB security policy which basically means only alphanumeric\n  502  \t * symbols are allowed. This security policy is more strict than conventional\n  503  \t * SQL policies and does therefore not require database specific escaping rules.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\R.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    .\n   10   * those that prefer this.\n   11   *\n   12:  * An alternative option might be to alias RedBeanPHP/Facade.\n   13   *\n   14:  * @file    RedBeanPHP/R.php\n   15   * @author  Simirimia\n   16   * @license BSD/GPLv2\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\RedException.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5  /**\n    6:  * RedBean\\Exception Base.\n    7:  * Represents the base class for RedBeanPHP\\Exceptions.\n    8   *\n    9:  * @file    RedBeanPHP/Exception.php\n   10:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   11   * @license BSD/GPLv2\n   12   *\n   13   * @copyright\n   14:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   15   * This source file is subject to the BSD/GPLv2 License that is bundled\n   16   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Repository.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\BeanHelper as BeanHelper;\n    8: use RedBeanPHP\\RedException\\SQL as SQLException;\n    9: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   10: use RedBeanPHP\\Cursor as Cursor;\n   11: use RedBeanPHP\\Cursor\\NullCursor as NullCursor;\n   12  \n   13  /**\n   ..\n   21   * method.\n   22   *\n   23:  * @file    RedBeanPHP/Repository.php\n   24:  * @author  Gabor de Mooij and the RedBeanPHP community\n   25   * @license BSD/GPLv2\n   26   *\n   27   * @copyright\n   28:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   29   * This source file is subject to the BSD/GPLv2 License that is bundled\n   30   * with this source code in the file license.txt.\n   ..\n  343  \t * - It must have an primary key id property named: id\n  344  \t * - It must have a type\n  345: \t * - The type must conform to the RedBeanPHP naming policy\n  346  \t * - All properties must be valid\n  347  \t * - All values must be valid\n  ...\n  387  \t * use this function to get an empty bean object. Never\n  388  \t * instantiate a OODBBean yourself because it needs\n  389: \t * to be configured before you can use it with RedBean. This\n  390  \t * function applies the appropriate initialization /\n  391  \t * configuration for you.\n  392  \t *\n  393  \t * To use a different class for beans (instead of OODBBean) set:\n  394: \t * REDBEAN_OODBBEAN_CLASS to the name of the class to be used.\n  395  \t *\n  396  \t * @param string  $type              type of bean you want to dispense\n  ...\n  402  \tpublic function dispense( $type, $number = 1, $alwaysReturnArray = FALSE )\n  403  \t{\n  404: \t\t$OODBBEAN = defined( 'REDBEAN_OODBBEAN_CLASS' ) ? REDBEAN_OODBBEAN_CLASS : '\\RedBeanPHP\\OODBBean';\n  405  \t\t$beans = array();\n  406  \t\tfor ( $i = 0; $i < $number; $i++ ) {\n  ...\n  494  \t * OODBBean Bean Object $bean and stores it\n  495  \t * in the database. If the database schema is not compatible\n  496: \t * with this bean and RedBean runs in fluid mode the schema\n  497  \t * will be altered to store the bean correctly.\n  498  \t * If the database schema is not compatible with this bean and\n  499: \t * RedBean runs in frozen mode it will throw an exception.\n  500  \t * This function returns the primary key ID of the inserted\n  501  \t * bean.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\SimpleModel.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\OODBBean as OODBBean;\n    6  \n    7  /**\n    8   * SimpleModel\n    9:  * Base Model For All RedBeanPHP Models using FUSE.\n   10   *\n   11:  * RedBeanPHP FUSE is a mechanism to connect beans to posthoc\n   12   * models. Models are connected to beans by naming conventions.\n   13   * Actions on beans will result in actions on models.\n   14   *\n   15:  * @file       RedBeanPHP/SimpleModel.php\n   16:  * @author     Gabor de Mooij and the RedBeanPHP Team\n   17   * @license    BSD/GPLv2\n   18   *\n   19   * @copyright\n   20:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   21   * This source file is subject to the BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n   89  \t * This method wraps the current bean in this model.\n   90  \t * This method can be reached using FUSE through a simple\n   91: \t * OODBBean. The method returns a RedBeanPHP Simple Model.\n   92  \t * This is useful if you would like to rely on PHP type hinting.\n   93  \t * You can box your beans before passing them to functions or methods\n   ..\n   97  \t * Use unbox to obtain the bean powering the model. If you want to use bean functionality,\n   98  \t * you should -always- unbox first. While some functionality (like magic get/set) is\n   99: \t * available in the model, this is just read-only. To use a model as a typical RedBean\n  100  \t * OODBBean you should always unbox the model to a bean. Models are meant to\n  101  \t * expose only domain logic added by the developer (business logic, no ORM logic).\n  ...\n  115  \t * Use unbox to obtain the bean powering the model. If you want to use bean functionality,\n  116  \t * you should -always- unbox first. While some functionality (like magic get/set) is\n  117: \t * available in the model, this is just read-only. To use a model as a typical RedBean\n  118  \t * OODBBean you should always unbox the model to a bean. Models are meant to\n  119  \t * expose only domain logic added by the developer (business logic, no ORM logic).\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\SimpleModelHelper.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\Observer as Observer;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7: use RedBeanPHP\\Observable as Observable;\n    8  \n    9  /**\n   10:  * RedBean Model Helper.\n   11   *\n   12   * Connects beans to models.\n   13   * This is the core of so-called FUSE.\n   14   *\n   15:  * @file    RedBeanPHP/ModelHelper.php\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license BSD/GPLv2\n   18   *\n   19   * @copyright\n   20:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   21   * This source file is subject to the BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\TagManager.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\ToolBox as ToolBox;\n    6: use RedBeanPHP\\AssociationManager as AssociationManager;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   10:  * RedBeanPHP Tag Manager.\n   11   *\n   12   * The tag manager offers an easy way to quickly implement basic tagging\n   ..\n   16   * bean database.\n   17   *\n   18:  * @file       RedBeanPHP/TagManager.php\n   19:  * @author     Gabor de Mooij and the RedBeanPHP community\n   20   * @license    BSD/GPLv2\n   21   *\n   22   * @copyright\n   23:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   24   * This source file is subject to the BSD/GPLv2 License that is bundled\n   25   * with this source code in the file license.txt.\n   ..\n   40  \t * @var OODB\n   41  \t */\n   42: \tprotected $redbean;\n   43  \n   44  \t/**\n   ..\n   72  \tprotected function findTagByTitle( $title )\n   73  \t{\n   74: \t\t$beans = $this->redbean->find( 'tag', array( 'title' => array( $title ) ) );\n   75  \n   76  \t\tif ( $beans ) {\n   ..\n   93  \t{\n   94  \t\t$this->toolbox = $toolbox;\n   95: \t\t$this->redbean = $toolbox->getRedBean();\n   96  \n   97: \t\t$this->associationManager = $this->redbean->getAssociationManager();\n   98  \t}\n   99  \n  ...\n  174  \n  175  \t/**\n  176: \t * Part of RedBeanPHP Tagging API.\n  177  \t * Tags a bean or returns tags associated with a bean.\n  178  \t * If $tagList is NULL or omitted this method will return a\n  ...\n  219  \n  220  \t/**\n  221: \t * Part of RedBeanPHP Tagging API.\n  222  \t * Adds tags to a bean.\n  223  \t * If $tagList is a comma separated list of tags all tags will\n  ...\n  249  \t\tforeach ( $tags as $tag ) {\n  250  \t\t\tif ( !$t = $this->findTagByTitle( $tag ) ) {\n  251: \t\t\t\t$t        = $this->redbean->dispense( 'tag' );\n  252  \t\t\t\t$t->title = $tag;\n  253  \n  254: \t\t\t\t$this->redbean->store( $t );\n  255  \t\t\t}\n  256  \n  ...\n  293  \t\t$records    = $this->toolbox->getWriter()->queryTagged( $beanType, $tags, FALSE, $sql, $bindings );\n  294  \n  295: \t\treturn $this->redbean->convertToBeans( $beanType, $records );\n  296  \t}\n  297  \n  ...\n  330  \t\t$records    = $this->toolbox->getWriter()->queryTagged( $beanType, $tags, TRUE, $sql, $bindings );\n  331  \n  332: \t\treturn $this->redbean->convertToBeans( $beanType, $records );\n  333  \t}\n  334  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\ToolBox.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    8: use RedBeanPHP\\Adapter as Adapter;\n    9  \n   10  /**\n   11   * ToolBox.\n   12   *\n   13:  * The toolbox is an integral part of RedBeanPHP providing the basic\n   14   * architectural building blocks to manager objects, helpers and additional tools\n   15:  * like plugins. A toolbox contains the three core components of RedBeanPHP:\n   16:  * the adapter, the query writer and the core functionality of RedBeanPHP in\n   17   * OODB.\n   18   *\n   19:  * @file      RedBeanPHP/ToolBox.php\n   20:  * @author    Gabor de Mooij and the RedBeanPHP community\n   21   * @license   BSD/GPLv2\n   22   *\n   23   * @copyright\n   24:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   25   * This source file is subject to the BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n   ..\n   45  \t/**\n   46  \t * Constructor.\n   47: \t * The toolbox is an integral part of RedBeanPHP providing the basic\n   48  \t * architectural building blocks to manager objects, helpers and additional tools\n   49: \t * like plugins. A toolbox contains the three core components of RedBeanPHP:\n   50: \t * the adapter, the query writer and the core functionality of RedBeanPHP in\n   51  \t * OODB.\n   52  \t *\n   ..\n   87  \t * <code>\n   88  \t * $toolbox = R::getToolBox();\n   89: \t * $redbean = $toolbox->getRedBean();\n   90  \t * $adapter = $toolbox->getDatabaseAdapter();\n   91  \t * $writer  = $toolbox->getWriter();\n   ..\n   96  \t * only, the following shortcuts exist as well:\n   97  \t *\n   98: \t * - R::getRedBean()\n   99  \t * - R::getDatabaseAdapter()\n  100  \t * - R::getWriter()\n  ...\n  117  \t * <code>\n  118  \t * $toolbox = R::getToolBox();\n  119: \t * $redbean = $toolbox->getRedBean();\n  120  \t * $adapter = $toolbox->getDatabaseAdapter();\n  121  \t * $writer  = $toolbox->getWriter();\n  ...\n  126  \t * only, the following shortcuts exist as well:\n  127  \t *\n  128: \t * - R::getRedBean()\n  129  \t * - R::getDatabaseAdapter()\n  130  \t * - R::getWriter()\n  ...\n  132  \t * @return OODB\n  133  \t */\n  134: \tpublic function getRedBean()\n  135  \t{\n  136  \t\treturn $this->oodb;\n  ...\n  146  \t * <code>\n  147  \t * $toolbox = R::getToolBox();\n  148: \t * $redbean = $toolbox->getRedBean();\n  149  \t * $adapter = $toolbox->getDatabaseAdapter();\n  150  \t * $writer  = $toolbox->getWriter();\n  ...\n  155  \t * only, the following shortcuts exist as well:\n  156  \t *\n  157: \t * - R::getRedBean()\n  158  \t * - R::getDatabaseAdapter()\n  159  \t * - R::getWriter()\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\TypedModel.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP;\n    4  \n    5: use RedBeanPHP\\SimpleModel as SimpleModel;\n    6  \n    7  /**\n    .\n   12   * Usage:\n   13   *\n   14:  * define( 'REDBEAN_MODEL_PREFIX', '\\\\' );\n   15   * R::setup();\n   16:  * class Book extends \\RedBeanPHP\\TypedModel { }\n   17   * $book = R::dispense('book');\n   18   * $book = Book::cast($book);\n   19   * var_dump( $book ); -- and you'll see Book...\n   20   *\n   21:  * @file       RedBeanPHP/TypeModel.php\n   22:  * @author     Gabor de Mooij and the RedBeanPHP Team\n   23   * @license    BSD/GPLv2\n   24   *\n   25   * @copyright\n   26:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   27   * This source file is subject to the BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Adapter\\DBAdapter.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Adapter;\n    4  \n    5: use RedBeanPHP\\Observable as Observable;\n    6: use RedBeanPHP\\Adapter as Adapter;\n    7: use RedBeanPHP\\Driver as Driver;\n    8  \n    9  /**\n   10   * DBAdapter (Database Adapter)\n   11   *\n   12:  * An adapter class to connect various database systems to RedBean\n   13   * Database Adapter Class. The task of the database adapter class is to\n   14   * communicate with the database driver. You can use all sorts of database\n   15:  * drivers with RedBeanPHP. The default database drivers that ships with\n   16:  * the RedBeanPHP library is the RPDO driver ( which uses the PHP Data Objects\n   17   * Architecture aka PDO ).\n   18   *\n   19:  * @file    RedBeanPHP/Adapter/DBAdapter.php\n   20:  * @author  Gabor de Mooij and the RedBeanPHP Community.\n   21   * @license BSD/GPLv2\n   22   *\n   23   * @copyright\n   24:  * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP community.\n   25   * This source file is subject to the BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n   ..\n   41  \t * Constructor.\n   42  \t *\n   43: \t * Creates an instance of the RedBean Adapter Class.\n   44: \t * This class provides an interface for RedBean to work\n   45  \t * with ADO compatible DB instances.\n   46  \t *\n   ..\n   58  \t * </code>\n   59  \t *\n   60: \t * The example above creates the 3 RedBeanPHP core objects:\n   61  \t * the Adapter, the Query Writer and the OODB instance and\n   62  \t * wires them together. The example also demonstrates some of\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\BeanHelper\\DynamicBeanHelper.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\BeanHelper;\n    4  \n    5: use RedBeanPHP\\BeanHelper as BeanHelper;\n    6: use RedBeanPHP\\Facade as Facade;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\SimpleModelHelper as SimpleModelHelper;\n    9: use RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper as SimpleFacadeBeanHelper;\n   10  \n   11  /**\n   ..\n   15   * classes for models per database connection.\n   16   *\n   17:  * @file    RedBeanPHP/BeanHelper/DynamicBeanHelper.php\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license BSD/GPLv2\n   20   *\n   21   * @copyright\n   22:  * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   23   * This source file is subject to the BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\BeanHelper;\n    4  \n    5: use RedBeanPHP\\BeanHelper as BeanHelper;\n    6: use RedBeanPHP\\Facade as Facade;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\SimpleModelHelper as SimpleModelHelper;\n    9  \n   10  /**\n   ..\n   15   * reference to the toolbox.\n   16   *\n   17:  * @file    RedBeanPHP/BeanHelperFacade.php\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license BSD/GPLv2\n   20   *\n   21   * @copyright\n   22:  * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   23   * This source file is subject to the BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n   74  \t{\n   75  \t\t$model     = $bean->getMeta( 'type' );\n   76: \t\t$prefix    = defined( 'REDBEAN_MODEL_PREFIX' ) ? REDBEAN_MODEL_PREFIX : '\\\\Model_';\n   77  \n   78  \t\treturn $this->resolveModel($prefix, $model, $bean);\n   ..\n   84  \t *\n   85  \t * @note\n   86: \t * If REDBEAN_CLASS_AUTOLOAD is defined this will be passed to class_exist as\n   87  \t * autoloading flag.\n   88  \t *\n   ..\n   96  \n   97  \t\t/* Determine autoloading preference */\n   98: \t\t$autoloadFlag = ( defined( 'REDBEAN_CLASS_AUTOLOAD' ) ? REDBEAN_CLASS_AUTOLOAD : TRUE );\n   99  \n  100  \t\tif ( strpos( $model, '_' ) !== FALSE ) {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Cursor\\NullCursor.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Cursor;\n    4  \n    5: use RedBeanPHP\\Cursor as Cursor;\n    6  \n    7  /**\n    .\n   12   * demands a cursor to be returned.\n   13   *\n   14:  * @file    RedBeanPHP/Cursor/NULLCursor.php\n   15:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   16   * @license BSD/GPLv2\n   17   *\n   18   * @copyright\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Cursor\\PDOCursor.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Cursor;\n    4  \n    5: use RedBeanPHP\\Cursor as Cursor;\n    6  \n    7  /**\n    .\n   13   * implement the findCollection()/BeanCollection functionality.\n   14   *\n   15:  * @file    RedBeanPHP/Cursor/PDOCursor.php\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license BSD/GPLv2\n   18   *\n   19   * @copyright\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Driver\\RPDO.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Driver;\n    4  \n    5: use RedBeanPHP\\Driver as Driver;\n    6: use RedBeanPHP\\Logger as Logger;\n    7: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    8: use RedBeanPHP\\RedException as RedException;\n    9: use RedBeanPHP\\RedException\\SQL as SQL;\n   10: use RedBeanPHP\\Logger\\RDefault as RDefault;\n   11: use RedBeanPHP\\PDOCompatible as PDOCompatible;\n   12: use RedBeanPHP\\Cursor\\PDOCursor as PDOCursor;\n   13  \n   14  /**\n   15   * PDO Driver\n   16:  * This Driver implements the RedBean Driver API.\n   17:  * for RedBeanPHP. This is the standard / default database driver\n   18:  * for RedBeanPHP.\n   19   *\n   20:  * @file    RedBeanPHP/PDO.php\n   21:  * @author  Gabor de Mooij and the RedBeanPHP Community, Desfrenes\n   22   * @license BSD/GPLv2\n   23   *\n   24   * @copyright\n   25:  * copyright (c) Desfrenes & Gabor de Mooij and the RedBeanPHP community\n   26   * This source file is subject to the BSD/GPLv2 License that is bundled\n   27   * with this source code in the file license.txt.\n   ..\n  246  \t * </code>\n  247  \t *\n  248: \t * By default, RedBeanPHP uses this method under the hood to make sure\n  249  \t * you use the latest UTF8 encoding possible for your database.\n  250  \t *\n  ...\n  479  \t * This method might improve performance, however since the driver does\n  480  \t * not configure this instance terrible things may happen... only use\n  481: \t * this method if you are an expert on RedBeanPHP, PDO and UTF8 connections and\n  482  \t * you know your database server VERY WELL.\n  483  \t *\n  484  \t * - connected     TRUE|FALSE (treat this instance as connected, default: TRUE)\n  485: \t * - setEncoding   TRUE|FALSE (let RedBeanPHP set encoding for you, default: TRUE)\n  486: \t * - setAttributes TRUE|FALSE (let RedBeanPHP set attributes for you, default: TRUE)*\n  487  \t * - setDSNString  TRUE|FALSE (extract DSN string from PDO instance, default: TRUE)\n  488  \t * - stringFetch   TRUE|FALSE (whether you want to stringify fetches or not, default: TRUE)\n  ...\n  490  \t *\n  491  \t * *attributes:\n  492: \t * - RedBeanPHP will ask database driver to throw Exceptions on errors (recommended for compatibility)\n  493:          * - RedBeanPHP will ask database driver to use associative arrays when fetching (recommended for compatibility)\n  494  \t *\n  495  \t * @param \\PDO    $pdo       PDO instance\n  ...\n  686  \t * </code>\n  687  \t *\n  688: \t * The example above illustrates how to use the RedBeanPHP\n  689  \t * query debugger through the facade.\n  690  \t *\n  ...\n  808  \t * For some low-level database operations you'll need access to the PDO\n  809  \t * object. Not that this method is only available in RPDO and other\n  810: \t * PDO based database drivers for RedBeanPHP. Other drivers may not have\n  811  \t * a method like this. The following example demonstrates how to obtain\n  812  \t * a reference to the PDO instance from the facade:\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Logger\\RDefault.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Logger;\n    4  \n    5: use RedBeanPHP\\Logger as Logger;\n    6: use RedBeanPHP\\RedException as RedException;\n    7  \n    8  /**\n    9:  * Logger. Provides a basic logging function for RedBeanPHP.\n   10   *\n   11:  * @file    RedBeanPHP/Logger.php\n   12:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   13   * @license BSD/GPLv2\n   14   *\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Logger\\RDefault\\Debug.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Logger\\RDefault;\n    4  \n    5: use RedBeanPHP\\Logger as Logger;\n    6: use RedBeanPHP\\Logger\\RDefault as RDefault;\n    7: use RedBeanPHP\\RedException as RedException;\n    8  \n    9  /**\n   10   * Debug logger.\n   11   * A special logger for debugging purposes.\n   12:  * Provides debugging logging functions for RedBeanPHP.\n   13   *\n   14:  * @file    RedBeanPHP/Logger/RDefault/Debug.php\n   15:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   16   * @license BSD/GPLv2\n   17   *\n   ..\n  102  \n  103  \t\tif ( $paramType != \\PDO::PARAM_INT && $paramType != \\PDO::PARAM_STR ) {\n  104: \t\t\tif ( \\RedBeanPHP\\QueryWriter\\AQueryWriter::canBeTreatedAsInt( $value ) || $value === 'NULL') {\n  105  \t\t\t\t$paramType = \\PDO::PARAM_INT;\n  106  \t\t\t} else {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Plugin\\Pool.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Plugin;\n    4  \n    5: use RedBeanPHP\\ToolBox;\n    6: use RedBeanPHP\\OODBBean;\n    7: use RedBeanPHP\\OODB;\n    8: use RedBeanPHP\\BeanHelper;\n    9: use RedBeanPHP\\R;\n   10  \n   11  /**\n   ..\n   23   * The NonStaticBeanHelper is used by the database pool class PoolDB.\n   24   */\n   25: class NonStaticBeanHelper extends \\RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper {\n   26  \n   27  \t/**\n   ..\n   33  \t{\n   34  \t\t$toolbox = $this->toolbox;\n   35: \t\treturn array( $toolbox->getRedbean(), $toolbox->getDatabaseAdapter(), $toolbox->getWriter(), $toolbox );\n   36  \t}\n   37  \n   ..\n  112   * </code>\n  113   *\n  114:  * @file    RedBeanPHP/Plugin/Pool.php\n  115:  * @author  RedBeanPHP Community\n  116   * @license BSD/GPLv2\n  117   *\n  118   * @copyright\n  119:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n  120   * This source file is subject to the BSD/GPLv2 License that is bundled\n  121   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\QueryWriter\\AQueryWriter.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\QueryWriter;\n    4  \n    5: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    6: use RedBeanPHP\\RedException as RedException;\n    7: use RedBeanPHP\\QueryWriter as QueryWriter;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9: use RedBeanPHP\\RedException\\SQL as SQLException;\n   10  \n   11  /**\n   12:  * RedBeanPHP Abstract Query Writer.\n   13:  * Represents an abstract Database to RedBean\n   14:  * To write a driver for a different database for RedBean\n   15   * Contains a number of functions all implementors can\n   16   * inherit or override.\n   17   *\n   18:  * @file    RedBeanPHP/QueryWriter/AQueryWriter.php\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license BSD/GPLv2\n   21   *\n   22   * @copyright\n   23:  * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   24   * This source file is subject to the BSD/GPLv2 License that is bundled\n   25   * with this source code in the file license.txt.\n   ..\n  261  \n  262  \t/**\n  263: \t * Globally available service method for RedBeanPHP.\n  264  \t * Converts a camel cased string to a snake cased string.\n  265  \t *\n  ...\n  274  \n  275  \t/**\n  276: \t * Globally available service method for RedBeanPHP.\n  277  \t * Converts a snake cased string to a camel cased string.\n  278  \t *\n  ...\n  849  \t{\n  850  \t\tif ( !is_string( $struct ) || !preg_match( '/^[a-zA-Z0-9_]+$/', $struct ) ) {\n  851: \t\t\tthrow new RedException( 'Identifier does not conform to RedBeanPHP security policies.' );\n  852  \t\t}\n  853  \n  ...\n 1520  \t{\n 1521  \t\tif ($selectForm === QueryWriter::C_CTE_SELECT_COUNT) {\n 1522: \t\t\t$selectForm = \"count(redbeantree.*)\";\n 1523  \t\t} elseif ( $selectForm === QueryWriter::C_CTE_SELECT_NORMAL ) {\n 1524: \t\t\t$selectForm = \"redbeantree.*\";\n 1525  \t\t}\n 1526  \t\t$alias     = $up ? 'parent' : 'child';\n ....\n 1535  \t\t}\n 1536  \t\t$sql = $this->glueSQLCondition( $addSql, QueryWriter::C_GLUE_WHERE );\n 1537: \t\t$sql = $this->parseJoin( 'redbeantree', $sql, $type );\n 1538  \t\t$rows = $this->adapter->get(\"\n 1539: \t\t\tWITH RECURSIVE redbeantree AS\n 1540  \t\t\t(\n 1541  \t\t\t\tSELECT *\n ....\n 1543  \t\t\t\tUNION ALL\n 1544  \t\t\t\tSELECT {$type}.* FROM {$type}\n 1545: \t\t\t\tINNER JOIN redbeantree {$alias} ON {$direction}\n 1546  \t\t\t)\n 1547: \t\t\tSELECT {$selectForm} FROM redbeantree {$sql};\",\n 1548  \t\t\t$bindings\n 1549  \t\t);\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\QueryWriter\\CUBRID.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\QueryWriter;\n    4: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    5: use RedBeanPHP\\QueryWriter as QueryWriter;\n    6: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    7: use RedBeanPHP\\Adapter as Adapter;\n    8: use RedBeanPHP\\RedException\\SQL as SQLException;\n    9  \n   10  /**\n   11:  * RedBeanPHP CUBRID Writer.\n   12:  * This is a QueryWriter class for RedBeanPHP.\n   13   * This QueryWriter provides support for the CUBRID database platform.\n   14   *\n   15:  * @file    RedBeanPHP/QueryWriter/CUBRID.php\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license BSD/GPLv2\n   18   *\n   19   * @copyright\n   20:  * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n  112  \t * Most of the time, you do not need to use this constructor,\n  113  \t * since the facade takes care of constructing and wiring the\n  114: \t * RedBeanPHP core objects. However if you would like to\n  115  \t * assemble an OODB instance yourself, this is how it works:\n  116  \t *\n  ...\n  128  \t * </code>\n  129  \t *\n  130: \t * The example above creates the 3 RedBeanPHP core objects:\n  131  \t * the Adapter, the Query Writer and the OODB instance and\n  132  \t * wires them together. The example also demonstrates some of\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\QueryWriter\\Firebird.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\QueryWriter;\n    4  \n    5  /* Experimental */\n    .\n    8   * This driver has been created in 2015 but it has never been distributed\n    9   * because it was never finished. However, in the true spirit of open source\n   10:  * it is now available in the source of RedBeanPHP.\n   11   *\n   12   * Consider this driver experimental or help me finish it to\n   ..\n   15   */\n   16  \n   17: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   18: use RedBeanPHP\\QueryWriter as QueryWriter;\n   19: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n   20: use RedBeanPHP\\Adapter as Adapter;\n   21: use RedBeanPHP\\RedException\\SQL as SQLException;\n   22  \n   23  /**\n   24:  * RedBeanPHP Firebird/Interbase QueryWriter.\n   25:  * This is a QueryWriter class for RedBeanPHP.\n   26   * This QueryWriter provides support for the Firebird/Interbase database platform.\n   27   *\n   28   * *** Warning - Experimental Software | Not ready for Production ****\n   29   *\n   30:  * @file    RedBeanPHP/QueryWriter/Firebird.php\n   31:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   32   * @license BSD/GPLv2\n   33   *\n   34   * @copyright\n   35:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   36   * This source file is subject to the BSD/GPLv2 License that is bundled\n   37   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\QueryWriter\\MySQL.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\QueryWriter;\n    4  \n    5: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    8: use RedBeanPHP\\Adapter as Adapter;\n    9: use RedBeanPHP\\RedException\\SQL as SQLException;\n   10  \n   11  /**\n   12:  * RedBeanPHP MySQLWriter.\n   13:  * This is a QueryWriter class for RedBeanPHP.\n   14   * This QueryWriter provides support for the MySQL/MariaDB database platform.\n   15   *\n   16:  * @file    RedBeanPHP/QueryWriter/MySQL.php\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license BSD/GPLv2\n   19   *\n   20   * @copyright\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n  116  \t * Most of the time, you do not need to use this constructor,\n  117  \t * since the facade takes care of constructing and wiring the\n  118: \t * RedBeanPHP core objects. However if you would like to\n  119  \t * assemble an OODB instance yourself, this is how it works:\n  120  \t *\n  ...\n  132  \t * </code>\n  133  \t *\n  134: \t * The example above creates the 3 RedBeanPHP core objects:\n  135  \t * the Adapter, the Query Writer and the OODB instance and\n  136  \t * wires them together. The example also demonstrates some of\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\QueryWriter\\PostgreSQL.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\QueryWriter;\n    4  \n    5: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    8: use RedBeanPHP\\Adapter as Adapter;\n    9: use RedBeanPHP\\RedException\\SQL as SQLException;\n   10  \n   11  /**\n   12:  * RedBeanPHP PostgreSQL Query Writer.\n   13:  * This is a QueryWriter class for RedBeanPHP.\n   14   * This QueryWriter provides support for the PostgreSQL database platform.\n   15   *\n   16:  * @file    RedBeanPHP/QueryWriter/PostgreSQL.php\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license BSD/GPLv2\n   19   *\n   20   * @copyright\n   21:  * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n  143  \t * Most of the time, you do not need to use this constructor,\n  144  \t * since the facade takes care of constructing and wiring the\n  145: \t * RedBeanPHP core objects. However if you would like to\n  146  \t * assemble an OODB instance yourself, this is how it works:\n  147  \t *\n  ...\n  159  \t * </code>\n  160  \t *\n  161: \t * The example above creates the 3 RedBeanPHP core objects:\n  162  \t * the Adapter, the Query Writer and the OODB instance and\n  163  \t * wires them together. The example also demonstrates some of\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\QueryWriter\\SQLiteT.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\QueryWriter;\n    4  \n    5: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    8: use RedBeanPHP\\Adapter as Adapter;\n    9: use RedBeanPHP\\RedException\\SQL as SQLException;\n   10  \n   11  /**\n   12:  * RedBeanPHP SQLiteWriter with support for SQLite types\n   13:  * This is a QueryWriter class for RedBeanPHP.\n   14   * This QueryWriter provides support for the SQLite database platform.\n   15   *\n   16:  * @file    RedBeanPHP/QueryWriter/SQLiteT.php\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license BSD/GPLv2\n   19   *\n   20   * @copyright\n   21:  * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n  239  \t * Most of the time, you do not need to use this constructor,\n  240  \t * since the facade takes care of constructing and wiring the\n  241: \t * RedBeanPHP core objects. However if you would like to\n  242  \t * assemble an OODB instance yourself, this is how it works:\n  243  \t *\n  ...\n  255  \t * </code>\n  256  \t *\n  257: \t * The example above creates the 3 RedBeanPHP core objects:\n  258  \t * the Adapter, the Query Writer and the OODB instance and\n  259  \t * wires them together. The example also demonstrates some of\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\RedException\\SQL.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\RedException;\n    4  \n    5: use RedBeanPHP\\RedException as RedException;\n    6  \n    7  /**\n    .\n    9   * Represents a generic database exception independent of the underlying driver.\n   10   *\n   11:  * @file       RedBeanPHP/RedException/SQL.php\n   12:  * @author     Gabor de Mooij and the RedBeanPHP Community\n   13   * @license    BSD/GPLv2\n   14   *\n   15   * @copyright\n   16:  * (c) copyright G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   17   * This source file is subject to the BSD/GPLv2 License that is bundled\n   18   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Repository\\Fluid.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Repository;\n    4  \n    5: use RedBeanPHP\\OODBBean as OODBBean;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\BeanHelper as BeanHelper;\n    9: use RedBeanPHP\\RedException\\SQL as SQLException;\n   10: use RedBeanPHP\\Repository as Repository;\n   11  \n   12  /**\n   ..\n   19   * method.\n   20   *\n   21:  * @file    RedBeanPHP/Repository/Fluid.php\n   22:  * @author  Gabor de Mooij and the RedBeanPHP community\n   23   * @license BSD/GPLv2\n   24   *\n   25   * @copyright\n   26:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   27   * This source file is subject to the BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n   ..\n  267  \t * It searches for a OODBBean Bean Object in the\n  268  \t * database. It does not matter how this bean has been stored.\n  269: \t * RedBean uses the primary key ID $id and the string $type\n  270  \t * to find the bean. The $type specifies what kind of bean you\n  271  \t * are looking for; this is the same type as used with the\n  272: \t * dispense() function. If RedBean finds the bean it will return\n  273  \t * the OODB Bean object; if it cannot find the bean\n  274: \t * RedBean will return a new bean of type $type and with\n  275  \t * primary key ID 0. In the latter case it acts basically the\n  276  \t * same as dispense().\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Repository\\Frozen.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Repository;\n    4  \n    5: use RedBeanPHP\\OODBBean as OODBBean;\n    6: use RedBeanPHP\\QueryWriter as QueryWriter;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\BeanHelper as BeanHelper;\n    9: use RedBeanPHP\\RedException\\SQL as SQLException;\n   10: use RedBeanPHP\\Repository as Repository;\n   11  \n   12  /**\n   ..\n   19   * method.\n   20   *\n   21:  * @file    RedBeanPHP/Repository/Frozen.php\n   22:  * @author  Gabor de Mooij and the RedBeanPHP community\n   23   * @license BSD/GPLv2\n   24   *\n   25   * @copyright\n   26:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   27   * This source file is subject to the BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n   ..\n  135  \t * It searches for a OODBBean Bean Object in the\n  136  \t * database. It does not matter how this bean has been stored.\n  137: \t * RedBean uses the primary key ID $id and the string $type\n  138  \t * to find the bean. The $type specifies what kind of bean you\n  139  \t * are looking for; this is the same type as used with the\n  140: \t * dispense() function. If RedBean finds the bean it will return\n  141  \t * the OODB Bean object; if it cannot find the bean\n  142: \t * RedBean will return a new bean of type $type and with\n  143  \t * primary key ID 0. In the latter case it acts basically the\n  144  \t * same as dispense().\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\ArrayTool.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7: use RedBeanPHP\\RedException as RedException;\n    8  \n    9  /**\n   ..\n   17   * array functions for dealing with SQL queries.\n   18   *\n   19:  * @file    RedBeanPHP/Util/ArrayTool.php\n   20:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   21   * @license BSD/GPLv2\n   22   *\n   23   * @copyright\n   24:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   25   * This source file is subject to the BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\Diff.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7: use RedBeanPHP\\ToolBox as ToolBox;\n    8: use RedBeanPHP\\Finder;\n    9  \n   10  /**\n   ..\n   14   * tables and selects (pulldowns) from the database.\n   15   * \n   16:  * @file    RedBeanPHP/Util/Diff.php\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license BSD/GPLv2\n   19   *\n   20   * @copyright\n   21:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   22   * This source file is subject to the BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\DispenseHelper.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7: use RedBeanPHP\\RedException as RedException;\n    8  \n    9  /**\n   ..\n   12   * A helper class containing a dispense utility.\n   13   * \n   14:  * @file    RedBeanPHP/Util/DispenseHelper.php\n   15:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   16   * @license BSD/GPLv2\n   17   *\n   18   * @copyright\n   19:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   20   * This source file is subject to the BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n   ..\n   30  \t/**\n   31  \t * Sets the enforce naming policy flag. If set to\n   32: \t * TRUE the RedBeanPHP naming policy will be enforced.\n   33  \t * Otherwise it will not. Use at your own risk.\n   34  \t * Setting this to FALSE is not recommended.\n   ..\n   44  \n   45  \t/**\n   46: \t * Checks whether the bean type conforms to the RedbeanPHP\n   47  \t * naming policy. This method will throw an exception if the\n   48: \t * type does not conform to the RedBeanPHP database column naming\n   49  \t * policy.\n   50  \t *\n   51: \t * The RedBeanPHP naming policy for beans states that valid\n   52  \t * bean type names contain only:\n   53  \t *\n   ..\n   61  \t * also apply to bean types.\n   62  \t *\n   63: \t * The RedBeanPHP naming policy ensures that, without any\n   64  \t * configuration, the core functionalities work across many\n   65  \t * databases and operating systems, including those that are\n   ..\n   81  \n   82  \t/**\n   83: \t * Dispenses a new RedBean OODB Bean for use with\n   84: \t * the rest of the methods. RedBeanPHP thinks in beans, the bean is the\n   85: \t * primary way to interact with RedBeanPHP and the database managed by\n   86: \t * RedBeanPHP. To load, store and delete data from the database using RedBeanPHP\n   87: \t * you exchange these RedBeanPHP OODB Beans. The only exception to this rule\n   88  \t * are the raw query methods like R::getCell() or R::exec() and so on.\n   89  \t * The dispense method is the 'preferred way' to create a new bean.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\Dump.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7  \n    8  /**\n    .\n   16   * debugging purposes.\n   17   *\n   18:  * @file    RedBeanPHP/Util/Dump.php\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license BSD/GPLv2\n   21   *\n   22   * @copyright\n   23:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   24   * This source file is subject to the BSD/GPLv2 License that is bundled\n   25   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\Either.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5  /**\n    .\n    7   *\n    8   * The Either Utility class provides an easy way to\n    9:  * substitute the NULL coalesce operator in RedBeanPHP\n   10   * (since the lazy loading interface interferes with the ??\n   11   * operator) in a way that can also be used in older PHP-versions.\n   12   * \n   13:  * @file    RedBeanPHP/Util/Either.php\n   14:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   15   * @license BSD/GPLv2\n   16   *\n   17   * @copyright\n   18:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   19   * This source file is subject to the BSD/GPLv2 License that is bundled\n   20   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\Feature.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4: use RedBeanPHP\\Facade as R;\n    5: use RedBeanPHP\\OODBBean;\n    6  \n    7  /**\n    .\n   12   * without accidentally breaking backward compatibility.\n   13   *\n   14:  * @file    RedBeanPHP/Util/Feature.php\n   15:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   16   * @license BSD/GPLv2\n   17   *\n   18   * @copyright\n   19:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   20   * This source file is subject to the BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\Look.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7: use RedBeanPHP\\ToolBox as ToolBox;\n    8: use RedBeanPHP\\Finder;\n    9  \n   10  /**\n   ..\n   14   * tables and selects (pulldowns) from the database.\n   15   *\n   16:  * @file    RedBeanPHP/Util/Look.php\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license BSD/GPLv2\n   19   *\n   20   * @copyright\n   21:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   22   * This source file is subject to the BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n   75  \t * newline character specified in the last parameter for readability.\n   76  \t *\n   77: \t * In previous versions of RedBeanPHP you had to use:\n   78  \t * R::getLook()->look() instead of R::look(). However to improve useability of the\n   79  \t * library the look() function can now directly be invoked from the facade.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\MatchUp.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7: use RedBeanPHP\\ToolBox as ToolBox;\n    8: use RedBeanPHP\\Finder;\n    9  \n   10  /**\n   ..\n   17   * a conditional update.\n   18   *\n   19:  * @file    RedBeanPHP/Util/MatchUp.php\n   20:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   21   * @license BSD/GPLv2\n   22   *\n   23   * @copyright\n   24:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   25   * This source file is subject to the BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n   ..\n   46  \t/**\n   47  \t * MatchUp is a powerful productivity boosting method that can replace simple control\n   48: \t * scripts with a single RedBeanPHP command. Typically, matchUp() is used to\n   49  \t * replace login scripts, token generation scripts and password reset scripts.\n   50  \t * The MatchUp method takes a bean type, an SQL query snippet (starting at the WHERE clause),\n   ..\n   89  \t{\n   90  \t\t$finder = new Finder( $this->toolbox );\n   91: \t\t$oodb   = $this->toolbox->getRedBean();\n   92  \t\t$bean = $finder->findOne( $type, $sql, $bindings );\n   93  \t\tif ( $bean && $onFoundDo ) {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\MultiLoader.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7  \n    8  /**\n    .\n   17   * with different types and a common ID.\n   18   *\n   19:  * @file    RedBeanPHP/Util/MultiLoader.php\n   20:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   21   * @license BSD/GPLv2\n   22   *\n   23   * @copyright\n   24:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   25   * This source file is subject to the BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n   ..\n   33  \t * for loading a one-to-one relation. In a typical 1-1 relation,\n   34  \t * you have two records sharing the same primary key.\n   35: \t * RedBeanPHP has only limited support for 1-1 relations.\n   36  \t * In general it is recommended to use 1-N for this.\n   37  \t *\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\QuickExport.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7: use RedBeanPHP\\ToolBox as ToolBox;\n    8  \n    9  /**\n   ..\n   13   * expose the result of SQL queries as well-known formats like CSV.\n   14   *\n   15:  * @file    RedBeanPHP/Util/QuickExport.php\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license BSD/GPLv2\n   18   *\n   19   * @copyright\n   20:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   21   * This source file is subject to the BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\Transaction.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\OODB as OODB;\n    6: use RedBeanPHP\\OODBBean as OODBBean;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\Adapter as Adapter;\n    9  \n   10  /**\n   ..\n   19   * contains a method to wrap your callback in a transaction.\n   20   *\n   21:  * @file    RedBeanPHP/Util/Transaction.php\n   22:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   23   * @license BSD/GPLv2\n   24   *\n   25   * @copyright\n   26:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   27   * This source file is subject to the BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\Util\\Tree.php:\n    1  <?php\n    2  \n    3: namespace RedBeanPHP\\Util;\n    4  \n    5: use RedBeanPHP\\ToolBox;\n    6: use RedBeanPHP\\OODB;\n    7: use RedBeanPHP\\OODBBean;\n    8: use RedBeanPHP\\QueryWriter;\n    9  \n   10  /**\n   ..\n   16   * @experimental feature\n   17   *\n   18:  * @file    RedBeanPHP/Util/Tree.php\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license BSD/GPLv2\n   21   *\n   22   * @copyright\n   23:  * copyright (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community\n   24   * This source file is subject to the BSD/GPLv2 License that is bundled\n   25   * with this source code in the file license.txt.\n   ..\n   52  \t\t$this->toolbox = $toolbox;\n   53  \t\t$this->writer  = $toolbox->getWriter();\n   54: \t\t$this->oodb    = $toolbox->getRedBean();\n   55  \t}\n   56  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT.php:\n    2  \n    3  namespace RedUNIT;\n    4: use RedBeanPHP\\Facade as R;\n    5  \n    6  /**\n    7   * RedUNIT\n    8:  * Base class for RedUNIT, the micro unit test suite for RedBeanPHP\n    9   *\n   10   * @file               RedUNIT/RedUNIT.php\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\cli\\runtests.php:\n   34  \n   35  echo '*** RedUNIT ***'.PHP_EOL;\n   36: echo 'Welcome to RedUNIT Unit testing framework for RedBeanPHP.'.PHP_EOL;\n   37  echo PHP_EOL;\n   38  \n   ..\n  315  \t\t\tif ( strpos( $file, 'phar/' ) === FALSE ) continue;\n  316  \t\t\tif ( strpos( $file, '.php' ) === FALSE ) continue;\n  317: \t\t\tif ( strpos( $file, 'RedBeanPHP' ) === FALSE ) continue;\n  318  \t\t}\n  319  \t}\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\cli\\plugins\\myhooks.php:\n    4  require 'RedUNIT/CUBRID.php';\n    5  //Load the CUBRID query writer\n    6: require('../RedBeanPHP/QueryWriter/CUBRID.php');\n    7  \n    8  //Define extra test packages from the hook\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\helpers\\classes.php:\n    4   * This file contains a collection of test classes that can be used by\n    5   * the test suite. None of these classes should be used by users of\n    6:  * the RedBeanPHP library, they are meant for internal use only!\n    7   * These classes are most of the time, single purpose classes, that are\n    8   * only used once or twice. They are written down in a compact format\n    .\n   14   * Test utility class.\n   15   * This class is meant for testing purposes only and should\n   16:  * never be used for anything else than RedBeanPHP Unit Testing.\n   17   * Observable Mock\n   18   */\n   19: class ObservableMock extends \\RedBeanPHP\\Observable\n   20  {\n   21  \tpublic function test( $eventname, $info ){ $this->signal( $eventname, $info ); }\n   ..\n   25   * Test utility class.\n   26   * This class is meant for testing purposes only and should\n   27:  * never be used for anything else than RedBeanPHP Unit Testing.\n   28   * Observer Mock\n   29   */\n   30: class ObserverMock implements \\RedBeanPHP\\Observer\n   31  {\n   32  \tpublic $event = FALSE;\n   ..\n   38   * Test utility class.\n   39   * This class is meant for testing purposes only and should\n   40:  * never be used for anything else than RedBeanPHP Unit Testing.\n   41   * Shared helper class for tests.\n   42   * A test model to test FUSE functions.\n   43   */\n   44: class Model_Band extends RedBeanPHP\\SimpleModel\n   45  {\n   46  \tpublic function after_update() { }\n   ..\n   60   * Test utility class.\n   61   * This class is meant for testing purposes only and should\n   62:  * never be used for anything else than RedBeanPHP Unit Testing.\n   63   * Shared helper class for tests.\n   64   * A Model class for testing Models/FUSE and related features.\n   65   */\n   66: class Model_Box extends RedBeanPHP\\SimpleModel\n   67  {\n   68  \tpublic function delete() { $a = $this->bean->ownBottle; }\n   ..\n   72   * Test utility class.\n   73   * This class is meant for testing purposes only and should\n   74:  * never be used for anything else than RedBeanPHP Unit Testing.\n   75   * Shared helper class for tests.\n   76   * A Model class for testing Models/FUSE and related features.\n   77   */\n   78: class Model_Cocoa extends RedBeanPHP\\SimpleModel\n   79  {\n   80  \tpublic function update(){}\n   ..\n   83   * Test utility class.\n   84   * This class is meant for testing purposes only and should\n   85:  * never be used for anything else than RedBeanPHP Unit Testing.\n   86   * Shared helper class for tests.\n   87   * A Model class for testing Models/FUSE and related features.\n   88   */\n   89: class Model_Taste extends RedBeanPHP\\SimpleModel\n   90  {\n   91  \tpublic function after_update()\n   ..\n   98   * Test utility class.\n   99   * This class is meant for testing purposes only and should\n  100:  * never be used for anything else than RedBeanPHP Unit Testing.\n  101   * Shared helper class for tests.\n  102   * A Model class for testing Models/FUSE and related features.\n  103   */\n  104: class Model_Coffee extends RedBeanPHP\\SimpleModel\n  105  {\n  106  \tpublic static $defaults = array();\n  ...\n  134   * Test utility class.\n  135   * This class is meant for testing purposes only and should\n  136:  * never be used for anything else than RedBeanPHP Unit Testing.\n  137   * Shared helper class for tests.\n  138   * A Model class for testing Models/FUSE and related features.\n  139   */\n  140: class Model_Test extends RedBeanPHP\\SimpleModel\n  141  {\n  142  \tpublic function update()\n  ...\n  159   * Test utility class.\n  160   * This class is meant for testing purposes only and should\n  161:  * never be used for anything else than RedBeanPHP Unit Testing.\n  162   * Shared helper class for tests.\n  163   * A Model class for testing Models/FUSE and related features.\n  ...\n  165   */\n  166  global $lifeCycle;\n  167: class Model_Bandmember extends RedBeanPHP\\SimpleModel\n  168  {\n  169  \tpublic function open(){ global $lifeCycle; $lifeCycle .= \"\\n called open: \" . $this->id; }\n  ...\n  178   * Test utility class.\n  179   * This class is meant for testing purposes only and should\n  180:  * never be used for anything else than RedBeanPHP Unit Testing.\n  181   * A custom BeanHelper to test custom FUSE operations in\n  182   * Blackhole/Fusebox\n  183   */\n  184: class Model_Soup extends \\RedBeanPHP\\SimpleModel\n  185  {\n  186  \tprivate $flavour = '';\n  ...\n  193   * Test utility class.\n  194   * This class is meant for testing purposes only and should\n  195:  * never be used for anything else than RedBeanPHP Unit Testing.\n  196   * A custom BeanHelper to test custom FUSE operations in\n  197   * Base/Fuse.\n  198   */\n  199: class SoupBeanHelper extends \\RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper\n  200  {\n  201: \tpublic function getModelForBean( \\RedBeanPHP\\OODBBean $bean )\n  202  \t{\n  203  \t\tif ( $bean->getMeta( 'type' ) === 'meal' ) {\n  ...\n  214   * Test utility class.\n  215   * This class is meant for testing purposes only and should\n  216:  * never be used for anything else than RedBeanPHP Unit Testing.\n  217   * Used in Base/Boxing and Base/Misc to test boxing of beans.\n  218   * Just a plain model for use with a bean with nothing in it.\n  219   */\n  220: class Model_Boxedbean extends \\RedBeanPHP\\SimpleModel{}\n  221  \n  222  /**\n  223   * Test utility class.\n  224   * This class is meant for testing purposes only and should\n  225:  * never be used for anything else than RedBeanPHP Unit Testing.\n  226   * Used in Mysql/Uuid, Postgres/Uuid and Base/Association. Meant\n  227   * to be a versatile, generic test model.\n  228   */\n  229: class Model_Ghost_House extends \\RedBeanPHP\\SimpleModel\n  230  {\n  231  \tpublic static $deleted = FALSE;\n  ...\n  236   * Test utility class.\n  237   * This class is meant for testing purposes only and should\n  238:  * never be used for anything else than RedBeanPHP Unit Testing.\n  239   * Used in Mysql/Uuid, Postgres/Uuid and Base/Association. Meant\n  240   * to be a versatile, generic test model for N-M relations.\n  241   */\n  242: class Model_Ghost_Ghost extends \\RedBeanPHP\\SimpleModel\n  243  {\n  244  \tpublic static $deleted = FALSE;\n  ...\n  249   * Test utility class.\n  250   * This class is meant for testing purposes only and should\n  251:  * never be used for anything else than RedBeanPHP Unit Testing.\n  252   * Mock class for testing purposes. Used in Base/Association and\n  253   * Base/Foreignkeys to emit errors to test handling of errors\n  254   * originating from the Query Writer.\n  255   */\n  256: class FaultyWriter extends \\RedBeanPHP\\QueryWriter\\MySQL\n  257  {\n  258  \tprotected $sqlState;\n  259  \tpublic function setSQLState( $sqlState ){ $this->sqlState = $sqlState; }\n  260  \tpublic function addUniqueConstraint( $sourceType, $destType ){\n  261: \t\t$exception = new \\RedBeanPHP\\RedException\\SQL;\n  262  \t\t$exception->setSQLState( $this->sqlState );\n  263  \t\tthrow $exception;\n  264  \t}\n  265: \tprotected function getKeyMapForType( $type ){throw new \\RedBeanPHP\\RedException\\SQL;}\n  266  }\n  267  \n  ...\n  269   * Test utility class.\n  270   * This class is meant for testing purposes only and should\n  271:  * never be used for anything else than RedBeanPHP Unit Testing.\n  272   * Mock class to test default implementations in AQueryWriter.\n  273   */\n  274: class NullWriter extends \\RedBeanPHP\\QueryWriter\\AQueryWriter {}\n  275  \n  276  /**\n  277   * Test utility class.\n  278   * This class is meant for testing purposes only and should\n  279:  * never be used for anything else than RedBeanPHP Unit Testing.\n  280   * Used in Base/Foreignkeys (testFKInspect) to test foreign keys.\n  281  */\n  282: class ProxyWriter extends \\RedBeanPHP\\QueryWriter\\AQueryWriter {\n  283  \tpublic static function callMethod( $object, $method, $arg1 = NULL, $arg2 = NULL, $arg3 = NULL ) {\n  284  \t\treturn $object->$method( $arg1, $arg2, $arg3 );\n  ...\n  289   * Test utility class.\n  290   * This class is meant for testing purposes only and should\n  291:  * never be used for anything else than RedBeanPHP Unit Testing.\n  292   * Mock class to test proper model name\n  293   * beautificattion for link table beans in FUSE.\n  294   */\n  295: class Model_PageWidget extends RedBean_SimpleModel {\n  296  \tprivate static $test = '';\n  297  \tpublic static function getTestReport(){ return self::$test; }\n  ...\n  302   * Test utility class.\n  303   * This class is meant for testing purposes only and should\n  304:  * never be used for anything else than RedBeanPHP Unit Testing.\n  305   * Mock class to test proper model name\n  306   * beautificattion for link table beans in FUSE.\n  307   */\n  308: class Model_Gadget_Page extends RedBean_SimpleModel {\n  309  \tprivate static $test = '';\n  310  \tpublic static function getTestReport(){ return self::$test;}\n  ...\n  315   * Test utility class.\n  316   * This class is meant for testing purposes only and should\n  317:  * never be used for anything else than RedBeanPHP Unit Testing.\n  318   * Mock class to test proper model name\n  319   * beautificattion for link table beans in FUSE.\n  320   */\n  321: class Model_A_B_C extends RedBean_SimpleModel {\n  322  \tprivate static $test = '';\n  323  \tpublic static function getTestReport(){ return self::$test; }\n  ...\n  328   * Test utility class.\n  329   * This class is meant for testing purposes only and should\n  330:  * never be used for anything else than RedBeanPHP Unit Testing.\n  331   * Used in Base/Update to test SQL filters with links\n  332   */\n  333: class Model_BookBook extends \\RedBean_SimpleModel {\n  334  \tpublic function delete() {\n  335  \t\tasrt($this->bean->shelf, 'x13');\n  ...\n  340   * Test utility class.\n  341   * This class is meant for testing purposes only and should\n  342:  * never be used for anything else than RedBeanPHP Unit Testing.\n  343   * Used in Base/Fuse (error handling in Fuse) and\n  344   * Base/Issue408 (export issue).\n  345   */\n  346: class Model_Feed extends \\RedbeanPHP\\SimpleModel {\n  347  \tpublic function update() { $this->bean->post = json_encode( $this->bean->post );}\n  348  \tpublic function open() { $this->bean->post = json_decode( $this->bean->post, TRUE );}\n  ...\n  352   * Test utility class.\n  353   * This class is meant for testing purposes only and should\n  354:  * never be used for anything else than RedBeanPHP Unit Testing.\n  355   * UUID QueryWriter for MySQL for testing purposes.\n  356:  * Used in Mysql/Uuid to test if RedBeanPHP can be used with a\n  357:  * UUID-strategy. While UUID keys are not part of the RedBeanPHP core,\n  358   * examples are given on the website and this test makes sure those examples\n  359   * are working as expected.\n  360   */\n  361: class UUIDWriterMySQL extends \\RedBeanPHP\\QueryWriter\\MySQL {\n  362  \tprotected $defaultValue = '@uuid';\n  363  \tconst C_DATATYPE_SPECIAL_UUID  = 97;\n  364: \tpublic function __construct( \\RedBeanPHP\\Adapter $adapter )\n  365  \t{\n  366  \t\tparent::__construct( $adapter );\n  ...\n  393   * Test utility class.\n  394   * This class is meant for testing purposes only and should\n  395:  * never be used for anything else than RedBeanPHP Unit Testing.\n  396   * UUID QueryWriter for PostgreSQL for testing purposes.\n  397:  * Used in Postgres/Uuid to test if RedBeanPHP can be used with a\n  398:  * UUID-strategy. While UUID keys are not part of the RedBeanPHP core,\n  399   * examples are given on the website and this test makes sure those examples\n  400   * are working as expected.\n  401   */\n  402: class UUIDWriterPostgres extends \\RedBeanPHP\\QueryWriter\\PostgreSQL {\n  403  \n  404  \tprotected $defaultValue = 'uuid_generate_v4()';\n  405  \tconst C_DATATYPE_SPECIAL_UUID  = 97;\n  406  \n  407: \tpublic function __construct( \\RedBeanPHP\\Adapter $adapter )\n  408  \t{\n  409  \t\tparent::__construct( $adapter );\n  ...\n  426   * Test utility class.\n  427   * This class is meant for testing purposes only and should\n  428:  * never be used for anything else than RedBeanPHP Unit Testing.\n  429   * This diagnostic bean class adds a method to read the current\n  430   * status of the modifier flags. Used to test interactions with\n  431   * beans and monitor the effect on the internal flags.\n  432   */\n  433: class DiagnosticBean extends \\RedBeanPHP\\OODBBean {\n  434  \n  435  \t/**\n  ...\n  453   * Test utility class.\n  454   * This class is meant for testing purposes only and should\n  455:  * never be used for anything else than RedBeanPHP Unit Testing.\n  456   * This is diagnostic class that allows access to otherwise\n  457   * protected methods.Used to test FUSE hooks in Base/Fuse.php\n  458   * Subclassed by Model_Probe.\n  459   */\n  460: class DiagnosticModel extends \\RedBeanPHP\\SimpleModel\n  461  {\n  462  \n  ...\n  483   * Test utility class.\n  484   * This class is meant for testing purposes only and should\n  485:  * never be used for anything else than RedBeanPHP Unit Testing.\n  486   * Used in Base/Database (testDatabaseCapabilityChecker) to check\n  487   * database capabilities.\n  488  */\n  489: class DatabaseCapabilityChecker extends \\RedBeanPHP\\Driver\\RPDO {\n  490  \n  491  \tpublic function __construct( \\PDO $pdo )\n  ...\n  503   * Test utility class.\n  504   * This class is meant for testing purposes only and should\n  505:  * never be used for anything else than RedBeanPHP Unit Testing.\n  506   * Used in Test Suite Base/Bean (testToStringOverride)\n  507   * to test string overrides.\n  508   */\n  509: class Model_String extends \\RedBeanPHP\\SimpleModel {\n  510  \tpublic function __toString() {\n  511  \t\treturn base64_encode( $this->bean->text );\n  ...\n  516   * Test utility class.\n  517   * This class is meant for testing purposes only and should\n  518:  * never be used for anything else than RedBeanPHP Unit Testing.\n  519   * This is diagnostic class that allows access to otherwise\n  520   * protected methods.Used to test FUSE hooks in Base/Fuse.php\n  ...\n  525   * Test utility class.\n  526   * This class is meant for testing purposes only and should\n  527:  * never be used for anything else than RedBeanPHP Unit Testing.\n  528   * Class to mock adapter.\n  529   * Inspects behavior of classes interacting with the adapter class\n  530   * by capturing the method invocations.\n  531   */\n  532: class Mockdapter implements \\RedBeanPHP\\Adapter {\n  533  \n  534  \tpublic $answerGetCol = NULL;\n  ...\n  566   * Test utility class.\n  567   * This class is meant for testing purposes only and should\n  568:  * never be used for anything else than RedBeanPHP Unit Testing.\n  569   * Custom Logger class.\n  570   */\n  571: class CustomLogger extends \\RedBeanPHP\\Logger\\RDefault\n  572  {\n  573  \n  ...\n  580   * Test utility class.\n  581   * This class is meant for testing purposes only and should\n  582:  * never be used for anything else than RedBeanPHP Unit Testing.\n  583   * This is diagnostic class that allows access to otherwise\n  584   * protected methods.\n  585   * Class to test protected method hasCap in RPDO.\n  586   */\n  587: class TestRPO extends \\RedBeanPHP\\Driver\\RPDO {\n  588  \tpublic function testCap( $cap ) {\n  589  \t\treturn $this->hasCap( $cap );\n  ...\n  594   * Test utility class.\n  595   * This class is meant for testing purposes only and should\n  596:  * never be used for anything else than RedBeanPHP Unit Testing.\n  597   * Class to mock PDO behavior.\n  598   */\n  ...\n  613   * Test utility class.\n  614   * This class is meant for testing purposes only and should\n  615:  * never be used for anything else than RedBeanPHP Unit Testing.\n  616   * DiagnosticCUBRIDWriter\n  617   * Class for stub test for CUBRID database support.\n  618   */\n  619: class DiagnosticCUBRIDWriter extends \\RedBeanPHP\\QueryWriter\\CUBRID {\n  620  \tpublic function callMethod( $method, $arg1 = NULL, $arg2 = NULL, $arg3 = NULL, $arg4 = NULL, $arg5 = NULL ) {\n  621  \t\treturn $this->$method( $arg1, $arg2, $arg3, $arg4, $arg5 );\n  ...\n  626   * Test utility class.\n  627   * This class is meant for testing purposes only and should\n  628:  * never be used for anything else than RedBeanPHP Unit Testing.\n  629:  * This is an error class that allows RedBeanPHP Unit Tests to\n  630   * test error handling.\n  631   * Test Model that throws an exception upon update().\n  632   */\n  633: class Model_Brokentoy extends \\RedbeanPHP\\SimpleModel {\n  634  \tpublic function update(){\n  635  \t\tthrow new \\Exception('Totally on purpose.');\n  ...\n  641   * namespaces.\n  642   */\n  643: class Prefix1_Bean extends \\RedbeanPHP\\SimpleModel { }\n  644: class Prefix2_Bean extends \\RedbeanPHP\\SimpleModel { }\n  645  \n  646: define('REDBEAN_OODBBEAN_CLASS', '\\DiagnosticBean');\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\helpers\\functions.php:\n    4   * Convenience function for test hook.\n    5   * If you added the proper Writer class, the facade should be able\n    6:  * to automatically load it, i.e. \\RedBeanPHP\\QueryWriter\\MyWriter\n    7   *\n    8   * @global array $ini\n    .\n  126   * Emulates legacy function for use with older tests.\n  127   */\n  128: function set1toNAssoc( $a, \\RedBeanPHP\\OODBBean $bean1, \\RedBeanPHP\\OODBBean $bean2 )\n  129  {\n  130  \t$type = $bean1->getMeta( \"type\" );\n  ...\n  136  \t\t;\n  137  \t} else {\n  138: \t\tthrow new \\RedBeanPHP\\RedException\\SQL( \"Failed to enforce 1-N Relation for $type \" );\n  139  \t}\n  140  }\n  ...\n  328  \t);\n  329  \n  330: \t$can = new \\RedBeanPHP\\Plugin\\BeanCan;\n  331  \n  332  \t$request = json_encode( $j );\n  ...\n  376  \t$writer = R::getWriter();\n  377  \n  378: \tif ( ( $writer instanceof \\RedBeanPHP\\QueryWriter\\MySQL ) || ( $writer instanceof \\RedBeanPHP\\QueryWriter\\CUBRID ) ) {\n  379  \t\t$indexes = array();\n  380  \t\t$list = R::getAll( \"SHOW INDEX FROM `{$tableNoQ}`\" );\n  ...\n  385  \t}\n  386  \n  387: \tif ( ( $writer instanceof \\RedBeanPHP\\QueryWriter\\SQLiteT ) ) {\n  388  \t\t$indexes = array();\n  389  \t\t$list = R::getAll( \" pragma index_list(`{$tableNoQ}`) \" );\n  ...\n  394  \t}\n  395  \n  396: \tif ( ( $writer instanceof \\RedBeanPHP\\QueryWriter\\PostgreSQL ) ) {\n  397  \t\treturn R::getCol( \" SELECT indexname FROM pg_indexes WHERE tablename = '{$tableNoQ}' AND schemaname = 'public' \" );\n  398  \t}\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base.php:\n    8   * This is the base class for all multi-driver Unit Tests.\n    9   * By default base class derived tests will offer 'test rounds' for\n   10:  * all well known RedBeanPHP drivers: mysql (MySQL/MariaDB), pgsql (PostgreSQL),\n   11   * sqlite (SQLite3) and CUBRID (CUBRID).\n   12   *\n   13   * @file    RedUNIT/Base.php\n   14   * @desc    Base class for all drivers that support all database systems.\n   15:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   16   * @license New BSD/GPLv2\n   17   *\n   18:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   19   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   20   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole.php:\n   11   * @file    RedUNIT/Blackhole.php\n   12   * @desc    Tests that do not require a database or can just use the base SQLite driver.\n   13:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   14   * @license New BSD/GPLv2\n   15   *\n   16:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   17   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   18   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\CUBRID.php:\n   10   * @file    RedUNIT/CUBRID.php\n   11   * @desc    Base class for all test classes that aim to test the CUBRID database support.\n   12:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   13   * @license New BSD/GPLv2\n   14   *\n   15:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   16   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   17   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql.php:\n   11   * @file    RedUNIT/Mysql.php\n   12   * @desc    Base class for all tests that test support for MySQL/MariaDB database.\n   13:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   14   * @license New BSD/GPLv2\n   15   *\n   16:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   17   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   18   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres.php:\n   11   * @file    RedUNIT/Postgres.php\n   12   * @desc    Base class for all PostgreSQL specific tests.\n   13:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   14   * @license New BSD/GPLv2\n   15   *\n   16:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   17   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   18   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Pretest.php:\n    9   * @file    RedUNIT/Pretest.php\n   10   * @desc    Test scripts that run before configuration\n   11:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   12   * @license New BSD/GPLv2\n   13   *\n   14:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   15   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   16   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Sqlite.php:\n   11   * @file    RedUNIT/Sqlite.php\n   12   * @desc    Base class for all SQLite specific tests.\n   13:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   14   * @license New BSD/GPLv2\n   15   *\n   16:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   17   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   18   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Aliasing.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9  \n   10  /**\n   ..\n   16   * @file    RedUNIT/Base/Aliasing.php\n   17   * @desc    Tests for nested beans with aliases, i.e. teacher alias for person etc.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Arrays.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @file    RedUNIT/Base/Arrays.php\n   16   * @desc    Tests the array interface of beans\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n  254  \t\tasrt( count( $book['sharedTag'] ), 4 );\n  255  \t\t//does it also work with cross-shared\n  256: \t\t$book['sharedBookList'][] = R::dispense( 'book' );\n  257  \t\tR::store( $book );\n  258  \t\t$book = $book->fresh();\n  259: \t\tasrt( isset( $book['sharedBookList'] ), FALSE );\n  260: \t\tasrt( count( $book['sharedBookList'] ), 1 );\n  261: \t\t$first = reset( $book['sharedBookList'] );\n  262  \t\t$id = $first['id'];\n  263: \t\tasrt( count( $book['sharedBookList'][$id]['sharedBookList'] ), 1 );\n  264  \t\t$properties = array();\n  265  \t\tforeach($book as $key => $value) {\n  ...\n  269  \t\t$keys = array_keys( $properties );\n  270  \t\tsort( $keys );\n  271: \t\tasrt( implode( ',', $keys ), 'id,sharedBook' );\n  272  \t}\n  273  }\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Association.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\ToolBox as ToolBox;\n    8: use RedBeanPHP\\OODB as OODB;\n    9: use RedBeanPHP\\AssociationManager as AssociationManager;\n   10: use RedBeanPHP\\RedException\\SQL as SQL;\n   11  \n   12  /**\n   ..\n   19   * @file    RedUNIT/Base/Association.php\n   20   * @desc    Tests Association API (N:N associations)\n   21:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   22   * @license New BSD/GPLv2\n   23   *\n   24:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   25   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n   ..\n   44  \t\t$faultyWriter  = new \\FaultyWriter( R::getToolBox()->getDatabaseAdapter() );\n   45  \t\t$faultyOODB = new OODB( $faultyWriter );\n   46: \t\t$faultyOODB->setBeanHelper( R::getRedBean()->getBeanHelper() );\n   47  \t\t$faultyToolbox = new ToolBox( $faultyOODB, R::getToolBox()->getDatabaseAdapter(), $faultyWriter );\n   48  \t\t$faultyAssociationManager = new AssociationManager( $faultyToolbox );\n   ..\n   74  \t\tR::store($house);\n   75  \t\t\\Model_Ghost_House::$deleted = FALSE;\n   76: \t\tR::getRedBean()->getAssociationManager()->unassociate( $house, $ghost );\n   77  \t\t// No fast-track, assoc bean got trashed\n   78  \t\tasrt( \\Model_Ghost_House::$deleted, TRUE );\n   ..\n   80  \t\t$house->sharedGhost[] = $ghost;\n   81  \t\tR::store($house);\n   82: \t\tR::getRedBean()->getAssociationManager()->unassociate( $house, $ghost, TRUE );\n   83  \t\t// Fast-track, assoc bean got deleted right away\n   84  \t\tasrt( \\Model_Ghost_House::$deleted, FALSE );\n   ..\n   94  \t\t$ghost  = R::dispense( 'ghost' );\n   95  \t\t$ghost2 = R::dispense( 'ghost' );\n   96: \t\tR::getRedBean()->getAssociationManager()->associate( $ghost, $ghost2 );\n   97  \t\t\\Model_Ghost_Ghost::$deleted = FALSE;\n   98: \t\tR::getRedBean()->getAssociationManager()->unassociate( $ghost, $ghost2 );\n   99  \t\t// No fast-track, assoc bean got trashed\n  100  \t\tasrt( \\Model_Ghost_Ghost::$deleted, TRUE );\n  101  \t\t\\Model_Ghost_Ghost::$deleted = FALSE;\n  102: \t\tR::getRedBean()->getAssociationManager()->unassociate( $ghost, $ghost2, TRUE );\n  103  \t\t// Fast-track, assoc bean got deleted right away\n  104  \t\tasrt( \\Model_Ghost_Ghost::$deleted, FALSE );\n  ...\n  107  \t/**\n  108  \t * Test limited support for polymorph associations.\n  109: \t * RedBeanPHP does not really feature polymorph relations since\n  110  \t * they are not really compatible with traditional relational databases.\n  111  \t * However a light-weight, basic implementation has been added for\n  ...\n  134  \t * The rule is, one-to-ones are supposes to be in the same table,\n  135  \t * this is just for some legacy tables not designed to work\n  136: \t * with RedBeanPHP at all.\n  137  \t *\n  138  \t * @return void\n  ...\n  224  \t\t$cheese = R::dispense( 'cheese', 3 );\n  225  \t\t$olives = R::dispense( 'olive', 3 );\n  226: \t\tR::getRedBean()->getAssociationManager()->associate( $wines, array_merge( $cheese, $olives ) );\n  227  \t\tasrt( R::count( 'cheese' ), 3 );\n  228  \t\tasrt( R::count( 'olive' ), 3 );\n  ...\n  234  \t\tasrt( count( $wines[2]->sharedCheese ), 3 );\n  235  \t\tasrt( count( $wines[2]->sharedOlive ), 3 );\n  236: \t\tR::getRedBean()->getAssociationManager()->unassociate( $wines, $olives );\n  237  \t\tasrt( count( $wines[0]->sharedCheese ), 3 );\n  238  \t\tasrt( count( $wines[0]->sharedOlive ), 0 );\n  ...\n  241  \t\tasrt( count( $wines[2]->sharedCheese ), 3 );\n  242  \t\tasrt( count( $wines[2]->sharedOlive ), 0 );\n  243: \t\tR::getRedBean()->getAssociationManager()->unassociate( array( $wines[1] ), $cheese );\n  244  \t\tasrt( count( $wines[0]->sharedCheese ), 3 );\n  245  \t\tasrt( count( $wines[0]->sharedOlive ), 0 );\n  ...\n  248  \t\tasrt( count( $wines[2]->sharedCheese ), 3 );\n  249  \t\tasrt( count( $wines[2]->sharedOlive ), 0 );\n  250: \t\tR::getRedBean()->getAssociationManager()->unassociate( array( $wines[2] ), $cheese );\n  251  \t\tasrt( count( $wines[0]->sharedCheese ), 3 );\n  252  \t\tasrt( count( $wines[0]->sharedOlive ), 0 );\n  ...\n  260  \t * Tests error handling related to association.\n  261  \t * On database systems providing informative SQL STATE error codes\n  262: \t * RedBeanPHP should not mind non-existing tables or columns in\n  263  \t * fluid mode.\n  264  \t *\n  ...\n  271  \t\t$book->sharedPage[] = $page;\n  272  \t\tR::store( $page );\n  273: \t\t$redbean = R::getRedBean();\n  274: \t\t$am = $redbean->getAssociationManager();\n  275  \t\t//SQLite and CUBRID do not comply with ANSI SQLState codes.\n  276  \t\t$catchAll = ( $this->currentlyActiveDriverID == 'sqlite' || $this->currentlyActiveDriverID === 'CUBRID' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Batch.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\RedException\\SQL as SQL;\n    9  \n   10  /**\n   ..\n   12   *\n   13   * Test whether we can load a group of beans in one go, i.e.\n   14:  * the batch loading functionality of RedBeanPHP, also in combination\n   15   * with aliasing.\n   16   *\n   17   * @file    RedUNIT/Base/Batch.php\n   18   * @desc    Tests batch loading of beans, i.e. loading large collections of beans in optimized way.\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n   72  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   73  \t\t$writer  = $toolbox->getWriter();\n   74: \t\t$redbean = $toolbox->getRedBean();\n   75  \t\t$pdo     = $adapter->getDatabase();\n   76: \t\t$page = $redbean->dispense( \"page\" );\n   77  \t\t$page->name   = \"page no. 1\";\n   78  \t\t$page->rating = 1;\n   79: \t\t$id1 = $redbean->store( $page );\n   80: \t\t$page = $redbean->dispense( \"page\" );\n   81  \t\t$page->name = \"page no. 2\";\n   82: \t\t$id2 = $redbean->store( $page );\n   83: \t\t$batch = $redbean->batch( \"page\", array( $id1, $id2 ) );\n   84  \t\tasrt( count( $batch ), 2 );\n   85  \t\tasrt( $batch[$id1]->getMeta( \"type\" ), \"page\" );\n   ..\n   87  \t\tasrt( (int) $batch[$id1]->id, $id1 );\n   88  \t\tasrt( (int) $batch[$id2]->id, $id2 );\n   89: \t\t$book = $redbean->dispense( \"book\" );\n   90  \t\t$book->name = \"book 1\";\n   91: \t\t$redbean->store( $book );\n   92: \t\t$book = $redbean->dispense( \"book\" );\n   93  \t\t$book->name = \"book 2\";\n   94: \t\t$redbean->store( $book );\n   95: \t\t$book = $redbean->dispense( \"book\" );\n   96  \t\t$book->name = \"book 3\";\n   97: \t\t$redbean->store( $book );\n   98: \t\t$books = $redbean->batch( \"book\", $adapter->getCol( \"SELECT id FROM book\" ) );\n   99  \t\tasrt( count( $books ), 3 );\n  100: \t\t$a = $redbean->batch( 'book', 9919 );\n  101  \t\tasrt( is_array( $a ), TRUE );\n  102  \t\tasrt( count( $a ), 0 );\n  103: \t\t$a = $redbean->batch( 'triangle', 1 );\n  104  \t\tasrt( is_array( $a ), TRUE );\n  105  \t\tasrt( count( $a ), 0 );\n  106  \t\tR::freeze( TRUE );\n  107: \t\t$a = $redbean->batch( 'book', 9919 );\n  108  \t\tasrt( is_array( $a ), TRUE );\n  109  \t\tasrt( count( $a ), 0 );\n  110  \t\ttry {\n  111: \t\t\t$a = $redbean->batch( 'triangle', 1 );\n  112  \t\t\tfail();\n  113  \t\t} catch(SQL $e) {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Bean.php:\n    3  \n    4  use RedUNIT\\Base as Base;\n    5: use RedBeanPHP\\Facade as R;\n    6: use RedBeanPHP\\Adapter\\DBAdapter;\n    7: use RedBeanPHP\\QueryWriter\\PostgreSQL;\n    8: use RedBeanPHP\\QueryWriter\\SQLiteT;\n    9: use RedBeanPHP\\QueryWriter\\MySQL;\n   10: use RedBeanPHP\\QueryWriter\\CUBRID;\n   11: use RedBeanPHP\\OODB;\n   12: use RedBeanPHP\\BeanHelper;\n   13: use RedBeanPHP\\Driver\\RPDO;\n   14  \n   15  /**\n   16   * Bean\n   17   *\n   18:  * One of the core test suites of RedBeanPHP, tests the\n   19   * bean interface and all basic bean functions, including\n   20   * deletion, updating, inserting, importing and more...\n   ..\n   22   * @file    RedUNIT/Base/Bean.php\n   23   * @desc    Tests list manipulations of bean.\n   24:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   25   * @license New BSD/GPLv2\n   26   *\n   27:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   28   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   29   * with this source code in the file license.txt.\n   ..\n  110  \n  111  \t/**\n  112: \t * Tests whether we can use RedBeanPHP core objects without\n  113  \t * Facade related objects in a non-static style.\n  114  \t *\n  ...\n  274  \t\t$book->ownerId = 2;\n  275  \t\t$book->ownerCritic = 'a';\n  276: \t\t$book->sharedbyReader = 'b';\n  277  \t\t$id = R::store( $book );\n  278  \t\t$columns = R::inspect( 'book' );\n  279  \t\tasrt( isset( $columns['owner_id'] ), TRUE );\n  280  \t\tasrt( isset( $columns['owner_critic'] ), TRUE );\n  281: \t\tasrt( isset( $columns['sharedby_reader'] ), TRUE );\n  282  \t\tasrt( isset( $columns['ownerId'] ), FALSE );\n  283  \t\tasrt( isset( $columns['ownerCritic'] ), FALSE );\n  284: \t\tasrt( isset( $columns['sharedbyReader'] ), FALSE );\n  285  \t\tR::nuke();\n  286  \t\t$book = R::dispense( 'book' );\n  287  \t\t$book->xownerId = 2;\n  288  \t\t$book->xownerCritic = 'a';\n  289: \t\t$book->sharedbyReader = 'b';\n  290  \t\t$id = R::store( $book );\n  291  \t\t$columns = R::inspect( 'book' );\n  292  \t\tasrt( isset( $columns['xowner_id'] ), TRUE );\n  293  \t\tasrt( isset( $columns['xowner_critic'] ), TRUE );\n  294: \t\tasrt( isset( $columns['sharedby_reader'] ), TRUE );\n  295  \t\tasrt( isset( $columns['xownerId'] ), FALSE );\n  296  \t\tasrt( isset( $columns['xownerCritic'] ), FALSE );\n  297: \t\tasrt( isset( $columns['sharedbyReader'] ), FALSE );\n  298  \t}\n  299  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Boxing.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\SimpleModel as SimpleModel;\n    8  \n    9  /**\n   ..\n   14   * @file    RedUNIT/Base/Boxing.php\n   15   * @desc    Tests bean boxing and unboxing functionality.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n   ..\n   36  \t\tpass();\n   37  \t\t$bean = R::dispense( 'boxedbean' );\n   38: \t\t$bean->sharedBoxbean = R::dispense( 'boxedbean' )->box();\n   39  \t\tR::store( $bean );\n   40  \t\tpass();\n   ..\n   62  \tpublic function testToStringIssue512()\n   63  \t{\n   64: \t\tR::setErrorHandlingFUSE( \\RedBeanPHP\\OODBBean::C_ERR_FATAL );\n   65  \t\t$boxedBean = R::dispense( 'boxedbean' );\n   66  \t\t$str = (string) $boxedBean;\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Chill.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @file    RedUNIT/Base/Chill.php\n   16   * @desc    Tests chill list functionality, i.e. freezing a subset of all types.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n   75  \t\t$person->sharedRole[] = R::dispense( 'role' );\n   76  \t\tR::store( $person );\n   77: \t\t$bean = R::getRedBean()->dispense('person_role');\n   78  \t\t$bean->personId = $person->id;\n   79  \t\t$bean->roleId = $role->id;\n   ..\n   86  \t\tasrt(R::count('person_role'), 2);\n   87  \t\tR::nuke();\n   88: \t\t$link = R::getRedBean()->dispense('person_role');\n   89  \t\t$person = R::dispense( 'person' );\n   90  \t\t$role = R::dispense( 'role' );\n   ..\n   95  \t\t$person->sharedRole[] = R::dispense( 'role' );\n   96  \t\tR::store( $person );\n   97: \t\t$bean = R::getRedBean()->dispense('person_role');\n   98  \t\t$bean->personId = $person->id;\n   99  \t\t$bean->roleId = $role->id;\n  ...\n  117  \t{\n  118  \t\tR::freeze( array( 'beer' ) );\n  119: \t\t$oodb = R::getRedBean();\n  120  \t\tasrt( $oodb->isChilled( 'beer' ), TRUE );\n  121  \t\tasrt( $oodb->isChilled( 'wine' ), FALSE );\n  122  \t\tR::freeze( FALSE );\n  123: \t\t$oodb = R::getRedBean();\n  124  \t\tasrt( $oodb->isChilled( 'beer' ), TRUE );\n  125  \t\tasrt( $oodb->isChilled( 'wine' ), FALSE );\n  126  \t\tR::freeze( TRUE );\n  127: \t\t$oodb = R::getRedBean();\n  128  \t\tasrt( $oodb->isChilled( 'beer' ), TRUE );\n  129  \t\tasrt( $oodb->isChilled( 'wine' ), FALSE );\n  130  \t\tR::freeze( array() );\n  131: \t\t$oodb = R::getRedBean();\n  132  \t\tasrt( $oodb->isChilled( 'beer' ), FALSE );\n  133  \t\tasrt( $oodb->isChilled( 'wine' ), FALSE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Close.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\ToolBox as ToolBox;\n    8: use RedBeanPHP\\QueryWriter\\SQLiteT as SQLiteT;\n    9  \n   10  /**\n   ..\n   15   * @file    RedUNIT/Base/Close.php\n   16   * @desc    Tests database closing functionality.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Concurrency.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9: use RedBeanPHP\\QueryWriter\\AQueryWriter;\n   10  \n   11  /**\n   ..\n   16   * @file    RedUNIT/Base/Concurrency.php\n   17   * @desc    Tests concurrency scenarios\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Copy.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   17   * @file    RedUNIT/Base/Copy.php\n   18   * @desc    Tests whether we can make a deep copy of a bean.\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Count.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\RedException\\SQL as SQL;\n    9: use RedBeanPHP\\OODBBean;\n   10  \n   11  /**\n   ..\n   18   * @file    RedUNIT/Base/Count.php\n   19   * @desc    Tests for simple bean counting.\n   20:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   21   * @license New BSD/GPLv2\n   22   *\n   23:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   24   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   25   * with this source code in the file license.txt.\n   ..\n   29  \t/**\n   30  \t * Test counting invalid bean types.\n   31: \t * Invalid bean types, i.e. beans that do not adhere to the RedBeanPHP\n   32: \t * schema policy should not raise exceptions. Of course, RedBeanPHP\n   33  \t * expects 'valid' types but this is the responsibility of the author.\n   34  \t */\n   ..\n   37  \t\ttestpack( \"Test count with invalid types\" );\n   38  \t\tR::nuke();\n   39: \t\tR::store( $bean = R::getRedBean()->dispense( \"a_b_c\" ) );\n   40  \t\tasrt( R::count(\"a_b_c\"), 1 );\n   41  \t}\n   ..\n   60  \t\tR::wipe( \"page\" );\n   61  \t\tasrt( R::count( \"page\" ), 0 );\n   62: \t\tasrt( R::getRedBean()->count( \"page\" ), 0 );\n   63: \t\tasrt( R::getRedBean()->count( \"kazoo\" ), 0 ); // non existing table\n   64  \t\tR::freeze( TRUE );\n   65  \t\ttry {\n   66: \t\t\tasrt( R::getRedBean()->count( \"kazoo\" ), 0 ); // non existing table\n   67  \t\t\tfail();\n   68  \t\t} catch( \\Exception $e ) {\n   ..\n  106  \t\tasrt( $book->countShared('leaflet'), 0 );\n  107  \t\tasrt( R::dispense( 'book' )->countShared('page'), 0 );\n  108: \t\t$am = R::getRedBean()->getAssociationManager();\n  109  \t\tasrt( $am->relatedCount( R::dispense( 'book' ), 'page' ), 0);\n  110  \t\ttry {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Cross.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\AssociationManager as AssociationManager;\n    8: use RedBeanPHP\\RedException\\SQL as SQL;\n    9: use RedBeanPHP\\RedException as RedException;\n   10: use RedBeanPHP\\OODBBean as OODBBean;\n   11  \n   12  /**\n   ..\n   20   *  \t\tCross tables, self referential many-to-many relations\n   21   * \t\t\tand aggregation techniques\n   22:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   23   * @license New BSD/GPLv2\n   24   *\n   25:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   26   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   27   * with this source code in the file license.txt.\n   ..\n   88  \t\t$buddies[2]->name = 'C';\n   89  \t\t$buddies[3]->name = 'D';\n   90: \t\t$buddies[0]->sharedBuddyList = array( $buddies[1], $buddies[2] );\n   91: \t\t$buddies[3]->sharedBuddyList = array( $buddies[2] );\n   92  \t\tR::storeAll( $buddies );\n   93  \t\t$buddies[0] = $buddies[0]->fresh();\n   94: \t\tasrt( count( $buddies[0]->sharedBuddyList ), 2 );\n   95  \t\t//does this yield valid combinations - cross relations / self ref n-m\n   96  \t\t//need to symmetric....\n   97: \t\t$names = R::gatherLabels( $buddies[0]->sharedBuddyList );\n   98  \t\tsort( $names );\n   99  \t\t$names = implode( ',', $names );\n  100  \t\tasrt( $names, 'B,C' );\n  101: \t\tunset( $buddies[0]->sharedBuddy );\n  102  \t\tR::storeAll( $buddies );\n  103  \t\t$buddies[0] = $buddies[0]->fresh();\n  104: \t\tasrt( count( $buddies[0]->sharedBuddyList ), 2 );\n  105  \t\t$buddies[3] = $buddies[3]->fresh();\n  106: \t\tasrt( count( $buddies[3]->sharedBuddyList ), 1 );\n  107: \t\t$names = R::gatherLabels( $buddies[3]->sharedBuddyList );\n  108  \t\tsort( $names );\n  109  \t\t$names = implode( ',', $names );\n  110  \t\tasrt( $names, 'C' );\n  111  \t\t$buddies[2] = $buddies[2]->fresh();\n  112: \t\tasrt( count( $buddies[2]->sharedBuddyList ), 2 );\n  113: \t\t$names = R::gatherLabels( $buddies[2]->sharedBuddyList );\n  114  \t\tsort( $names );\n  115  \t\t$names = implode( ',', $names );\n  116  \t\tasrt( $names, 'A,D' );\n  117  \t\t$buddies[1] = $buddies[1]->fresh();\n  118: \t\tasrt( count( $buddies[1]->sharedBuddyList ), 1 );\n  119: \t\t$names = R::gatherLabels( $buddies[1]->sharedBuddyList );\n  120  \t\tsort( $names );\n  121  \t\t$names = implode( ',', $names );\n  122  \t\tasrt( $names, 'A' );\n  123  \t\t//Can we add one?\n  124: \t\t$buddies[1]->sharedBuddyList[] = R::dispense('buddy')->setAttr('name', 'E');\n  125  \t\tR::store( $buddies[1] );\n  126  \t\t$buddies[0] = $buddies[0]->fresh();\n  127: \t\tasrt( count( $buddies[0]->sharedBuddyList ), 2 );\n  128: \t\t$names = R::gatherLabels( $buddies[0]->sharedBuddyList );\n  129  \t\tsort( $names );\n  130  \t\t$names = implode( ',', $names );\n  131  \t\tasrt( $names, 'B,C' );\n  132  \t\t$buddies[1] = $buddies[1]->fresh();\n  133: \t\tasrt( count( $buddies[1]->sharedBuddyList ), 2 );\n  134: \t\t$names = R::gatherLabels( $buddies[1]->sharedBuddyList );\n  135  \t\tsort( $names );\n  136  \t\t$names = implode( ',', $names );\n  ...\n  138  \t\t$all = R::find( 'buddy' );\n  139  \t\tasrt( count( $all ), 5 );\n  140: \t\tforeach( $buddies[1]->sharedBuddy as $buddy ) {\n  141  \t\t\tif ( $buddy->name === 'E' ) {\n  142  \t\t\t\t$buddyE = $buddy;\n  ...\n  146  \t\tasrt( $buddyE->name, 'E' );\n  147  \t\t//can we update?\n  148: \t\tforeach( $buddies[0]->sharedBuddy as $buddy ) {\n  149  \t\t\tif ( $buddy->name === 'C' ) {\n  150  \t\t\t\t$buddy->name = 'C2';\n  ...\n  153  \t\tR::store( $buddies[0] );\n  154  \t\t$buddies[0] = $buddies[0]->fresh();\n  155: \t\tasrt( count( $buddies[0]->sharedBuddyList ), 2 );\n  156: \t\t$names = R::gatherLabels( $buddies[0]->sharedBuddyList );\n  157  \t\tsort( $names );\n  158  \t\t$names = implode( ',', $names );\n  159  \t\tasrt( $names, 'B,C2' );\n  160  \t\t$buddies[2] = $buddies[2]->fresh();\n  161: \t\tasrt( count( $buddies[2]->sharedBuddyList ), 2 );\n  162: \t\t$names = R::gatherLabels( $buddies[2]->sharedBuddyList );\n  163  \t\tsort( $names );\n  164  \t\t$names = implode( ',', $names );\n  165  \t\tasrt( $names, 'A,D' );\n  166  \t\t//can we delete?\n  167: \t\tforeach( $buddies[0]->sharedBuddyList as $id => $buddy ) {\n  168  \t\t\tif ( $buddy->name === 'B' ) {\n  169: \t\t\t\tunset( $buddies[0]->sharedBuddyList[$id] );\n  170  \t\t\t}\n  171  \t\t}\n  172  \t\tR::store( $buddies[0] );\n  173  \t\t$buddies[0] = $buddies[0]->fresh();\n  174: \t\tasrt( count( $buddies[0]->sharedBuddyList ), 1 );\n  175: \t\t$names = R::gatherLabels( $buddies[0]->sharedBuddyList );\n  176  \t\tsort( $names );\n  177  \t\t$names = implode( ',', $names );\n  178  \t\tasrt( $names, 'C2' );\n  179  \t\t$buddies[1] = $buddies[1]->fresh();\n  180: \t\tasrt( count( $buddies[1]->sharedBuddyList ), 1 );\n  181: \t\t$names = R::gatherLabels( $buddies[1]->sharedBuddyList );\n  182  \t\tsort( $names );\n  183  \t\t$names = implode( ',', $names );\n  ...\n  186  \t\tasrt( R::count( 'buddyBuddy' ), 3 );\n  187  \t\t$buddies[3] = $buddies[3]->fresh();\n  188: \t\tasrt( count( $buddies[3]->sharedBuddyList ), 1 );\n  189: \t\t$names = R::gatherLabels( $buddies[3]->sharedBuddyList );\n  190  \t\tsort( $names );\n  191  \t\t$names = implode( ',', $names );\n  192  \t\tasrt( $names, 'C2' );\n  193  \t\t$buddies[2] = $buddies[2]->fresh();\n  194: \t\tasrt( count( $buddies[2]->sharedBuddyList ), 2 );\n  195: \t\t$names = R::gatherLabels( $buddies[2]->sharedBuddyList );\n  196  \t\tsort( $names );\n  197  \t\t$names = implode( ',', $names );\n  198  \t\tasrt( $names, 'A,D' );\n  199  \t\t$buddyE = $buddyE->fresh();\n  200: \t\tasrt( count( $buddyE->sharedBuddyList ), 1 );\n  201: \t\t$names = R::gatherLabels( $buddyE->sharedBuddyList );\n  202  \t\tsort( $names );\n  203  \t\t$names = implode( ',', $names );\n  ...\n  205  \t\tif ( $this->currentlyActiveDriverID === 'mysql' ) {\n  206  \t\t\t$buddyE = $buddyE->fresh();\n  207: \t\t\tasrt( count( $buddyE->with(' HAVING linked_by > 0 ')->sharedBuddyList ), 1 );\n  208  \t\t\t$buddyE = $buddyE->fresh();\n  209: \t\t\tasrt( count( $buddyE->with(' HAVING linked_by < 0 ')->sharedBuddyList ), 0 );\n  210  \t\t}\n  211  \t\tif ( $this->currentlyActiveDriverID === 'sqlite' ) {\n  212  \t\t\t$buddyE = $buddyE->fresh();\n  213: \t\t\tasrt( count( $buddyE->withCondition(' linked_by > 0 ')->sharedBuddyList ), 1 );\n  214  \t\t\t$buddyE = $buddyE->fresh();\n  215: \t\t\tasrt( count( $buddyE->withCondition(' linked_by < 0 ')->sharedBuddyList ), 0 );\n  216  \t\t}\n  217  \t\t$buddyE = $buddyE->fresh();\n  218: \t\tasrt( count( $buddyE->withCondition(' buddy_buddy.buddy_id > 0 AND buddy_buddy.buddy2_id > 0 ')->sharedBuddyList ), 1 );\n  219  \t\t$buddyE = $buddyE->fresh();\n  220: \t\tasrt( count( $buddyE->withCondition(' buddy_buddy.buddy_id < 0 AND buddy_buddy.buddy2_id < 0 ')->sharedBuddyList ), 0 );\n  221  \t}\n  222  \n  ...\n  243  \t * Test the unique constraint.\n  244  \t * Just want to make sure it is not too limiting and functions\n  245: \t * properly for typical RedBeanPHP usage.\n  246  \t *\n  247  \t * @return void\n  ...\n  460  \t public function testErrorHandlingAggr()\n  461  \t {\n  462: \t\t$wrongLists = array( 'not-an-own-list', 'OWNlist', 'Ownpage', 'ownbook', 'own book', '!', 'sharedBook' );\n  463  \t\tforeach( $wrongLists as $wrongList ) {\n  464  \t\t\t$bean = R::dispense( 'bean' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Cursors.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\QueryWriter;\n    9: use RedBeanPHP\\QueryWriter\\AQueryWriter;\n   10  \n   11  /**\n   12   * Cursors\n   13   *\n   14:  * Tests whether RedBeanPHP can use cursors (using the\n   15   * findCollection method) to iterate over large data sets.\n   16   *\n   17   * @file    RedUNIT/Base/Cursors.php\n   18   * @desc    Tests whether we can use cursors\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n   42  \t\t}\n   43  \t\t$cursor = R::getCursor( 'SELECT * FROM page ORDER BY page.number ASC' );\n   44: \t\tasrt( get_class( $cursor ), 'RedBeanPHP\\Cursor\\PDOCursor');\n   45  \t\t$i = 0;\n   46  \t\t$list = array();\n   ..\n   69  \t\t}\n   70  \t\t$collection = R::findCollection( 'page', 'ORDER BY page.number ASC' );\n   71: \t\tasrt( get_class( $collection ), 'RedBeanPHP\\BeanCollection');\n   72  \t\t$i = 0;\n   73  \t\t$list = array();\n   ..\n  148  \t\tR::store( $page );\n  149  \t\t$collection = R::findCollection( 'page' );\n  150: \t\tasrt( get_class( $collection ), 'RedBeanPHP\\BeanCollection');\n  151  \t\t$collection = R::findCollection( 'page', ' content  =  ?', array( 'bbb' ) );\n  152: \t\tasrt( get_class( $collection ), 'RedBeanPHP\\BeanCollection');\n  153  \t\tasrt( is_null( $collection->next() ), TRUE );\n  154  \t\t$collection = R::findCollection( 'something' );\n  155: \t\tasrt( get_class( $collection ), 'RedBeanPHP\\BeanCollection');\n  156  \t\tasrt( is_null( $collection->next() ), TRUE );\n  157  \t\tasrt( is_null( $collection->reset() ), TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Database.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\QueryWriter\\SQLiteT as SQLiteT;\n    8: use RedBeanPHP\\OODB as OODB;\n    9: use RedBeanPHP\\OODBBean as OODBBean;\n   10: use RedBeanPHP\\ToolBox as ToolBox;\n   11: use RedBeanPHP\\AssociationManager as AssociationManager;\n   12: use RedBeanPHP\\RedException as RedException;\n   13: use RedBeanPHP\\RedException\\SQL as SQL;\n   14: use RedBeanPHP\\QueryWriter\\MySQL as MySQL;\n   15: use RedBeanPHP\\QueryWriter\\PostgreSQL as PostgreSQL;\n   16: use RedBeanPHP\\QueryWriter\\CUBRID as CUBRID;\n   17: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n   18  \n   19  /**\n   20   * Database\n   21   *\n   22:  * Tests basic RedBeanPHP database functionality.\n   23   *\n   24   * @file    RedUNIT/Base/Database.php\n   25   * @desc    Tests basic database behaviors\n   26:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   27   * @license New BSD/GPLv2\n   28   *\n   29:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   30   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   31   * with this source code in the file license.txt.\n   ..\n   83  \t\tR::bindFunc('read', 'xbean.lucky', NULL);\n   84  \t\tR::bindFunc('write', 'xbean.triple', NULL);\n   85: \t\tR::getRedBean()->clearAllFuncBindings();\n   86  \t}\n   87  \n   ..\n  130  \t/**\n  131  \t * Test the (protected) database capability checker method\n  132: \t * of the RedBeanPHP PDO driver (RPDO).\n  133  \t */\n  134  \tpublic function testDatabaseCapabilityChecker()\n  ...\n  336  \t\t$adapter->setSQLState( 'HY000' );\n  337  \t\t$writer  = new SQLiteT( $adapter );\n  338: \t\t$redbean = new OODB( $writer );\n  339: \t\t$toolbox = new ToolBox( $redbean, $adapter, $writer );\n  340  \t\t// We can only test this for a known driver...\n  341  \t\tif ( $currentDriver === 'sqlite' ) {\n  342  \t\t\ttry {\n  343: \t\t\t\t$redbean->find( 'bean' );\n  344  \t\t\t\tpass();\n  345  \t\t\t} catch (\\Exception $e ) {\n  ...\n  350  \t\t$adapter->setSQLState( -999 );\n  351  \t\ttry {\n  352: \t\t\t$redbean->find( 'bean' );\n  353  \t\t\tfail();\n  354  \t\t} catch (\\Exception $e ) {\n  ...\n  356  \t\t}\n  357  \t\ttry {\n  358: \t\t\t$redbean->wipe( 'justabean' );\n  359  \t\t\tfail();\n  360  \t\t} catch (\\Exception $e ) {\n  ...\n  364  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  365  \t\t$writer  = $toolbox->getWriter();\n  366: \t\t$redbean = $toolbox->getRedBean();\n  367  \t\t$pdo     = $adapter->getDatabase();\n  368: \t\t$page = $redbean->dispense( \"page\" );\n  369  \t\ttry {\n  370  \t\t\t$adapter->exec( \"an invalid query\" );\n  ...\n  385  \t\tasrt( (int) $adapter->getCell( \"SELECT 123\" ), 123 );\n  386  \t\t$page->aname = \"my page\";\n  387: \t\t$id = (int) $redbean->store( $page );\n  388  \t\tasrt( (int) $page->id, 1 );\n  389  \t\tasrt( (int) $pdo->GetCell( \"SELECT count(*) FROM page\" ), 1 );\n  390  \t\tasrt( $pdo->GetCell( \"SELECT aname FROM page LIMIT 1\" ), \"my page\" );\n  391  \t\tasrt( (int) $id, 1 );\n  392: \t\t$page = $redbean->load( \"page\", 1 );\n  393  \t\tasrt( $page->aname, \"my page\" );\n  394  \t\tasrt( ( (bool) $page->getMeta( \"type\" ) ), TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Dispense.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\Facade as Facade;\n    9: use RedBeanPHP\\OODBBean as OODBBean;\n   10: use RedBeanPHP\\Util\\DispenseHelper as DispenseHelper;\n   11  \n   12  /**\n   ..\n   18   * @file    RedUNIT/Base/Dispense.php\n   19   * @desc    Tests bean dispensing functionality.\n   20:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   21   * @license New BSD/GPLv2\n   22   *\n   23:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   24   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   25   * with this source code in the file license.txt.\n   ..\n   63  \tpublic function testBasicsDispense()\n   64  \t{\n   65: \t\t$redbean = R::getRedBean();\n   66  \t\t// Can we dispense a bean?\n   67: \t\t$page = $redbean->dispense( \"page\" );\n   68  \t\t// Does it have a meta type?\n   69  \t\tasrt( ( (bool) $page->getMeta( \"type\" ) ), TRUE );\n   ..\n   77  \t\tforeach ( array( \"\", \".\", \"-\") as $value ) {\n   78  \t\t\ttry {\n   79: \t\t\t\t$redbean->dispense( $value );\n   80  \t\t\t\tfail();\n   81  \t\t\t} catch (RedException $e ) {\n   ..\n   83  \t\t\t}\n   84  \t\t}\n   85: \t\t$bean = $redbean->dispense( \"testbean\" );\n   86  \t\t$bean[\"property\"] = 123;\n   87  \t\t$bean[\"abc\"]      = \"def\";\n   ..\n  138  \tpublic function testDispenseArray()\n  139  \t{\n  140: \t\t$oodb = R::getRedBean();\n  141  \t\t$array = $oodb->dispense( 'book', 0, TRUE );\n  142  \t\tasrt( is_array( $array ), TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Dup.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\DuplicationManager as DuplicationManager;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9: use RedBeanPHP\\RedException as RedException;\n   10  \n   11  /**\n   ..\n   17   * @file    RedUNIT/Base/Dup.php\n   18   * @desc    Intensive test for dup()\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n  451  \t\t$pages[1]->ownText  = array( $texts[1] );\n  452  \t\t$pages[1]->ownImage = array( $images[1] );\n  453: \t\t$pages[0]->sharedBookmark[] = $bookmarks[0];\n  454: \t\t$pages[1]->sharedBookmark[] = $bookmarks[1];\n  455  \t\t$bookmarks[0]->ownNote[] = R::dispense( 'note' )->setAttr( 'text', 'a note' );\n  456  \t\t$bookmarks[1]->ownNote[] = R::dispense( 'note' )->setAttr( 'text', 'a note' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Either.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   14   * @file    RedUNIT/Base/Either.php\n   15   * @desc    Test for Either-or\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Exceptions.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\RedException\\SQL as SQLException;\n    9: use RedBeanPHP\\OODBBean as OODBBean;\n   10: use RedBeanPHP\\Adapter\\DBAdapter;\n   11: use RedBeanPHP\\ToolBox;\n   12: use RedBeanPHP\\QueryWriter\\SQLiteT;\n   13: use RedBeanPHP\\QueryWriter\\AQueryWriter;\n   14: use RedBeanPHP\\QueryWriter;\n   15: use RedBeanPHP\\OODB;\n   16: use RedBeanPHP\\Driver\\RPDO;\n   17  \n   18  /**\n   ..\n   24   * @file    RedUNIT/Base/Exceptions.php\n   25   * @desc    Tests exception handling\n   26:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   27   * @license New BSD/GPLv2\n   28   *\n   29:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   30   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   31   * with this source code in the file license.txt.\n   ..\n  124  \t\tR::store( $book );\n  125  \t\t$broken = new BrokenWriter( $adapter );\n  126: \t\t$redbean = R::getRedBean();\n  127: \t\t$oodb = new OODB( $broken, $redbean->isFrozen() );\n  128: \t\tR::setRedBean( $oodb );\n  129  \t\t$exception = NULL;\n  130  \t\ttry {\n  ...\n  138  \t\t} catch( RedException $exception ) {}\n  139  \t\tasrt( ( $exception instanceof RedException ), TRUE );\n  140: \t\tR::setRedBean( $redbean );\n  141  \t}\n  142  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Facade.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\AssociationManager as AssociationManager;\n    8: use RedBeanPHP\\OODB as OODB;\n    9: use RedBeanPHP\\ToolBox as ToolBox;\n   10: use RedBeanPHP\\Adapter as Adapter;\n   11: use RedBeanPHP\\QueryWriter as QueryWriter;\n   12: use RedBeanPHP\\OODBBean as OODBBean;\n   13  \n   14  /**\n   ..\n   16   *\n   17   * Tests the facade. The facade is a single class (often aliased with R)\n   18:  * that provides access to all (or most) RedBeanPHP functionality without\n   19   * the need to interact with all the objects involved. The facade has\n   20   * been designed to be as 'straightfoward' as possible, many methods\n   ..\n   27   * @file    RedUNIT/Base/Facade.php\n   28   * @desc    Tests basic functions through facade.\n   29:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   30   * @license New BSD/GPLv2\n   31   *\n   32:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   33   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   34   * with this source code in the file license.txt.\n   ..\n   70  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   71  \t\t$writer  = $toolbox->getWriter();\n   72: \t\t$redbean = $toolbox->getRedBean();\n   73  \t\t$pdo     = $adapter->getDatabase();\n   74  \t\t$a       = new AssociationManager( $toolbox );\n   75: \t\tasrt( R::getRedBean() instanceof OODB, TRUE );\n   76  \t\tasrt( R::getToolBox() instanceof ToolBox, TRUE );\n   77  \t\tasrt( R::getDatabaseAdapter() instanceof Adapter, TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Finding.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\AssociationManager as AssociationManager;\n    8: use RedBeanPHP\\OODB as OODB;\n    9: use RedBeanPHP\\OODBBean as OODBBean;\n   10: use RedBeanPHP\\RedException as RedException;\n   11: use RedBeanPHP\\RedException\\SQL as SQL;\n   12: use RedBeanPHP\\Finder;\n   13  \n   14  /**\n   ..\n   20   * @file    RedUNIT/Base/Finding.php\n   21   * @desc    Tests finding beans.\n   22:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   23   * @license New BSD/GPLv2\n   24   *\n   25:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   26   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   27   * with this source code in the file license.txt.\n   ..\n 1131  \t\t$found = R::findOne( 'book' );\n 1132  \t\tasrt( count( $logger->grep('LIMIT 1') ), 1 );\n 1133: \t\tasrt( ( $found instanceof \\RedBeanPHP\\OODBBean ), TRUE );\n 1134  \t\t$logger->clear();\n 1135  \t\t$found = R::findOne( 'book', ' title = ? ', array( 'a' ) );\n 1136  \t\tasrt( count( $logger->grep('LIMIT 1') ), 1 );\n 1137: \t\tasrt( ( $found instanceof \\RedBeanPHP\\OODBBean ), TRUE );\n 1138  \t\t$logger->clear();\n 1139  \t\t$found = R::findOne( 'book', ' title = ? LIMIT 1', array( 'b' ) );\n ....\n 1143  \t\tasrt( count( $logger->grep('LIMIT 1') ), 0 );\n 1144  \t\tasrt( count( $logger->grep('limit 1') ), 1 );\n 1145: \t\tasrt( ( $found instanceof \\RedBeanPHP\\OODBBean ), TRUE );\n 1146  \t\t$found = R::findOne( 'book', ' title = ? LIMIT 2', array( 'b' ) );\n 1147  \t\tasrt( count( $logger->grep('LIMIT 2') ), 1 );\n 1148: \t\tasrt( ( $found instanceof \\RedBeanPHP\\OODBBean ), TRUE );\n 1149  \t}\n 1150  \n ....\n 1160  \t\t$adapter = $toolbox->getDatabaseAdapter();\n 1161  \t\t$writer  = $toolbox->getWriter();\n 1162: \t\t$redbean = $toolbox->getRedBean();\n 1163  \t\t$pdo     = $adapter->getDatabase();\n 1164  \t\t$a = new AssociationManager( $toolbox );\n 1165: \t\t$page = $redbean->dispense( \"page\" );\n 1166  \t\t$page->name = \"John's page\";\n 1167: \t\t$idpage = $redbean->store( $page );\n 1168: \t\t$page2 = $redbean->dispense( \"page\" );\n 1169  \t\t$page2->name = \"John's second page\";\n 1170: \t\t$idpage2 = $redbean->store( $page2 );\n 1171  \t\t$a->associate( $page, $page2 );\n 1172: \t\t$pageOne = $redbean->dispense( \"page\" );\n 1173  \t\t$pageOne->name = \"one\";\n 1174: \t\t$pageMore = $redbean->dispense( \"page\" );\n 1175  \t\t$pageMore->name = \"more\";\n 1176: \t\t$pageEvenMore = $redbean->dispense( \"page\" );\n 1177  \t\t$pageEvenMore->name = \"evenmore\";\n 1178: \t\t$pageOther = $redbean->dispense( \"page\" );\n 1179  \t\t$pageOther->name = \"othermore\";\n 1180  \t\tset1toNAssoc( $a, $pageOther, $pageMore );\n 1181  \t\tset1toNAssoc( $a, $pageOne, $pageMore );\n 1182  \t\tset1toNAssoc( $a, $pageOne, $pageEvenMore );\n 1183: \t\tasrt( count( $redbean->find( \"page\", array(), \" name LIKE '%more%' \", array() ) ), 3 );\n 1184: \t\tasrt( count( $redbean->find( \"page\", array(), \" name LIKE :str \", array( \":str\" => '%more%' ) ) ), 3 );\n 1185: \t\tasrt( count( $redbean->find( \"page\", array(), array( \" name LIKE :str \", array( \":str\" => '%more%' ) ) ) ), 3 );\n 1186: \t\tasrt( count( $redbean->find( \"page\", array(), \" name LIKE :str \", array( \":str\" => '%mxore%' ) ) ), 0 );\n 1187: \t\tasrt( count( $redbean->find( \"page\", array( \"id\" => array( 2, 3 ) ) ) ), 2 );\n 1188: \t\t$bean = $redbean->dispense( \"wine\" );\n 1189  \t\t$bean->name = \"bla\";\n 1190  \t\tfor ( $i = 0; $i < 10; $i++ ) {\n 1191: \t\t\t$redbean->store( $bean );\n 1192  \t\t}\n 1193: \t\t$redbean->find( \"wine\", array( \"id\" => 5 ) ); //  Finder:where call OODB::convertToBeans\n 1194: \t\t$bean2 = $redbean->load( \"anotherbean\", 5 );\n 1195  \t\tasrt( $bean2->id, 0 );\n 1196  \t\t$keys = $adapter->getCol( \"SELECT id FROM page WHERE \" . $writer->esc( 'name' ) . \" LIKE '%John%'\" );\n 1197  \t\tasrt( count( $keys ), 2 );\n 1198: \t\t$pages = $redbean->batch( \"page\", $keys );\n 1199  \t\tasrt( count( $pages ), 2 );\n 1200  \t\t$p = R::findLast( 'page' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Foreignkeys.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\Observer as Observer;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9: use RedBeanPHP\\Adapter as Adapter;\n   10: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   11  \n   12  /**\n   ..\n   19   * @file    RedUNIT/Base/Foreignkeys.php\n   20   * @desc    Tests foreign key handling and dynamic foreign keys with\n   21:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   22   * @license New BSD/GPLv2\n   23   *\n   24:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   25   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n   ..\n   73  \t\t$book = R::dispense( 'book' );\n   74  \t\t$book2 = R::dispense( 'book' );\n   75: \t\t$book->sharedBook[] = $book2;\n   76  \t\tR::store( $book );\n   77  \t\tasrt( count( get_uniques_for_type('book_book') ), 1 );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Frozen.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9  \n   10  /**\n   ..\n   19   * @file    RedUNIT/Base/Frozen.php\n   20   * @desc    Test some scenarios we haven't covered for frozen mode.\n   21:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   22   * @license New BSD/GPLv2\n   23   *\n   24:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   25   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Fuse.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\ModelHelper as ModelHelper;\n    8: use RedBeanPHP\\RedException as RedException;\n    9: use RedBeanPHP\\OODBBean as OODBBean;\n   10: use RedBeanPHP\\OODB as OODB;\n   11: use RedBeanPHP\\ToolBox as ToolBox;\n   12: use RedBeanPHP\\QueryWriter as QueryWriter;\n   13: use RedBeanPHP\\Adapter as Adapter;\n   14: use RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper as SimpleFacadeBeanHelper;\n   15  \n   16  /**\n   ..\n   24   * @file    RedUNIT/Base/Fuse.php\n   25   * @desc    Tests Fuse feature; coupling beans to models.\n   26:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   27   * @license New BSD/GPLv2\n   28   *\n   29:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   30   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   31   * with this source code in the file license.txt.\n   ..\n   63  \t{\n   64  \t\t$customBeanHelper = new \\SoupBeanHelper( R::getToolbox() );\n   65: \t\t$oldBeanHelper = R::getRedBean()->getBeanHelper();\n   66  \t\tasrt( ( $oldBeanHelper instanceof SimpleFacadeBeanHelper ), TRUE );\n   67: \t\tR::getRedBean()->setBeanHelper( $customBeanHelper );\n   68  \t\t$meal = R::dispense( 'meal' );\n   69  \t\tasrt( ( $meal->box() instanceof \\Model_Soup ), TRUE );\n   ..\n   86  \t\t$meal = $meal->unbox();\n   87  \t\tasrt( $meal->getFlavour(), 'tomato' );\n   88: \t\tR::getRedBean()->setBeanHelper( $oldBeanHelper );\n   89  \t}\n   90  \n   ..\n  247  \t{\n  248  \t\t$helper = new SimpleFacadeBeanHelper;\n  249: \t\tlist( $redbean, $database, $writer, $toolbox ) = $helper->getExtractedToolbox();\n  250: \t\tasrt( ( $redbean  instanceof OODB        ), TRUE );\n  251  \t\tasrt( ( $database instanceof Adapter     ), TRUE );\n  252  \t\tasrt( ( $writer   instanceof QueryWriter ), TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Hybrid.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   14   * @file    RedUNIT/Base/Hybrid.php\n   15   * @desc    Tests hybrid mode\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n   ..\n   92  \t\t$id = R::store( $book, TRUE );\n   93  \t\tR::freeze( TRUE );\n   94: \t\tasrt( R::getRedBean()->isFrozen(), TRUE );\n   95  \t\tR::setAllowHybridMode( FALSE );\n   96  \t\t$book->pages = 'too many';\n   ..\n  101  \t\t\tpass();\n  102  \t\t}\n  103: \t\tasrt( R::getRedBean()->isFrozen(), TRUE );\n  104  \t\tR::setAllowHybridMode( TRUE );\n  105: \t\tasrt( R::getRedBean()->isFrozen(), TRUE );\n  106  \t\tR::debug(1);\n  107  \t\ttry {\n  ...\n  111  \t\t\tfail();\n  112  \t\t}\n  113: \t\tasrt( R::getRedBean()->isFrozen(), TRUE );\n  114  \t\t$book = $book->fresh();\n  115  \t\techo $book;\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Indexes.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @file    RedUNIT/Base/Indexes.php\n   16   * @desc    Tests whether indexes are applied properly.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n   75  \t\t$book = R::dispense( 'book' );\n   76  \t\t$category = R::dispense( 'category' );\n   77: \t\t$category->sharedBookList[] = $book;\n   78  \t\tR::store( $category );\n   79  \t\t$indexes = getIndexes( 'book_category' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Issue259.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\SimpleModel as SimpleModel;\n    8  \n    9  /**\n   ..\n   15   * @file    RedUNIT/Base/Issue259.php\n   16   * @desc    Issue #259 - Stash cache breaks model delegation in open().\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Issue303.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8  \n    9  /**\n   ..\n   16   * @file    RedUNIT/Base/Issue303.php\n   17   * @desc    Issue #303 - Split bean property exception.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Issue408.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @desc    Test whether we can export beans with arrays in properties\n   16   *          (deserialized/serialized on open/update).\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Issue841.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   12   *\n   13   * @file    RedUNIT/Base/Issue841.php\n   14:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   15   * @license New BSD/GPLv2\n   16   *\n   17:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   18   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   19   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Issue90.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   14   * @file    RedUNIT/Base/Issue90.php\n   15   * @desc    Issue #90 - cannot trash bean with ownproperty if checked in model.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Joins.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   16   * @file    RedUNIT/Base/Joins.php\n   17   * @desc    Tests joins in ownLists and trees.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n  522  \t\t$book->ownDetailList[] = $detail;\n  523  \t\t$book->author = $author;\n  524: \t\t$shop->sharedBookList[] = $book;\n  525  \t\t$book2   = R::dispense('book');\n  526  \t\t$author2 = R::dispense('person');\n  ...\n  530  \t\t$book2->ownDetailList[] = $detail2;\n  531  \t\t$book2->author = $author2;\n  532: \t\t$shop->sharedBookList[] = $book2;\n  533: \t\t$shop2->sharedBookList[] = $book2;\n  534  \t\tR::store($shop);\n  535  \t\tR::store($shop2);\n  ...\n  579  \t\t$book->publisher = $publisher;\n  580  \t\t$book->ownPageList[] = $page;\n  581: \t\t$category->sharedBookList[] = $book;\n  582  \t\t$page2 = R::dispense('page');\n  583  \t\t$page2->text = 'Blah Blah';\n  ...\n  588  \t\t$book2->publisher = $publisher2;\n  589  \t\t$book2->ownPageList = array($page2);\n  590: \t\t$category2->sharedBookList[] = $book2;\n  591  \t\tR::store($category);\n  592  \t\tR::store($category2);\n  ...\n  728  \t\tR::freeze(TRUE);\n  729  \t\ttry{\n  730: \t\t\tR::find( 'person', ' @own.book.title LIKE ? ', array( 'A%' )); // This doesn't work as RedBean cannot guess which column it should bind the person to in the book table.\n  731  \t\t\tfail();\n  732  \t\t} catch(\\Exception $e) {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Keywords.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   12   * Tests whether we can use keywords as bean types and\n   13   * property names without running into security or stablity issues.\n   14:  * RedBeanPHP should properly escape all bean types and properties\n   15   * so we may use whatever string we want.\n   16   *\n   17   * @file    RedUNIT/Base/Keywords.php\n   18   * @desc    Tests for possible keyword clashes.\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n   39  \n   40  \t/**\n   41: \t * Test if RedBeanPHP can properly handle keywords.\n   42  \t *\n   43  \t * @return void\n   ..\n   63  \t\t\t$bean->bean = $bean2;\n   64  \t\t\t$bean->ownBean[]    = $bean2;\n   65: \t\t\t$bean->sharedBean[] = $bean2;\n   66  \t\t\t$id = R::store( $bean );\n   67  \t\t\tR::trash( $bean );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Largenum.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   13   * @file    RedUNIT/Base/Largenum.php\n   14   * @desc    Test whether we can use large numbers in LIMIT clause (PDO bindings).\n   15:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   16   * @license New BSD/GPLv2\n   17   *\n   18:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   19   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   20   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Logging.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\Logger as Logger;\n    8: use RedBeanPHP\\Logger\\RDefault as RDefault;\n    9: use RedBeanPHP\\Logger\\RDefault\\Debug as Debug;\n   10  \n   11  /**\n   12   * Logging\n   13   *\n   14:  * Tests the Query Logging tools that are part of RedBeanPHP.\n   15   *\n   16   * @file    RedUNIT/Base/Logging.php\n   17   * @desc    Tests Logging facilities.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Misc.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\Logger\\RDefault as RDefault;\n    8: use RedBeanPHP\\Logger as Logger;\n    9: use RedBeanPHP\\OODBBean as OODBBean;\n   10: use RedBeanPHP\\OODB as OODB;\n   11: use RedBeanPHP\\Adapter as Adapter;\n   12: use RedBeanPHP\\QueryWriter as QueryWriter;\n   13: use RedBeanPHP\\RedException as RedException;\n   14: use RedBeanPHP\\RedException\\SQL as SQL;\n   15: use RedBeanPHP\\Driver\\RPDO as RPDO;\n   16: use RedBeanPHP\\SimpleModel as SimpleModel;\n   17  \n   18  /**\n   ..\n   21   * @file    RedUNIT/Base/Misc.php\n   22   * @desc    Various tests.\n   23:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   24   * @license New BSD/GPLv2\n   25   *\n   26:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   27   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n   ..\n   72  \t * PHP Stack trace:\n   73  \t * PHP 1. {main}() testje.php:0\n   74: \t * PHP 2. RedBeanPHP\\OODBBean->__get() testje.php:22\n   75  \t * Notice: Only variable references should be returned by reference in rb.php on line 2529\n   76  \t */\n   ..\n  103  \t\t $partialBeans = TRUE;\n  104  \t\t R::addDatabase( $key, $dsn, $user, $pass, $frozen, $partialBeans);\n  105: \t\t $redbean = R::getRedBean();\n  106: \t\t $wasItSet = $redbean->getCurrentRepository()->usePartialBeans( FALSE );\n  107  \t\t R::selectDatabase( $key );\n  108: \t\t $redbean = R::getRedBean();\n  109: \t\t $wasItSet = $redbean->getCurrentRepository()->usePartialBeans( FALSE );\n  110  \t\t asrt( $wasItSet, TRUE );\n  111  \t\t self::$setupPartialBeansTestDone = 1;\n  ...\n  178  \t\tR::store( R::dispense( 'book' ) );\n  179  \t\tR::freeze( FALSE );\n  180: \t\tasrt( R::getRedBean()->tableExists( 'book' ), TRUE );\n  181: \t\tasrt( R::getRedBean()->tableExists( 'book2' ), FALSE );\n  182  \t\tR::freeze( TRUE );\n  183: \t\tasrt( R::getRedBean()->tableExists( 'book' ), TRUE );\n  184: \t\tasrt( R::getRedBean()->tableExists( 'book2' ), FALSE );\n  185  \t\tR::freeze( FALSE );\n  186  \t}\n  ...\n  200  \t\t$bean->setProperty('id', 0);\n  201  \t\t$bean->setMeta( 'type', 'book' );\n  202: \t\tR::getRedBean()->check( $bean );\n  203  \t\t$bean->setMeta( 'type', '.' );\n  204  \t\ttry {\n  205: \t\t\tR::getRedBean()->check( $bean );\n  206  \t\t\tfail();\n  207  \t\t} catch ( \\Exception $e ) {\n  ...\n  212  \t\tR::freeze( TRUE );\n  213  \t\ttry {\n  214: \t\t\tR::getRedBean()->check( $bean );\n  215  \t\t\tfail();\n  216  \t\t} catch ( \\Exception $e ) {\n  ...\n  279  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  280  \t\t$writer  = $toolbox->getWriter();\n  281: \t\t$redbean = $toolbox->getRedBean();\n  282  \t\t$pdo     = $adapter->getDatabase();\n  283: \t\t$bean = $redbean->dispense( 'bean' );\n  284  \t\t$bean->prop = 3; //make test run with strict mode as well\n  285: \t\t$redbean->store( $bean );\n  286  \t\t$adapter->exec( 'UPDATE bean SET prop = 2' );\n  287  \t\tasrt( $adapter->getAffectedRows(), 1 );\n  ...\n  298  \t\tasrt( preg_match( '/\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d/', R::isoDate() ), 1 );\n  299  \t\tasrt( preg_match( '/\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d\\s\\d\\d:\\d\\d:\\d\\d/', R::isoDateTime() ), 1 );\n  300: \t\t$redbean = R::getRedBean();\n  301  \t\t$adapter = R::getDatabaseAdapter();\n  302  \t\t$writer  = R::getWriter();\n  303: \t\tasrt( ( $redbean instanceof OODB ), TRUE );\n  304  \t\tasrt( ( $adapter instanceof Adapter ), TRUE );\n  305  \t\tasrt( ( $writer instanceof QueryWriter ), TRUE );\n  306: \t\tR::setRedBean( $redbean );\n  307  \t\tpass(); //cant really test this\n  308  \t\tR::setDatabaseAdapter( $adapter );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Namedparams.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   14   * @file    RedUNIT/Base/Namedparams.php\n   15   * @desc    Test whether you can use named parameters in SQL snippets.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n   ..\n   39  \t\tR::store($book);\n   40  \t\t//should not give error like: Uncaught [HY093] - SQLSTATE[HY093]: Invalid parameter number: mixed named and positional parameters\n   41: \t\t$books = $page->withCondition(' title = :title ', array( ':title' => 'book' ) )->sharedBook;\n   42  \t\tasrt( count( $books ), 1 );\n   43  \t\t//should not give error...\n   44: \t\t$books = $page->withCondition( ' title = :title ', array( ':title' => 'book' ) )->sharedBook;\n   45  \t\tasrt( count( $books ), 1 );\n   46  \t\tR::nuke();\n   ..\n   75  \t\tasrt( count( $pages ), 1 );\n   76  \t\t//test with find()\n   77: \t\t$books = R::getRedBean()->find( 'book',\n   78  \t\t\t\t  array(\n   79  \t\t\t\t\t\t'title' => array('book')),\n   80  \t\t\t\t  ' AND title = :title ', array(':title'=>'book'));\n   81  \t\tasrt( count( $books ), 1 );\n   82: \t\t$books = R::getRedBean()->find( 'book',\n   83  \t\t\t\t  array(\n   84  \t\t\t\t\t\t'title'   => array('book', 'book2'),\n   ..\n   87  \t\tasrt( count( $books ), 1 );\n   88  \t\t//just check numeric works as well...\n   89: \t\t$books = R::getRedBean()->find( 'book',\n   90  \t\t\t\t  array(\n   91  \t\t\t\t\t\t'title'   => array('book', 'book2'),\n   ..\n   94  \t\tasrt( count( $books ), 1 );\n   95  \t\t//just extra check to verify glue works\n   96: \t\t$books = R::getRedBean()->find( 'book',\n   97  \t\t\t\t  array(\n   98  \t\t\t\t\t\t'title'   => array('book', 'book2'),\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Nuke.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @file    RedUNIT/Base/Nuke.php\n   16   * @desc    Test the nuke() function.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Observers.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\Adapter\\DBAdapter as DBAdapter;\n    8: use RedBeanPHP\\QueryWriter as QueryWriter;\n    9: use RedBeanPHP\\OODB as OODB;\n   10  \n   11  /**\n   12   * Observers\n   13   *\n   14:  * Tests the basic observer pattern used in RedBeanPHP.\n   15   *\n   16   * @file    RedUNIT/Base/Observers.php\n   17:  * @desc    Tests the observer pattern in RedBeanPHP.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n   26  {\n   27  \t/**\n   28: \t * Test RedBeanPHP observers.\n   29  \t *\n   30  \t * @return void\n   ..\n   35  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   36  \t\t$writer  = $toolbox->getWriter();\n   37: \t\t$redbean = $toolbox->getRedBean();\n   38  \t\tasrt( ( $adapter instanceof DBAdapter ), TRUE );\n   39  \t\tasrt( ( $writer instanceof QueryWriter ), TRUE );\n   40: \t\tasrt( ( $redbean instanceof OODB ), TRUE );\n   41  \t\t$observable = new \\ObservableMock();\n   42  \t\t$observer   = new \\ObserverMock();\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Partial.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   18   * @file    RedUNIT/Base/Partial.php\n   19   * @desc    Tests Partial Beans Mode\n   20:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   21   * @license New BSD/GPLv2\n   22   *\n   23:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   24   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   25   * with this source code in the file license.txt.\n   ..\n   31  \t * If I set up the default values to some specific columns,\n   32  \t * these columns can not act the same expectation in partial bean mode. #754.\n   33: \t * \"When I upgrade my code to Redbean 5.4 and turn on the partial bean mode,\n   34  \t * I found this issue I mentioned.\n   35: \t * As Redbean recommends, I set up the default values\n   36  \t * to some specific columns before I use them.\n   37  \t * And then I use the partial bean mode to store\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Performance.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8  \n    9  /**\n   ..\n   14   * @file    RedUNIT/Base/Performance.php\n   15   * @desc    Performance testing.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Prefixes.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    9  \n   10  R::ext('xdispense', function($type){\n   11: \treturn R::getRedBean()->dispense($type);\n   12  });\n   13  \n   ..\n   27   *\n   28   * @file    RedUNIT/Base/Prefixes.php\n   29:  * @desc    Tests whether you can use RedBeanPHP with table prefixes.\n   30:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   31   * @license New BSD/GPLv2\n   32   *\n   33:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   34   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   35   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Productivity.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9: use RedBeanPHP\\Util\\MatchUp;\n   10: use RedBeanPHP\\Util\\Look;\n   11  \n   12  /**\n   ..\n   22   * @file    RedUNIT/Base/Matchup.php\n   23   * @desc    Tests MatchUp\n   24:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   25   * @license New BSD/GPLv2\n   26   *\n   27:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   28   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   29   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\PullRequest530.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   14   * @file    RedUNIT/Base/PullRequest530.php\n   15   * @desc    Pull Request #530 - OODBBean __set() checks if $property is a field link\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Quickexport.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9  \n   10  /**\n   ..\n   17   * @file    RedUNIT/Base/Quickexport.php\n   18   * @desc    Tests Quick Export\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n   35  \t\tif ( phpversion() < 5.5 || strpos( strtolower( phpversion() ), 'hhvm' ) !== FALSE ) return;\n   36  \t\tR::store( R::dispense( array( '_type'=>'bean', 'a' => 1, 'b' => 2, 'c' => 3 ) ) );\n   37: \t\t$path = '/tmp/redbeantest.txt';\n   38  \t\tR::csv( 'SELECT a,b,c FROM bean', array(), array( 'A', 'B', 'C' ), $path, FALSE );\n   39  \t\t$csv = file_get_contents( $path );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Relations.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9  \n   10  /**\n   11   * Relations\n   12   *\n   13:  * Tests whether RedBeanPHP handles relational data properly.\n   14   * This test suite is quite large because it tests various types\n   15   * of relations as well as simple and complex usage scenarios.\n   ..\n   17   * @file    RedUNIT/Base/Relations.php\n   18   * @desc    Tests N:1 relations, nested beans.\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n  131  \t\t$book1->ownPage = array( $page1, $page2 );\n  132  \t\t$book2->ownPage = array( $page3, $page4 );\n  133: \t\t$author1->sharedBook = array( $book1, $book2 );\n  134: \t\t$author2->sharedBook = array( $book2 );\n  135  \t\tR::storeAll( array( $author1, $author2 ) );\n  136: \t\tasrt( count( $author1->sharedBook ), 2 );\n  137: \t\tasrt( count( $author1->withCondition( ' title = ? ', array( 'a' ) )->sharedBook ), 1 );\n  138  \t\tR::store( $author1 );\n  139: \t\tasrt( count( $author1->sharedBook ), 2 );\n  140: \t\tasrt( count( $author1->withCondition( ' xtitle = ? ', array( 'a' ) )->sharedBook ), 0 );\n  141  \t\tR::store( $author1 );\n  142: \t\tasrt( count( $author1->sharedBook ), 2 );\n  143  \t\t$book1 = R::load( 'book', $book1->id );\n  144  \t\t$book2 = $book2->fresh();\n  ...\n  285  \t\t$books = R::dispense( 'book', 5 );\n  286  \t\t$books[2]->title = 'boe';\n  287: \t\t$book->sharedBook = array( $books[0], $books[1] );\n  288: \t\t$book2->sharedBook = array( $books[0], $books[2], $books[4] );\n  289  \t\tR::storeAll( array( $book, $book2 ) );\n  290  \t\tasrt( $book->countOwn( 'page' ), 10 );\n  ...\n  373  \t\t$donald->sharedFriend = array( $mickey, $goofy );\n  374  \t\t$mickey->sharedFriend = array( $pluto, $goofy );\n  375: \t\t$mickey->sharedBook   = array( R::dispense( 'book' ) );\n  376  \t\tR::storeAll( array( $mickey, $donald, $goofy, $pluto ) );\n  377  \t\t$donald = R::load( 'friend', $donald->id );\n  ...\n  422  \t\tR::store( $bean );\n  423  \t\tasrt( R::count( 'role' ), 1 );\n  424: \t\t$aclrole = R::getRedBean()->dispense( 'acl_role' );\n  425  \t\t$aclrole->name = 'role';\n  426  \t\t$bean = R::dispense( 'bean' );\n  ...\n  695  \t\tasrt( $topic3->countShared('book'), 2 );\n  696  \t\t$t3 = R::load( 'topic', $topic3->id );\n  697: \t\tasrt( count( $t3->sharedBook ), 2 );\n  698  \t\t// Nuke an own-array, replace entire array at once without getting first\n  699  \t\t$page2->id    = 0;\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Tags.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8  \n    9  /**\n   10   * Tags\n   11   *\n   12:  * Tests RedBeanPHP tagging functionality, should be easy\n   13   * to tag beans, collect tags and integrate tags in SQL\n   14   * snippets. Tags automatically result in N-M relations, i.e.\n   ..\n   17   * @file    RedUNIT/Base/Tags.php\n   18   * @desc    Tests the tagging of beans.\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Threeway.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n    9  \n   10  /**\n   ..\n   16   * @file    RedUNIT/Base/Threeway.php\n   17   * @desc    Various tests for 3-way tables or X-way tables.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Trash.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   14   * @file    RedUNIT/Base/Trash.php\n   15   * @desc    Tests R::trash()\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Traverse.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9  \n   10  /**\n   11   * Traverse\n   12   *\n   13:  * Tests whether RedBeanPHP can easily deal with hierarchies\n   14   * of beans.\n   15   *\n   16   * @file    RedUNIT/Base/Traverse.php\n   17   * @desc    Tests traversal functionality\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Typechecking.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\OODBBean as OODBBean;\n    9  \n   10  /**\n   11   * Typechecking\n   12   *\n   13:  * Tests whether RedBeanPHP handles type casting correctly.\n   14   *\n   15   * @file    RedUNIT/Base/Typechecking.php\n   16   * @desc    Tests basic bean validation rules; invalid bean handling.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n   26  \t/**\n   27  \t * Test types.\n   28: \t * Test how RedBeanPHP OODB and OODBBean handle type and type casts.\n   29  \t *\n   30  \t * Rules:\n   ..\n   94  \tpublic function testBeanTypeChecking()\n   95  \t{\n   96: \t\t$redbean = R::getRedBean();\n   97: \t\t$bean    = $redbean->dispense( \"page\" );\n   98  \t\t// Set some illegal values in the bean; this should trigger Security exceptions.\n   99  \t\t// Arrays are not allowed.\n  100  \t\t$bean->name = array( \"1\" );\n  101  \t\ttry {\n  102: \t\t\t$redbean->store( $bean );\n  103  \t\t\tfail();\n  104  \t\t} catch ( RedException $e ) {\n  ...\n  106  \t\t}\n  107  \t\ttry {\n  108: \t\t\t$redbean->check( $bean );\n  109  \t\t\tfail();\n  110  \t\t} catch ( RedException $e ) {\n  ...\n  113  \t\t$bean->name = new OODBBean;\n  114  \t\ttry {\n  115: \t\t\t$redbean->check( $bean );\n  116  \t\t\tfail();\n  117  \t\t} catch ( RedException $e ) {\n  ...\n  122  \t\t$bean->$prop = 1;\n  123  \t\ttry {\n  124: \t\t\t$redbean->store( $bean );\n  125  \t\t\tfail();\n  126  \t\t} catch ( RedException $e ) {\n  ...\n  128  \t\t}\n  129  \t\ttry {\n  130: \t\t\t$redbean->check( $bean );\n  131  \t\t\tfail();\n  132  \t\t} catch ( RedException $e ) {\n  ...\n  137  \t\t$bean->$prop = 1;\n  138  \t\ttry {\n  139: \t\t\t$redbean->store( $bean );\n  140  \t\t\tfail();\n  141  \t\t} catch ( RedException $e ) {\n  ...\n  143  \t\t}\n  144  \t\ttry {\n  145: \t\t\t$redbean->check( $bean );\n  146  \t\t\tfail();\n  147  \t\t} catch ( RedException $e ) {\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Update.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException as RedException;\n    8: use RedBeanPHP\\QueryWriter as QueryWriter;\n    9: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   10: use RedBeanPHP\\Logger\\RDefault as Logger;\n   11  \n   12  /**\n   ..\n   20   * @file    RedUNIT/Base/Update.php\n   21   * @desc    Tests basic storage features through OODB class.\n   22:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   23   * @license New BSD/GPLv2\n   24   *\n   25:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   26   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   27   * with this source code in the file license.txt.\n   ..\n   39  \t\tR::nuke();\n   40  \t\t$toolbox = R::getToolbox();\n   41: \t\t$repository = $toolbox->getRedBean()->getCurrentRepository();\n   42  \t\t$database = $toolbox->getDatabaseAdapter()->getDatabase();\n   43  \t\t$logger = new Logger;\n   ..\n   97  \t\tasrt( $book->title, 'story' );\n   98  \t\t$library = R::dispense( 'library' );\n   99: \t\t$library->sharedBookList[] = $book;\n  100  \t\tR::store( $library );\n  101  \t\t$library = $library->fresh();\n  102: \t\t$books = $library->sharedBookList;\n  103  \t\t$book = reset( $books );\n  104  \t\tasrt( $book->title, 'story' );\n  105  \t\t$otherBook = R::dispense('book');\n  106: \t\t$otherBook->sharedBook[] = $book;\n  107  \t\tR::store( $otherBook );\n  108  \t\t$otherBook = $otherBook->fresh();\n  109: \t\t$books = $otherBook->sharedBookList;\n  110  \t\t$book = reset( $books );\n  111  \t\tasrt( $book->title, 'story' );\n  ...\n  126  \t\tasrt( R::getCell( 'SELECT shelf FROM book_book WHERE id = ?', array( $link->id ) ), 'X13' );\n  127  \t\t$otherBook = $otherBook->fresh();\n  128: \t\tunset($book->sharedBookList[$otherBook->id]);\n  129  \t\tR::store( $book );\n  130  \t\tAQueryWriter::setSQLFilters(array());\n  ...\n  284  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  285  \t\t$writer  = $toolbox->getWriter();\n  286: \t\t$redbean = $toolbox->getRedBean();\n  287  \t\t$pdo     = $adapter->getDatabase();\n  288: \t\t$page    = $redbean->dispense( \"page\" );\n  289  \t\t$page->name = \"old name\";\n  290: \t\t$id = $redbean->store( $page );\n  291  \t\tasrt( $page->getMeta( 'tainted' ), FALSE );\n  292  \t\t$page->setAttr( 'name', \"new name\" );\n  293  \t\tasrt( $page->getMeta( 'tainted' ), TRUE );\n  294: \t\t$id = $redbean->store( $page );\n  295: \t\t$page = $redbean->load( \"page\", $id );\n  296  \t\tasrt( $page->name, \"new name\" );\n  297  \t\t// Null should == NULL after saving\n  298  \t\t$page->rating = NULL;\n  299: \t\t$newid = $redbean->store( $page );\n  300: \t\t$page  = $redbean->load( \"page\", $id );\n  301  \t\tasrt( $page->name, \"new name\" );\n  302  \t\tasrt( ( $page->rating === NULL ), TRUE );\n  303  \t\tasrt( !$page->rating, TRUE );\n  304  \t\t$page->rating = FALSE;\n  305: \t\t$newid = $redbean->store( $page );\n  306  \t\tasrt( $newid, $id );\n  307: \t\t$page = $redbean->load( \"page\", $id );\n  308  \t\tasrt( $page->name, \"new name\" );\n  309  \t\tasrt( (bool) $page->rating, FALSE );\n  ...\n  311  \t\tasrt( !$page->rating, TRUE );\n  312  \t\t$page->rating = TRUE;\n  313: \t\t$newid = $redbean->store( $page );\n  314  \t\tasrt( $newid, $id );\n  315: \t\t$page = $redbean->load( \"page\", $id );\n  316  \t\tasrt( $page->name, \"new name\" );\n  317  \t\tasrt( (bool) $page->rating, TRUE );\n  ...\n  323  \t\tasrt( $page->rating, NULL );\n  324  \t\t$page->rating = '1';\n  325: \t\t$newid = $redbean->store( $page );\n  326  \t\tasrt( $newid, $id );\n  327: \t\t$page = $redbean->load( \"page\", $id );\n  328  \t\tasrt( $page->name, \"new name\" );\n  329  \t\tasrt( $page->rating, \"1\" );\n  330  \t\t$page->rating = \"0\";\n  331: \t\t$newid = $redbean->store( $page );\n  332  \t\tasrt( $page->rating, \"0\" );\n  333  \t\t$page->rating = 0;\n  334: \t\t$newid = $redbean->store( $page );\n  335  \t\tasrt( $page->rating, 0 );\n  336  \t\t$page->rating = \"0\";\n  337: \t\t$newid = $redbean->store( $page );\n  338  \t\tasrt( $newid, $id );\n  339: \t\t$page = $redbean->load( \"page\", $id );\n  340  \t\tasrt( $page->name, \"new name\" );\n  341  \t\tasrt( !$page->rating, TRUE );\n  ...\n  343  \t\tasrt( ( $page->rating == FALSE ), TRUE );\n  344  \t\t$page->rating = 5;\n  345: \t\t$newid = $redbean->store( $page );\n  346  \t\tasrt( $newid, $id );\n  347: \t\t$page = $redbean->load( \"page\", $id );\n  348  \t\tasrt( $page->name, \"new name\" );\n  349  \t\tasrt( strval( $page->rating ), \"5\" );\n  350  \t\t$page->rating = 300;\n  351: \t\t$newid = $redbean->store( $page );\n  352  \t\tasrt( $newid, $id );\n  353: \t\t$page = $redbean->load( \"page\", $id );\n  354  \t\tasrt( $page->name, \"new name\" );\n  355  \t\tasrt( strval( $page->rating ), \"300\" );\n  356  \t\t$page->rating = -2;\n  357: \t\t$newid = $redbean->store( $page );\n  358  \t\tasrt( $newid, $id );\n  359: \t\t$page = $redbean->load( \"page\", $id );\n  360  \t\tasrt( $page->name, \"new name\" );\n  361  \t\tasrt( strval( $page->rating ), \"-2\" );\n  362  \t\t$page->rating = 2.5;\n  363: \t\t$newid = $redbean->store( $page );\n  364  \t\tasrt( $newid, $id );\n  365: \t\t$page = $redbean->load( \"page\", $id );\n  366  \t\tasrt( $page->name, \"new name\" );\n  367  \t\tasrt( ( $page->rating == 2.5 ), TRUE );\n  368  \t\t$page->rating = -3.3;\n  369: \t\t$newid = $redbean->store( $page );\n  370  \t\tasrt( $newid, $id );\n  371: \t\t$page = $redbean->load( \"page\", $id );\n  372  \t\tasrt( $page->name, \"new name\" );\n  373  \t\tasrt( ( $page->rating == -3.3 ), TRUE );\n  374  \t\t$page->rating = \"good\";\n  375: \t\t$newid = $redbean->store( $page );\n  376  \t\tasrt( $newid, $id );\n  377: \t\t$page = $redbean->load( \"page\", $id );\n  378  \t\tasrt( $page->name, \"new name\" );\n  379  \t\tasrt( $page->rating, \"good\" );\n  380  \t\t$longtext = str_repeat( 'great! because..', 100 );\n  381  \t\t$page->rating = $longtext;\n  382: \t\t$newid = $redbean->store( $page );\n  383  \t\tasrt( $newid, $id );\n  384: \t\t$page = $redbean->load( \"page\", $id );\n  385  \t\tasrt( $page->name, \"new name\" );\n  386  \t\tasrt( $page->rating, $longtext );\n  ...\n  388  \t\t$numAsString = \"0001\";\n  389  \t\t$page->numasstring = $numAsString;\n  390: \t\t$redbean->store( $page );\n  391: \t\t$page = $redbean->load( \"page\", $id );\n  392  \t\tasrt( $page->numasstring, \"0001\" );\n  393  \t\t$page->numnotstring = \"0.123\";\n  394: \t\t$redbean->store( $page );\n  395: \t\t$page = $redbean->load( \"page\", $id );\n  396  \t\tasrt( $page->numnotstring == 0.123, TRUE );\n  397  \t\t$page->numasstring2 = \"00.123\";\n  398: \t\t$redbean->store( $page );\n  399: \t\t$page = $redbean->load( \"page\", $id );\n  400  \t\tasrt( $page->numasstring2, \"00.123\" );\n  401  \t\ttry {\n  402: \t\t\t$redbean->trash( array() );\n  403  \t\t\tfail();\n  404  \t\t} catch ( RedException $e ) {\n  405  \t\t\tpass();\n  406  \t\t}\n  407: \t\t$redbean->trash( $page );\n  408  \t\tasrt( (int) $pdo->GetCell( \"SELECT count(*) FROM page\" ), 0 );\n  409  \t}\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Utf8.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   14   * @file    RedUNIT/Base/UTF8.php\n   15   * @desc    Tests handling of NULL values.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Via.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\ToolBox as ToolBox;\n    8: use RedBeanPHP\\AssociationManager as AssociationManager;\n    9: use RedBeanPHP\\RedException\\SQL as SQL;\n   10: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   11  \n   12  /**\n   ..\n   20   * @file    RedUNIT/Base/Via.php\n   21   * @desc    Via tests\n   22:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   23   * @license New BSD/GPLv2\n   24   *\n   25:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   26   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   27   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\With.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   16   * @file    RedUNIT/Base/With.php\n   17   * @desc    Tests query modification of own-lists with prefix-with\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Writecache.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   21   * @file    RedUNIT/Base/Writecache.php\n   22   * @desc    Tests the Query Writer cache implemented in the\n   23:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   24   * @license New BSD/GPLv2\n   25   *\n   26:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   27   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Base\\Xnull.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   14   * @file    RedUNIT/Base/Xnull.php\n   15   * @desc    Tests handling of NULL values.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Debug.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\Logger\\RDefault\\Debug as Debugger;\n    9  \n   10  /**\n   ..\n   16   * @file    RedUNIT/Blackhole/Debug.php\n   17   * @desc    Tests Debugger II.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Export.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   16   * @file    RedUNIT/Blackhole/Export.php\n   17   * @desc    Tests basic bean exporting features.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n   33  \t{\n   34  \t\ttestpack( 'Test exportAll' );\n   35: \t\t$redbean = R::getRedBean();\n   36  \t\t$bean = R::dispense('bean');\n   37  \t\t$bean->import( array( 'a' => 1, 'b' => 2 ) );\n   ..\n   48  \t\tasrt( $arr[\"a\"], 1 );\n   49  \t\tasrt( $arr[\"b\"], 2 );\n   50: \t\t$exportBean = $redbean->dispense( 'abean' );\n   51  \t\t$exportBean->setMeta( 'metaitem.bla', 1 );\n   52  \t\t$exportedBean = $exportBean->export( TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Fusebox.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\SimpleModel as SimpleModel;\n    9  \n   10  /**\n   ..\n   17   * @file    RedUNIT/Blackhole/Fusebox.php\n   18   * @desc    Tests Boxing/Unboxing of beans.\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Glue.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\QueryWriter as QueryWriter;\n    8  \n    9  /**\n   10   * Glue\n   11   *\n   12:  * RedBeanPHP does NOT parse entire queries and it does not\n   13:  * ship with a query builder. However because RedBeanPHP\n   14   * facilitates mixing-in SQL snippets using methods like\n   15   * find(), via(), with(), withCondition() and so on...,\n   ..\n   20   * The gluer is part of the QueryWriter, however since this narrow\n   21   * slice of SQL syntax is so generic it's been implemented at Writer\n   22:  * level and all drivers in RedBeanPHP inherit the generic implementation.\n   23   * At the moment of writing no additional glue methods had to be\n   24   * implemented.\n   ..\n   26   * @file    RedUNIT/Blackhole/Glue.php\n   27   * @desc    Tests query gluer.\n   28:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   29   * @license New BSD/GPLv2\n   30   *\n   31:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   32   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   33   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Import.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\RedException as RedException;\n    9  \n   10  /**\n   11   * Import\n   12   *\n   13:  * RedBeanPHP offers some methods to import arrays into\n   14   * beans. For instance using the dispense() method. This\n   15:  * test suite checks whether RedBeanPHP can correctly convert\n   16   * array structures to beans and also checks the expected effects\n   17   * on the taint flags. This test suite further tests the 'simple'\n   ..\n   21   * @file    RedUNIT/Blackhole/Import.php\n   22   * @desc    Tests basic bean importing features.\n   23:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   24   * @license New BSD/GPLv2\n   25   *\n   26:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   27   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Labels.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   18   * @file    RedUNIT/Blackhole/Labels.php\n   19   * @desc    Tests Facade Label functions.\n   20:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   21   * @license New BSD/GPLv2\n   22   *\n   23:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   24   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   25   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Meta.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   19   * @file    RedUNIT/Blackhole/Meta.php\n   20   * @desc    Tests meta data features on OODBBean class.\n   21:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   22   * @license New BSD/GPLv2\n   23   *\n   24:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   25   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   26   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Misc.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8: use RedBeanPHP\\Driver\\RPDO as RPDO;\n    9: use RedBeanPHP\\Logger\\RDefault as RDefault;\n   10: use RedBeanPHP\\RedException as RedException;\n   11: use RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper as SimpleFacadeBeanHelper;\n   12: use RedBeanPHP\\BeanHelper\\DynamicBeanHelper as DynamicBeanHelper;\n   13: use RedBeanPHP\\QueryWriter;\n   14: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   15: use RedBeanPHP\\QueryWriter\\MySQL as MySQLQueryWriter;\n   16: use RedBeanPHP\\QueryWriter\\PostgreSQL as PostgresQueryWriter;\n   17  \n   18  /**\n   ..\n   25   * @file    RedUNIT/Blackhole/Misc.php\n   26   * @desc    Tests various features that do not rely on a database connection.\n   27:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   28   * @license New BSD/GPLv2\n   29   *\n   30:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   31   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   32   * with this source code in the file license.txt.\n   ..\n   95  \n   96  \t/**\n   97: \t * Test whether we can toggle enforcement of the RedBeanPHP\n   98  \t * naming policy.\n   99  \t *\n  ...\n  102  \tpublic function testEnforceNamingPolicy()\n  103  \t{\n  104: \t\t\\RedBeanPHP\\Util\\DispenseHelper::setEnforceNamingPolicy( FALSE );\n  105  \t\tR::dispense('a_b');\n  106  \t\tpass();\n  107: \t\t\\RedBeanPHP\\Util\\DispenseHelper::setEnforceNamingPolicy( TRUE );\n  108  \t\ttry {\n  109  \t\t\tR::dispense('a_b');\n  ...\n  121  \tpublic function testCSV()\n  122  \t{\n  123: \t\t\\RedBeanPHP\\Util\\QuickExport::operation( 'test', TRUE, TRUE );\n  124  \t\tR::nuke();\n  125  \t\t$city = R::dispense('city');\n  ...\n  128  \t\t$city->population = '200k';\n  129  \t\tR::store($city);\n  130: \t\t$qe = new \\RedBeanPHP\\Util\\QuickExport( R::getToolBox() );\n  131  \t\t$out = $qe->csv( 'SELECT `name`, population FROM city WHERE region = :region ',\n  132  \t\t\tarray( ':region' => 'region1' ),\n  ...\n  494  \t\t// Otherwise untestable...\n  495  \t\t$bean->setBeanHelper( new SimpleFacadeBeanHelper() );\n  496: \t\tR::getRedBean()->setBeanHelper( new SimpleFacadeBeanHelper() );\n  497  \t\tpass();\n  498  \t\t// Test whether properties like owner and shareditem are still possible\n  ...\n  668  \t{\n  669  \t\t$pdo = R::getToolBox()->getDatabaseAdapter()->getDatabase()->getPDO();\n  670: \t\t$rpdo = new \\RedBeanPHP\\Driver\\RPDO( $pdo );\n  671  \t\t$rpdo->setEnableLogging(true);\n  672: \t\t$logger = new \\RedBeanPHP\\Logger\\RDefault\\Debug;\n  673: \t\t$logger->setMode( \\RedBeanPHP\\Logger\\RDefault::C_LOGGER_ARRAY );\n  674  \t\t$rpdo->setLogger( $logger );\n  675  \t\t$rpdo->setInitQuery('SELECT 123');\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Plugins.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\Facade as Facade;\n    8: use RedBeanPHP\\RedException as RedException;\n    9  \n   10  /**\n   ..\n   16   * @file    RedUNIT/Blackhole/Plugins.php\n   17   * @desc    Tests extending R facade dynamically.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Stub.php:\n    4  \n    5  use RedUNIT\\Base as Base;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean as OODBBean;\n    8  \n    9  /**\n   ..\n   15   * @file    RedUNIT/Base/Stub.php\n   16   * @desc    Tests CUBRID without actual DB (mock adapter)\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n   51  \t\t$writer->callMethod( 'buildFK', $type, $targetType, $property, $targetProperty, $isDep = FALSE );\n   52  \t\tpass();\n   53: \t\t$mockdapter->errorExec = new \\RedBeanPHP\\RedException\\SQL('Test Exception');\n   54  \t\t$writer->callMethod( 'buildFK', $type, $targetType, $property, $targetProperty, $isDep = FALSE );\n   55  \t\tpass();\n   ..\n   73  \t\t$writer->getColumns( $table );\n   74  \t\tpass();\n   75: \t\tasrt( $writer->scanType( 123, $flagSpecial = FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_INTEGER );\n   76: \t\tasrt( $writer->scanType( 12.3, $flagSpecial = FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_DOUBLE );\n   77: \t\tasrt( $writer->scanType( '0001', $flagSpecial = FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_STRING );\n   78: \t\tasrt( $writer->scanType( '1001', $flagSpecial = FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_INTEGER );\n   79: \t\tasrt( $writer->scanType( NULL, $flagSpecial = FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_INTEGER );\n   80: \t\tasrt( $writer->scanType( '2019-01-01', $flagSpecial = FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_STRING );\n   81: \t\tasrt( $writer->scanType( '2019-01-01 10:00:00', $flagSpecial = FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_STRING );\n   82: \t\tasrt( $writer->scanType( '2019-01-01', $flagSpecial = TRUE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_SPECIAL_DATE );\n   83: \t\tasrt( $writer->scanType( '2019-01-01 10:00:00', $flagSpecial = TRUE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_SPECIAL_DATETIME );\n   84  \t\tpass();\n   85  \t\t$writer->code( $typedescription, $includeSpecials = FALSE );\n   86  \t\t$writer->code( $typedescription, $includeSpecials = TRUE );\n   87: \t\tasrt( $writer->code( 'INTEGER', FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_INTEGER );\n   88: \t\tasrt( $writer->code( 'DOUBLE', FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_DOUBLE );\n   89: \t\tasrt( $writer->code( 'STRING', FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_STRING );\n   90: \t\tasrt( $writer->code( 'DATE', FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_SPECIFIED );\n   91: \t\tasrt( $writer->code( 'DATETIME', FALSE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_SPECIFIED );\n   92: \t\tasrt( $writer->code( 'INTEGER', TRUE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_INTEGER );\n   93: \t\tasrt( $writer->code( 'DOUBLE', TRUE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_DOUBLE );\n   94: \t\tasrt( $writer->code( 'STRING', TRUE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_STRING );\n   95: \t\tasrt( $writer->code( 'DATE', TRUE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_SPECIAL_DATE );\n   96: \t\tasrt( $writer->code( 'DATETIME', TRUE ), \\RedBeanPHP\\QueryWriter\\CUBRID::C_DATATYPE_SPECIAL_DATETIME );\n   97  \t\tpass();\n   98  \t\t$writer->addColumn( $type, $column, $field );\n   99  \t\tpass();\n  100  \t\t$writer->addUniqueConstraint( $type, $properties );\n  101: \t\t$mockdapter->errorExec = new \\RedBeanPHP\\RedException\\SQL('Test Exception');\n  102  \t\t$writer->addUniqueConstraint( $type, $properties );\n  103  \t\tpass();\n  104  \t\tasrt( $writer->sqlStateIn( 'HY000', array() ), FALSE );\n  105: \t\tasrt( $writer->sqlStateIn( 'HY000', array(\\RedBeanPHP\\QueryWriter::C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION) ), TRUE );\n  106  \t\tpass();\n  107  \t\t$writer->addIndex( $type, $name, $column );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Tainted.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   14   * @file    RedUNIT/Blackhole/Tainted.php\n   15   * @desc    Tests tainted flag for OODBBean objects.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n   ..\n   97  \t{\n   98  \t\ttestpack( 'Original Tainted Tests' );\n   99: \t\t$redbean = R::getRedBean();\n  100: \t\t$spoon = $redbean->dispense( \"spoon\" );\n  101  \t\tasrt( $spoon->getMeta( \"tainted\" ), TRUE );\n  102  \t\t$spoon->dirty = \"yes\";\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Toolbox.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\ToolBox as TB;\n    8: use RedBeanPHP\\QueryWriter as QueryWriter;\n    9: use RedBeanPHP\\Adapter as Adapter;\n   10: use RedBeanPHP\\OODB as OODB;\n   11: use RedBeanPHP\\BeanHelper as BeanHelper;\n   12: use RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper as SimpleFacadeBeanHelper;\n   13: use RedBeanPHP\\Repository as Repository;\n   14: use RedBeanPHP\\Repository\\Fluid as FluidRepo;\n   15: use RedBeanPHP\\Repository\\Frozen as FrozenRepo;\n   16: use RedBeanPHP\\RedException as RedException;\n   17  \n   18  /**\n   ..\n   20   *\n   21   * The Toolbox acts as a kind of micro service locator.\n   22:  * The toolbox is passed around by RedBeanPHP core objects\n   23   * to share services. It contains an adapter, a query writer\n   24:  * and the RedBeanPHP Object Database object (OODB).\n   25   * This test suite focuses on the toolbox.\n   26   *\n   27   * @file    RedUNIT/Blackhole/Toolbox.php\n   28   * @desc    Toolbox tests.\n   29:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   30   * @license New BSD/GPLv2\n   31   *\n   32:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   33   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   34   * with this source code in the file license.txt.\n   ..\n  102  \t\t$toolbox = R::getToolBox();\n  103  \t\tasrt( ( $toolbox->getDatabaseAdapter() instanceof Adapter ), TRUE );\n  104: \t\tasrt( ( $toolbox->getRedBean() instanceof OODB ), TRUE );\n  105  \t\tasrt( ( $toolbox->getWriter() instanceof QueryWriter ), TRUE );\n  106  \t}\n  ...\n  114  \tpublic function testRepoSwitching()\n  115  \t{\n  116: \t\tasrt( class_exists( 'RedBeanPHP\\Repository' ), TRUE );\n  117: \t\tasrt( class_exists( 'RedBeanPHP\\Repository\\Fluid' ), TRUE );\n  118: \t\tasrt( class_exists( 'RedBeanPHP\\Repository\\Frozen' ), TRUE );\n  119  \t\tR::freeze( FALSE );\n  120: \t\t$redbean = R::getRedBean();\n  121: \t\t$repo = $redbean->getCurrentRepository();\n  122  \t\tasrt( is_object( $repo ), TRUE );\n  123  \t\tasrt( ( $repo instanceof Repository ), TRUE );\n  ...\n  125  \t\tR::freeze( TRUE );\n  126  \t\t$fluid = $repo;\n  127: \t\t$repo = $redbean->getCurrentRepository();\n  128  \t\tasrt( is_object( $repo ), TRUE );\n  129  \t\tasrt( ( $repo instanceof Repository ), TRUE );\n  ...\n  131  \t\t$frozen = $repo;\n  132  \t\tR::freeze( FALSE );\n  133: \t\t$redbean = R::getRedBean();\n  134: \t\t$repo = $redbean->getCurrentRepository();\n  135  \t\tasrt( is_object( $repo ), TRUE );\n  136  \t\tasrt( ( $repo instanceof Repository ), TRUE );\n  ...\n  139  \t\tR::freeze( TRUE );\n  140  \t\t$fluid = $repo;\n  141: \t\t$repo = $redbean->getCurrentRepository();\n  142  \t\tasrt( is_object( $repo ), TRUE );\n  143  \t\tasrt( ( $repo instanceof Repository ), TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Blackhole\\Version.php:\n    4  \n    5  use RedUNIT\\Blackhole as Blackhole;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\OODBBean;\n    8  \n    9  /**\n   ..\n   16   * @file    RedUNIT/Blackhole/Version.php\n   17   * @desc    Tests identification features.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n   69  \tpublic function testTools()\n   70  \t{\n   71: \t\tasrt( class_exists( '\\\\RedBean_SimpleModel' ), TRUE );\n   72  \t\tasrt( class_exists( '\\\\R' ), TRUE );\n   73  \t\tasrt( function_exists( 'EID' ), TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\CUBRID\\Setget.php:\n    3  namespace RedUNIT\\CUBRID;\n    4  \n    5: use RedBeanPHP\\Facade as R;\n    6: use \\RedBeanPHP\\RedException as RedException;\n    7  \n    8  /**\n    .\n   10   *\n   11   * This class has been designed to test set/get operations\n   12:  * for a specific Query Writer / Adapter. Since RedBeanPHP\n   13   * creates columns based on values it's essential that you\n   14   * get back the 'same' value as you put in - or - if that's\n   ..\n   25   * @file    RedUNIT/CUBRID/Setget.php\n   26   * @desc    Tests whether values are stored correctly.\n   27:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   28   * @license New BSD/GPLv2\n   29   *\n   30:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   31   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   32   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\CUBRID\\Writer.php:\n    1  <?php\n    2  namespace RedUNIT\\CUBRID;\n    3: use RedBeanPHP\\Facade as R;\n    4: use \\RedBeanPHP\\QueryWriter\\CUBRID as CUBRID;\n    5  \n    6  /**\n    .\n   14   * @file    RedUNIT/CUBRID/Writer.php\n   15   * @desc    A collection of database specific writer functions.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n   ..\n   33  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   34  \t\t$writer  = $toolbox->getWriter();\n   35: \t\t$redbean = $toolbox->getRedBean();\n   36  \t\t$pdo     = $adapter->getDatabase();\n   37  \t\t$writer->createTable( \"testtable\" );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Bigint.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   16   * @file    RedUNIT/Mysql/Bigint.php\n   17   * @desc    Tests support for BIGINT primary keys.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Double.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   14   * @file    RedUNIT/Mysql/Double.php\n   15   * @desc    Tests handling of double precision values.\n   16:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   17   * @license New BSD/GPLv2\n   18   *\n   19:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   20   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   21   * with this source code in the file license.txt.\n   ..\n   33  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   34  \t\t$writer  = $toolbox->getWriter();\n   35: \t\t$redbean = $toolbox->getRedBean();\n   36  \t\t$pdo     = $adapter->getDatabase();\n   37  \t\t$largeDouble = 999999888889999922211111; //8.88889999922211e+17;\n   38: \t\t$page = $redbean->dispense( \"page\" );\n   39  \t\t$page->weight = $largeDouble;\n   40: \t\t$id = $redbean->store( $page );\n   41  \t\t$cols = $writer->getColumns( 'page' );\n   42  \t\tasrt( $cols['weight'], 'double' );\n   43: \t\t$page = $redbean->load( 'page', $id );\n   44  \t\t$page->name = 'dont change the numbers!';\n   45: \t\t$redbean->store( $page );\n   46: \t\t$page = $redbean->load( 'page', $id );\n   47  \t\t$cols = $writer->getColumns( 'page' );\n   48  \t\tasrt( $cols['weight'], 'double' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Foreignkeys.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @file    RedUNIT/Mysql/Foreignkeys.php\n   16   * @desc    Tests creation of foreign keys.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n  121  \t\t$bean1 = R::dispense( 'project' );\n  122  \t\t$bean2 = R::dispense( 'invoice' );\n  123: \t\t$bean3 = R::getRedBean()->dispense( 'invoice_project' );\n  124  \t\t$bean3->project_id = FALSE;\n  125  \t\t$bean3->invoice_id = TRUE;\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Freeze.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\AssociationManager as AssociationManager;\n    8: use RedBeanPHP\\RedException\\SQL as SQL;\n    9  \n   10  /**\n   ..\n   16   * @file    RedUNIT/Mysql/Freeze.php\n   17   * @desc    Tests freezing of databases for production environments.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n   37  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   38  \t\t$writer  = $toolbox->getWriter();\n   39: \t\t$redbean = $toolbox->getRedBean();\n   40  \t\t$pdo     = $adapter->getDatabase();\n   41  \t\t$a = new AssociationManager( $toolbox );\n   42: \t\t$post = $redbean->dispense( 'post' );\n   43  \t\t$post->title = 'title';\n   44: \t\t$redbean->store( $post );\n   45: \t\t$page = $redbean->dispense( 'page' );\n   46  \t\t$page->name = 'title';\n   47: \t\t$redbean->store( $page );\n   48: \t\t$page = $redbean->dispense( \"page\" );\n   49  \t\t$page->name = \"John's page\";\n   50: \t\t$idpage = $redbean->store( $page );\n   51: \t\t$page2 = $redbean->dispense( \"page\" );\n   52  \t\t$page2->name = \"John's second page\";\n   53: \t\t$idpage2 = $redbean->store( $page2 );\n   54  \t\t$a->associate( $page, $page2 );\n   55: \t\t$redbean->freeze( TRUE );\n   56: \t\t$page = $redbean->dispense( \"page\" );\n   57  \t\t$page->sections = 10;\n   58  \t\t$page->name = \"half a page\";\n   59  \t\ttry {\n   60: \t\t\t$id = $redbean->store( $page );\n   61  \t\t\tfail();\n   62  \t\t} catch ( SQL $e ) {\n   63  \t\t\tpass();\n   64  \t\t}\n   65: \t\t$post = $redbean->dispense( \"post\" );\n   66  \t\t$post->title = \"existing table\";\n   67  \t\ttry {\n   68: \t\t\t$id = $redbean->store( $post );\n   69  \t\t\tpass();\n   70  \t\t} catch ( SQL $e ) {\n   ..\n   73  \t\tasrt( in_array( \"name\", array_keys( $writer->getColumns( \"page\" ) ) ), TRUE );\n   74  \t\tasrt( in_array( \"sections\", array_keys( $writer->getColumns( \"page\" ) ) ), FALSE );\n   75: \t\t$newtype = $redbean->dispense( \"newtype\" );\n   76  \t\t$newtype->property = 1;\n   77  \t\ttry {\n   78: \t\t\t$id = $redbean->store( $newtype );\n   79  \t\t\tfail();\n   80  \t\t} catch ( SQL $e ) {\n   ..\n   83  \t\t$logger = R::debug( TRUE, 1 );\n   84  \t\t// Now log and make sure no 'describe SQL' happens\n   85: \t\t$page = $redbean->dispense( \"page\" );\n   86  \t\t$page->name = \"just another page that has been frozen...\";\n   87: \t\t$id = $redbean->store( $page );\n   88: \t\t$page = $redbean->load( \"page\", $id );\n   89  \t\t$page->name = \"just a frozen page...\";\n   90: \t\t$redbean->store( $page );\n   91: \t\t$page2 = $redbean->dispense( \"page\" );\n   92  \t\t$page2->name = \"an associated frozen page\";\n   93  \t\t$a->associate( $page, $page2 );\n   ..\n   95  \t\t$a->unassociate( $page, $page2 );\n   96  \t\t$a->clearRelations( $page, \"page\" );\n   97: \t\t$items = $redbean->find( \"page\", array(), array( \"1\" ) );\n   98: \t\t$redbean->trash( $page );\n   99: \t\t$redbean->freeze( FALSE );\n  100  \t\tasrt( count( $logger->grep( \"SELECT\" ) ) > 0, TRUE );\n  101  \t\tasrt( count( $logger->grep( \"describe\" ) ) < 1, TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Issue411.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   17   * @file    RedUNIT/Mysql/Issue411.php\n   18   * @desc    Tests intermediate varchar 191 type for MySQL utf8mb4.\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Parambind.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException\\SQL as SQL;\n    8  \n    9  /**\n   10   * Parambind\n   11   *\n   12:  * Tests the parameter binding functionality in RedBeanPHP.\n   13   * These test scenarios include for instance: NULL handling,\n   14   * binding parameters in LIMIT clauses and so on.\n   ..\n   16   * @file    RedUNIT/Mysql/Parambind.php\n   17   * @desc    Tests\\PDO parameter binding.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n   ..\n   35  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   36  \t\t$writer  = $toolbox->getWriter();\n   37: \t\t$redbean = $toolbox->getRedBean();\n   38  \t\t$pdo     = $adapter->getDatabase();\n   39  \t\tR::getDatabaseAdapter()->getDatabase()->setUseStringOnlyBinding( TRUE );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Preexist.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\AssociationManager as AssociationManager;\n    8  \n    9  /**\n   10   * Preexist\n   11   *\n   12:  * Tests whether RedBeanPHP can work with existing\n   13   * MySQL schemas.\n   14   *\n   15   * @file    RedUNIT/Mysql/Preexist.php\n   16   * @desc    Tests integration with pre-existing schemas.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n   34  \t\t$adapter     = $toolbox->getDatabaseAdapter();\n   35  \t\t$writer      = $toolbox->getWriter();\n   36: \t\t$redbean     = $toolbox->getRedBean();\n   37  \t\t$pdo         = $adapter->getDatabase();\n   38  \t\t$a           = new AssociationManager( $toolbox );\n   39: \t\t$page        = $redbean->dispense( \"page\" );\n   40  \t\t$page->name  = \"John's page\";\n   41: \t\t$idpage      = $redbean->store( $page );\n   42: \t\t$page2       = $redbean->dispense( \"page\" );\n   43  \t\t$page2->name = \"John's second page\";\n   44: \t\t$idpage2     = $redbean->store( $page2 );\n   45  \t\t$a->associate( $page, $page2 );\n   46  \t\t$adapter->exec( \"ALTER TABLE \" . $writer->esc( 'page' ) . \"\n   47  \t\tCHANGE \" . $writer->esc( 'name' ) . \" \" . $writer->esc( 'name' ) . \"\n   48  \t\tVARCHAR( 254 ) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL \" );\n   49: \t\t$page       = $redbean->dispense( \"page\" );\n   50  \t\t$page->name = \"Just Another Page In a Table\";\n   51  \t\t$cols       = $writer->getColumns( \"page\" );\n   52  \t\tasrt( $cols[\"name\"], \"varchar(254)\" );\n   53: \t\t$redbean->store( $page );\n   54  \t\tpass(); // No crash?\n   55  \t\t$cols = $writer->getColumns( \"page\" );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Setget.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   10   *\n   11   * This class has been designed to test set/get operations\n   12:  * for a specific Query Writer / Adapter. Since RedBeanPHP\n   13   * creates columns based on values it's essential that you\n   14   * get back the 'same' value as you put in - or - if that's\n   ..\n   25   * @file    RedUNIT/Mysql/Setget.php\n   26   * @desc    Tests whether values are stored correctly.\n   27:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   28   * @license New BSD/GPLv2\n   29   *\n   30:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   31   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   32   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Uuid.php:\n    4  \n    5  use RedUNIT\\Mysql as Mysql;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper as SimpleFacadeBeanHelper;\n    8: use RedBeanPHP\\OODB as OODB;\n    9: use RedBeanPHP\\OODBBean as OODBBean;\n   10: use RedBeanPHP\\ToolBox as ToolBox;\n   11  \n   12  /**\n   ..\n   22   * @file    RedUNIT/Mysql/Uuid.php\n   23   * @desc    Tests read support for UUID tables.\n   24:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   25   * @license New BSD/GPLv2\n   26   *\n   27:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   28   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   29   * with this source code in the file license.txt.\n   ..\n  144  \t\t$oldAdapter = $oldToolBox->getDatabaseAdapter();\n  145  \t\t$uuidWriter = new \\UUIDWriterMySQL( $oldAdapter );\n  146: \t\t$newRedBean = new OODB( $uuidWriter );\n  147: \t\t$newToolBox = new ToolBox( $newRedBean, $oldAdapter, $uuidWriter );\n  148  \t\tR::configureFacadeWithToolbox( $newToolBox );\n  149  \t\tlist( $mansion, $rooms, $ghosts, $key ) = R::dispenseAll( 'mansion,room*3,ghost*4,key' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Mysql\\Writer.php:\n    3  namespace RedUNIT\\Mysql;\n    4  \n    5: use RedBeanPHP\\Facade as R;\n    6: use RedBeanPHP\\AssociationManager as AssociationManager;\n    7: use RedBeanPHP\\QueryWriter as QueryWriter;\n    8: use RedBeanPHP\\QueryWriter\\MySQL as MySQL;\n    9: use RedBeanPHP\\QueryWriter\\AQueryWriter as AQueryWriter;\n   10: use RedBeanPHP\\RedException\\SQL as SQL;\n   11: use RedBeanPHP\\RedException as RedException;\n   12  \n   13  /**\n   ..\n   21   * @file    RedUNIT/Mysql/Writer.php\n   22   * @desc    A collection of database specific writer functions.\n   23:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   24   * @license New BSD/GPLv2\n   25   *\n   26:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   27   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   28   * with this source code in the file license.txt.\n   ..\n  337  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  338  \t\t$writer  = $toolbox->getWriter();\n  339: \t\t$redbean = $toolbox->getRedBean();\n  340  \t\t$pdo     = $adapter->getDatabase();\n  341  \t\t$a       = new AssociationManager( $toolbox );\n  ...\n  422  \t\ttestpack( \"Zero issue\" );\n  423  \t\t$toolbox = R::getToolBox();\n  424: \t\t$redbean = $toolbox->getRedBean();\n  425  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  426  \t\t$writer  = $toolbox->getWriter();\n  427  \t\t$pdo     = $adapter->getDatabase();\n  428  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS `zero`\" );\n  429: \t\t$bean        = $redbean->dispense( \"zero\" );\n  430  \t\t$bean->zero  = FALSE;\n  431  \t\t$bean->title = \"bla\";\n  432: \t\t$redbean->store( $bean );\n  433: \t\tasrt( count( $redbean->find( \"zero\", array(), \" zero = 0 \" ) ), 1 );\n  434  \t\tR::store( R::dispense( 'hack' ) );\n  435: \t\ttestpack( \"Test RedBean Security - bean interface \" );\n  436  \t\tasrt( in_array( \"hack\", $adapter->getCol( \"show tables\" ) ), TRUE );\n  437: \t\t$bean = $redbean->load( \"page\", \"13; drop table hack\" );\n  438  \t\tasrt( in_array( \"hack\", $adapter->getCol( \"show tables\" ) ), TRUE );\n  439  \t\ttry {\n  440: \t\t\t$bean = $redbean->load( \"page where 1; drop table hack\", 1 );\n  441  \t\t} catch (\\Exception $e ) {\n  442  \t\t}\n  443  \t\tasrt( in_array( \"hack\", $adapter->getCol( \"show tables\" ) ), TRUE );\n  444: \t\t$bean     = $redbean->dispense( \"page\" );\n  445  \t\t$evil     = \"; drop table hack\";\n  446  \t\t$bean->id = $evil;\n  447  \t\ttry {\n  448: \t\t\t$redbean->store( $bean );\n  449  \t\t} catch (\\Exception $e ) {\n  450  \t\t}\n  ...\n  453  \t\t$bean->name = \"\\\"\" . $evil;\n  454  \t\ttry {\n  455: \t\t\t$redbean->store( $bean );\n  456  \t\t} catch (\\Exception $e ) {\n  457  \t\t}\n  ...\n  459  \t\t$bean->name = \"'\" . $evil;\n  460  \t\ttry {\n  461: \t\t\t$redbean->store( $bean );\n  462  \t\t} catch (\\Exception $e ) {\n  463  \t\t}\n  ...\n  465  \t\t$bean->$evil = 1;\n  466  \t\ttry {\n  467: \t\t\t$redbean->store( $bean );\n  468  \t\t} catch (\\Exception $e ) {\n  469  \t\t}\n  ...\n  473  \t\t$bean->name = \"\\\"\" . $evil;\n  474  \t\ttry {\n  475: \t\t\t$redbean->store( $bean );\n  476  \t\t} catch (\\Exception $e ) {\n  477  \t\t}\n  ...\n  479  \t\t$bean->name = \"'\" . $evil;\n  480  \t\ttry {\n  481: \t\t\t$redbean->store( $bean );\n  482  \t\t} catch (\\Exception $e ) {\n  483  \t\t}\n  ...\n  485  \t\t$bean->$evil = 1;\n  486  \t\ttry {\n  487: \t\t\t$redbean->store( $bean );\n  488  \t\t} catch (\\Exception $e ) {\n  489  \t\t}\n  490  \t\tasrt( in_array( \"hack\", $adapter->getCol( \"show tables\" ) ), TRUE );\n  491  \t\ttry {\n  492: \t\t\t$redbean->trash( $bean );\n  493  \t\t} catch (\\Exception $e ) {\n  494  \t\t}\n  495  \t\tasrt( in_array( \"hack\", $adapter->getCol( \"show tables\" ) ), TRUE );\n  496  \t\ttry {\n  497: \t\t\t$redbean->find( \"::\", array(), \"\" );\n  498  \t\t} catch (\\Exception $e ) {\n  499  \t\t\tpass();\n  500  \t\t}\n  501  \t\t$adapter->exec( \"drop table if exists sometable\" );\n  502: \t\ttestpack( \"Test RedBean Security - query writer\" );\n  503  \t\ttry {\n  504  \t\t\t$writer->createTable( \"sometable` ( `id` INT( 11 ) UNSIGNED NOT NULL AUTO_INCREMENT , PRIMARY KEY ( `id` ) ) ENGINE = InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci ; drop table hack; --\" );\n  ...\n  511  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS book\" );\n  512  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS author\" );\n  513: \t\t$redbean       = $toolbox->getRedBean();\n  514  \t\t$a             = new AssociationManager( $toolbox );\n  515: \t\t$book          = $redbean->dispense( \"book\" );\n  516: \t\t$author1       = $redbean->dispense( \"author\" );\n  517: \t\t$author2       = $redbean->dispense( \"author\" );\n  518  \t\t$book->title   = \"My First Post\";\n  519  \t\t$author1->name = \"Derek\";\n  ...\n  527  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS book\" );\n  528  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS author\" );\n  529: \t\t$redbean       = $toolbox->getRedBean();\n  530  \t\t$a             = new AssociationManager( $toolbox );\n  531: \t\t$book          = $redbean->dispense( \"book\" );\n  532: \t\t$author1       = $redbean->dispense( \"author\" );\n  533: \t\t$author2       = $redbean->dispense( \"author\" );\n  534  \t\t$book->title   = \"My First Post\";\n  535  \t\t$author1->name = \"Derek\";\n  ...\n  541  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS `book_group`\" );\n  542  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS `group`\" );\n  543: \t\t$group       = $redbean->dispense( \"group\" );\n  544  \t\t$group->name = \"mygroup\";\n  545: \t\t$redbean->store( $group );\n  546  \t\ttry {\n  547  \t\t\t$a->associate( $group, $book );\n  ...\n  562  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS book\" );\n  563  \t\t$pdo->Execute( \"DROP TABLE IF EXISTS author\" );\n  564: \t\t$redbean       = $toolbox->getRedBean();\n  565  \t\t$a             = new AssociationManager( $toolbox );\n  566: \t\t$book          = $redbean->dispense( \"book\" );\n  567: \t\t$author1       = $redbean->dispense( \"author\" );\n  568: \t\t$author2       = $redbean->dispense( \"author\" );\n  569  \t\t$book->title   = \"My First Post\";\n  570  \t\t$author1->name = \"Derek\";\n  ...\n  573  \t\t$a->unassociate( $book, $author2 );\n  574  \t\tpass();\n  575: \t\t$redbean->trash( $redbean->dispense( \"bla\" ) );\n  576  \t\tpass();\n  577: \t\t$bean       = $redbean->dispense( \"bla\" );\n  578  \t\t$bean->name = 1;\n  579  \t\t$bean->id   = 2;\n  580: \t\t$redbean->trash( $bean );\n  581  \t\tpass();\n  582  \t}\n  ...\n  722  \t{\n  723  \t\t$adapter = R::getToolBox()->getDatabaseAdapter();\n  724: \t\t$writer = new \\RedBeanPHP\\QueryWriter\\MySQL( $adapter );\n  725  \t\t$writer->useFeature('ignoreDisplayWidth');\n  726  \t\tasrt($writer->typeno_sqltype[MySQL::C_DATATYPE_BOOL],' TINYINT UNSIGNED ');\n  ...\n  741  \t{\n  742  \t\t$adapter = R::getToolBox()->getDatabaseAdapter();\n  743: \t\t$writer = new \\RedBeanPHP\\QueryWriter\\MySQL( $adapter, array('noInitcode'=>TRUE) );\n  744  \t\tpass();\n  745  \t}\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres\\Bigint.php:\n    4  \n    5  use RedUNIT\\Postgres as Postgres;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   16   * @file    RedUNIT/Postgres/Bigint.php\n   17   * @desc    Tests support for BIGINT primary keys.\n   18:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   19   * @license New BSD/GPLv2\n   20   *\n   21:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   22   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   23   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres\\Foreignkeys.php:\n    4  \n    5  use RedUNIT\\Postgres as Postgres;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @file    RedUNIT/Postgres/Foreignkeys.php\n   16   * @desc    Tests the creation of foreign keys.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres\\Parambind.php:\n    4  \n    5  use RedUNIT\\Postgres as Postgres;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    9   * Parambind\n   10   *\n   11:  * Tests the parameter binding functionality in RedBeanPHP.\n   12   * These test scenarios include for instance: NULL handling,\n   13   * binding parameters in LIMIT clauses and so on.\n   ..\n   15   * @file    RedUNIT/Postgres/Parambind.php\n   16   * @desc    Tests\\PDO parameter binding for Postgres.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres\\Partial.php:\n    4  \n    5  use RedUNIT\\Postgres as Postgres;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\RedException\\SQL as SQLException;\n    8  \n    9  /**\n   ..\n   20   * of the bean. If we choose to update the boolean property this is no longer\n   21   * a problem because we set the value ourselves it will be compatible. However\n   22:  * automatically loaded and stored properties by RedBeanPHP are subject to\n   23   * type inference, and the boolean FALSE value will become '', which is the\n   24   * crux of the issue here.\n   ..\n   26   * @file    RedUNIT/Postgres/Partial.php\n   27   * @desc    Tests whether 'partial beans' can be used to support non-RB columns\n   28:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   29   * @license New BSD/GPLv2\n   30   *\n   31:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   32   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   33   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres\\Setget.php:\n    4  \n    5  use RedUNIT\\Postgres as Postgres;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   10   *\n   11   * This class has been designed to test set/get operations\n   12:  * for a specific Query Writer / Adapter. Since RedBeanPHP\n   13   * creates columns based on values it's essential that you\n   14   * get back the 'same' value as you put in - or - if that's\n   ..\n   25   * @file    RedUNIT/Postgres/Setget.php\n   26   * @desc    Tests whether values are correctly stored.\n   27:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   28   * @license New BSD/GPLv2\n   29   *\n   30:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   31   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   32   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres\\Trees.php:\n    4  \n    5  use RedUNIT\\Postgres as Postgres;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @file    RedUNIT/Postgres/Trees.php\n   16   * @desc    Tests trees\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres\\Uuid.php:\n    4  \n    5  use RedUNIT\\Postgres as Postgres;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\BeanHelper\\SimpleFacadeBeanHelper as SimpleFacadeBeanHelper;\n    8: use RedBeanPHP\\OODB as OODB;\n    9: use RedBeanPHP\\OODBBean as OODBBean;\n   10: use RedBeanPHP\\ToolBox as ToolBox;\n   11  \n   12  /**\n   ..\n   22   * @file    RedUNIT/Postgres/Uuid.php\n   23   * @desc    Tests read support for UUID tables.\n   24:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   25   * @license New BSD/GPLv2\n   26   *\n   27:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   28   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   29   * with this source code in the file license.txt.\n   ..\n  131  \t\t$oldAdapter = $oldToolBox->getDatabaseAdapter();\n  132  \t\t$uuidWriter = new \\UUIDWriterPostgres( $oldAdapter );\n  133: \t\t$newRedBean = new OODB( $uuidWriter );\n  134: \t\t$newToolBox = new ToolBox( $newRedBean, $oldAdapter, $uuidWriter );\n  135  \t\tR::configureFacadeWithToolbox( $newToolBox );\n  136  \t\tlist( $mansion, $rooms, $ghosts, $key ) = R::dispenseAll( 'mansion,room*3,ghost*4,key' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Postgres\\Writer.php:\n    4  \n    5  use RedUNIT\\Postgres as Postgres;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\AssociationManager as AssociationManager;\n    8: use RedBeanPHP\\QueryWriter\\PostgreSQL as PostgreSQL;\n    9: use RedBeanPHP\\RedException\\SQL as SQL;\n   10: use RedBeanPHP\\RedException as RedException;\n   11  \n   12  /**\n   ..\n   20   * @file    RedUNIT/Postgres/Writer.php\n   21   * @desc    A collection of writer specific tests.\n   22:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   23   * @license New BSD/GPLv2\n   24   *\n   25:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   26   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   27   * with this source code in the file license.txt.\n   ..\n  237  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  238  \t\t$writer  = $toolbox->getWriter();\n  239: \t\t$redbean = $toolbox->getRedBean();\n  240  \t\t$pdo     = $adapter->getDatabase();\n  241  \t\t$a = new AssociationManager( $toolbox );\n  ...\n  305  \t\ttestpack( \"Zero issue\" );\n  306  \t\t$toolbox = R::getToolBox();\n  307: \t\t$redbean = $toolbox->getRedBean();\n  308: \t\t$bean = $redbean->dispense( \"zero\" );\n  309  \t\t$bean->zero  = FALSE;\n  310  \t\t$bean->title = \"bla\";\n  311: \t\t$redbean->store( $bean );\n  312: \t\tasrt( count( $redbean->find( \"zero\", array(), \" zero = 0 \" ) ), 1 );\n  313  \t\ttestpack( \"Test ANSI92 issue in clearrelations\" );\n  314  \t\t$a = new AssociationManager( $toolbox );\n  315: \t\t$book    = $redbean->dispense( \"book\" );\n  316: \t\t$author1 = $redbean->dispense( \"author\" );\n  317: \t\t$author2 = $redbean->dispense( \"author\" );\n  318  \t\t$book->title = \"My First Post\";\n  319  \t\t$author1->name = \"Derek\";\n  ...\n  335  \t{\n  336  \t\t$toolbox = R::getToolBox();\n  337: \t\t$redbean = $toolbox->getRedBean();\n  338  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  339  \t\t$a = new AssociationManager( $toolbox );\n  340: \t\t$book = $redbean->dispense( \"book\" );\n  341: \t\t$author1 = $redbean->dispense( \"author\" );\n  342: \t\t$author2 = $redbean->dispense( \"author\" );\n  343  \t\t$book->title = \"My First Post\";\n  344  \t\t$author1->name = \"Derek\";\n  ...\n  349  \t\ttestpack( \"Test Association Issue Group keyword (Issues 9 and 10)\" );\n  350  \t\tR::nuke();\n  351: \t\t$group = $redbean->dispense( \"group\" );\n  352  \t\t$group->name = \"mygroup\";\n  353: \t\t$redbean->store( $group );\n  354  \t\ttry {\n  355  \t\t\t$a->associate( $group, $book );\n  ...\n  380  \t{\n  381  \t\t$toolbox = R::getToolBox();\n  382: \t\t$redbean = $toolbox->getRedBean();\n  383  \t\t$a = new AssociationManager( $toolbox );\n  384: \t\t$book    = $redbean->dispense( \"book\" );\n  385: \t\t$author1 = $redbean->dispense( \"author\" );\n  386: \t\t$author2 = $redbean->dispense( \"author\" );\n  387  \t\t$book->title = \"My First Post\";\n  388  \t\t$author1->name = \"Derek\";\n  ...\n  391  \t\t$a->unassociate( $book, $author2 );\n  392  \t\tpass();\n  393: \t\t$redbean->trash( $redbean->dispense( \"bla\" ) );\n  394  \t\tpass();\n  395: \t\t$bean = $redbean->dispense( \"bla\" );\n  396  \t\t$bean->name = 1;\n  397  \t\t$bean->id   = 2;\n  398: \t\t$redbean->trash( $bean );\n  399  \t\tpass();\n  400  \t}\n  ...\n  625  \t/**\n  626  \t * Issue #340\n  627: \t * Redbean is currently picking up bcrypt hashed passwords\n  628  \t * (which look like this: $2y$12$85lAS....SnpDNVGPAC7w0G)\n  629  \t * as PostgreSQL money types.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Sqlite\\Foreignkeys.php:\n    4  \n    5  use RedUNIT\\Sqlite as Sqlite;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   15   * @file    RedUNIT/Sqlite/Foreignkeys.php\n   16   * @desc    Tests the creation of foreign keys.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Sqlite\\Parambind.php:\n    4  \n    5  use RedUNIT\\Sqlite as Sqlite;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    9   * Parambind\n   10   *\n   11:  * Tests the parameter binding functionality in RedBeanPHP.\n   12   * These test scenarios include for instance: NULL handling,\n   13   * binding parameters in LIMIT clauses and so on.\n   ..\n   15   * @file    RedUNIT/Sqlite/Parambind.php\n   16   * @desc    Tests\\PDO parameter binding.\n   17:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   18   * @license New BSD/GPLv2\n   19   *\n   20:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   21   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   22   * with this source code in the file license.txt.\n   ..\n   34  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   35  \t\t$writer  = $toolbox->getWriter();\n   36: \t\t$redbean = $toolbox->getRedBean();\n   37  \t\t$pdo     = $adapter->getDatabase();\n   38  \t\tasrt( (int) $adapter->getCell( \"SELECT 123\" ), 123 );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Sqlite\\Rebuild.php:\n    4  \n    5  use RedUNIT\\Sqlite as Sqlite;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   10   *\n   11   * SQLite cannot ALTER tables like other databases can.\n   12:  * To implement fluid mode in RedBeanPHP we have to\n   13   * rebuild the entire table whenever we add or remove a column.\n   14   * This test class tests whether rebuilding tables works properly,\n   ..\n   17   * @file    RedUNIT/Sqlite/Rebuild.php\n   18   * @desc    Test rebuilding of tables for SQLite\n   19:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   20   * @license New BSD/GPLv2\n   21   *\n   22:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   23   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   24   * with this source code in the file license.txt.\n   ..\n   36  \t\t$adapter = $toolbox->getDatabaseAdapter();\n   37  \t\t$writer  = $toolbox->getWriter();\n   38: \t\t$redbean = $toolbox->getRedBean();\n   39  \t\t$pdo     = $adapter->getDatabase();\n   40  \t\t$book = R::dispense( 'book' );\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Sqlite\\Setget.php:\n    4  \n    5  use RedUNIT\\Sqlite as Sqlite;\n    6: use RedBeanPHP\\Facade as R;\n    7  \n    8  /**\n    .\n   10   *\n   11   * This class has been designed to test set/get operations\n   12:  * for a specific Query Writer / Adapter. Since RedBeanPHP\n   13   * creates columns based on values it's essential that you\n   14   * get back the 'same' value as you put in - or - if that's\n   ..\n   25   * @file    RedUNIT/Sqlite/Setget.php\n   26   * @desc    Tests whether values are stored correctly.\n   27:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   28   * @license New BSD/GPLv2\n   29   *\n   30:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   31   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   32   * with this source code in the file license.txt.\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\testing\\RedUNIT\\Sqlite\\Writer.php:\n    4  \n    5  use RedUNIT\\Sqlite as Sqlite;\n    6: use RedBeanPHP\\Facade as R;\n    7: use RedBeanPHP\\AssociationManager as AssociationManager;\n    8: use RedBeanPHP\\QueryWriter\\SQLiteT as SQLiteT;\n    9: use RedBeanPHP\\RedException\\SQL as SQL;\n   10: use RedBeanPHP\\RedException as RedException;\n   11: use RedBeanPHP\\QueryWriter\\AQueryWriter;\n   12  /**\n   13   * Writer\n   ..\n   20   * @file    RedUNIT/Sqlite/Writer.php\n   21   * @desc    Tests writer specific functions.\n   22:  * @author  Gabor de Mooij and the RedBeanPHP Community\n   23   * @license New BSD/GPLv2\n   24   *\n   25:  * (c) G.J.G.T. (Gabor) de Mooij and the RedBeanPHP Community.\n   26   * This source file is subject to the New BSD/GPLv2 License that is bundled\n   27   * with this source code in the file license.txt.\n   ..\n  192  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  193  \t\t$writer  = $toolbox->getWriter();\n  194: \t\t$redbean = $toolbox->getRedBean();\n  195  \t\t$pdo     = $adapter->getDatabase();\n  196  \t\t$a = new AssociationManager( $toolbox );\n  ...\n  247  \t\ttestpack( \"Zero issue\" );\n  248  \t\t$toolbox = R::getToolBox();\n  249: \t\t$redbean = $toolbox->getRedBean();\n  250: \t\t$bean = $redbean->dispense( \"zero\" );\n  251  \t\t$bean->zero  = FALSE;\n  252  \t\t$bean->title = \"bla\";\n  253: \t\t$redbean->store( $bean );\n  254: \t\tasrt( count( $redbean->find( \"zero\", array(), \" zero = 0 \" ) ), 1 );\n  255  \t\ttestpack( \"Test ANSI92 issue in clearrelations\" );\n  256: \t\t$redbean = $toolbox->getRedBean();\n  257  \t\t$a = new AssociationManager( $toolbox );\n  258: \t\t$book    = $redbean->dispense( \"book\" );\n  259: \t\t$author1 = $redbean->dispense( \"author\" );\n  260: \t\t$author2 = $redbean->dispense( \"author\" );\n  261  \t\t$book->title = \"My First Post\";\n  262  \t\t$author1->name = \"Derek\";\n  ...\n  278  \t{\n  279  \t\t$toolbox = R::getToolBox();\n  280: \t\t$redbean = $toolbox->getRedBean();\n  281  \t\t$adapter = $toolbox->getDatabaseAdapter();\n  282  \t\t$a = new AssociationManager( $toolbox );\n  283: \t\t$book    = $redbean->dispense( \"book\" );\n  284: \t\t$author1 = $redbean->dispense( \"author\" );\n  285: \t\t$author2 = $redbean->dispense( \"author\" );\n  286  \t\t$book->title = \"My First Post\";\n  287  \t\t$author1->name = \"Derek\";\n  ...\n  291  \t\tpass();\n  292  \t\ttestpack( \"Test Association Issue Group keyword (Issues 9 and 10)\" );\n  293: \t\t$group       = $redbean->dispense( \"group\" );\n  294  \t\t$group->name = \"mygroup\";\n  295: \t\t$redbean->store( $group );\n  296  \t\ttry {\n  297  \t\t\t$a->associate( $group, $book );\n  ...\n  322  \t{\n  323  \t\t$toolbox = R::getToolBox();\n  324: \t\t$redbean = $toolbox->getRedBean();\n  325  \t\t$a = new AssociationManager( $toolbox );\n  326: \t\t$book    = $redbean->dispense( \"book\" );\n  327: \t\t$author1 = $redbean->dispense( \"author\" );\n  328: \t\t$author2 = $redbean->dispense( \"author\" );\n  329  \t\t$book->title = \"My First Post\";\n  330  \t\t$author1->name = \"Derek\";\n  ...\n  333  \t\t$a->unassociate( $book, $author2 );\n  334  \t\tpass();\n  335: \t\t$redbean->trash( $redbean->dispense( \"bla\" ) );\n  336  \t\tpass();\n  337: \t\t$bean = $redbean->dispense( \"bla\" );\n  338  \t\t$bean->name = 1;\n  339  \t\t$bean->id   = 2;\n  340: \t\t$redbean->trash( $bean );\n  341  \t\tpass();\n  342  \t}\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\twbs\\bootstrap\\js\\tests\\visual\\tooltip.html:\n   71          <hr>\n   72          <div class=\"h4\">Test Selector triggered tooltips</div>\n   73:         <div id=\"wrapperTriggeredBySelector\">\n   74            <div class=\"py-2 selectorButtonsBlock\">\n   75              <button type=\"button\" class=\"btn btn-secondary bs-dynamic-tooltip\" title=\"random title\">Using title</button>\n   ..\n  120        /* global bootstrap: false */\n  121  \n  122:       new bootstrap.Tooltip('#wrapperTriggeredBySelector', {\n  123          animation: false,\n  124          selector: '.bs-dynamic-tooltip'\n  ...\n  130          const buttonsBlockClone = buttonsBlock.cloneNode(true)\n  131          buttonsBlockClone.innerHTML += new Date().toLocaleString()\n  132:         document.querySelector('#wrapperTriggeredBySelector').append(buttonsBlockClone)\n  133        }\n  134        /* eslint-enable no-unused-vars */\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\twbs\\bootstrap\\site\\assets\\scss\\_ads.scss:\n   32  }\n   33  \n   34: .carbon-poweredby {\n   35    display: block;\n   36    margin-top: .75rem;\n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\twbs\\bootstrap-icons\\docs\\assets\\scss\\_ads.scss:\n   29  \n   30  .carbon-text,\n   31: .carbon-poweredby {\n   32    display: block;\n   33    color: var(--bs-body-color);\n   ..\n   49  }\n   50  \n   51: .carbon-poweredby {\n   52    margin-top: .75rem;\n   53    font-size: .875rem;\n\n1980 matches across 178 files\n\n\nSearching 5675 files for \"redbea\"\n\nC:\\OSPanel\\domains\\antCMS.os\\admin\\core\\bootstrap.php:\n   11  // composer require smarty/smarty\n   12  // composer require twbs/bootstrap-icons\n   13: // composer require gabordemooij/redbean\n   14  \n   15  \n\nC:\\OSPanel\\domains\\antCMS.os\\admin\\log\\q\\php.php:\n   94  showSubSmartyOutput($DPT_SUB);\n   95  \n   96: use RedBeanPHP\\R;\n   97  R::setup('mysql:host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USER, DB_PASS);\n   98  \n\nC:\\OSPanel\\domains\\antCMS.os\\vendor\\gabordemooij\\redbean\\RedBeanPHP\\license.txt:\n    1  \n    2: RedBeanPHP \n    3  Written by Gabor de Mooij\n    4  \n    5: RedBean is DUAL Licensed New BSD and GPLv2. You may choose the license that fits\n    6  best for your project.\n    7  \n    .\n   15  notice, this list of conditions and the following disclaimer in the\n   16  documentation and/or other materials provided with the distribution.\n   17: * Neither the name of RedBeanPHP nor the\n   18  names of its contributors may be used to endorse or promote products\n   19  derived from this software without specific prior written permission.\n   ..\n   31  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   32  \n   33: RedBeanPHP is Written by Gabor de Mooij (G.J.G.T de Mooij) Copyright (c) 2018.\n   34  \n   35  \n\n6 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 282226,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "admin/core/bootstrap.php",
			"settings":
			{
				"buffer_size": 5944,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert_snippet",
					{
						"contents": "\n${TM_CURRENT_LINE/^\\s*((?:#|\\/\\/[\\/!]?)\\s*).*/$1/}"
					},
					"AQAAAJYBAAAAAAAAmgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAJoBAAAAAAAAvgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "admin/js/dt/standartDataTable.js",
			"settings":
			{
				"buffer_size": 7886,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYZAAAAAAAAxxkAAAAAAAAAAAAAxxkAAAAAAADLGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhkAAAAAAADGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAPkZAAAAAAAA+hkAAAAAAAAAAAAA+hkAAAAAAAD+GQAAAAAAAAAAAADHGQAAAAAAAMcZAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAA+RkAAAAAAAD5GQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CQAAAHwZAAAAAAAAfRkAAAAAAAAAAAAAfRkAAAAAAACBGQAAAAAAAAAAAAD7GQAAAAAAAPsZAAAAAAAABAAAACAgICCBGQAAAAAAAIIZAAAAAAAAAAAAAIIZAAAAAAAAhhkAAAAAAAAAAAAAfRkAAAAAAAB9GQAAAAAAAAQAAAAgICAgghkAAAAAAACDGQAAAAAAAAAAAACDGQAAAAAAAIcZAAAAAAAAAAAAAH4ZAAAAAAAAfhkAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAfBkAAAAAAAB8GQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"paste",
					null,
					"AQAAAH4ZAAAAAAAAfxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhkAAAAAAAB+GQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAAH8ZAAAAAAAAsRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxkAAAAAAAB/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AgAAALAZAAAAAAAAsBkAAAAAAAABAAAALLEZAAAAAAAAsRkAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAsRkAAAAAAACxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALAZAAAAAAAAsRkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBkAAAAAAACwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "сщтыщду"
					},
					"CAAAAH8ZAAAAAAAAgBkAAAAAAAAAAAAAgBkAAAAAAACAGQAAAAAAABkAAABkdERlZmF1bHRDYWxsYmFja0Z1bmN0aW9ugBkAAAAAAACBGQAAAAAAAAAAAACBGQAAAAAAAIIZAAAAAAAAAAAAAIIZAAAAAAAAgxkAAAAAAAAAAAAAgxkAAAAAAACEGQAAAAAAAAAAAACEGQAAAAAAAIUZAAAAAAAAAAAAAIUZAAAAAAAAhhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxkAAAAAAACYGQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "юдщп"
					},
					"BAAAAIYZAAAAAAAAhxkAAAAAAAAAAAAAhxkAAAAAAACIGQAAAAAAAAAAAACIGQAAAAAAAIkZAAAAAAAAAAAAAIkZAAAAAAAAihkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhkAAAAAAACGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					11,
					"left_delete",
					null,
					"CwAAAIkZAAAAAAAAiRkAAAAAAAACAAAA0L+IGQAAAAAAAIgZAAAAAAAAAgAAANGJhxkAAAAAAACHGQAAAAAAAAIAAADQtIYZAAAAAAAAhhkAAAAAAAACAAAA0Y6FGQAAAAAAAIUZAAAAAAAAAgAAANGDhBkAAAAAAACEGQAAAAAAAAIAAADQtIMZAAAAAAAAgxkAAAAAAAACAAAA0YmCGQAAAAAAAIIZAAAAAAAAAgAAANGLgRkAAAAAAACBGQAAAAAAAAIAAADRgoAZAAAAAAAAgBkAAAAAAAACAAAA0Yl/GQAAAAAAAH8ZAAAAAAAAAgAAANGB",
					"AQAAAAAAAAABAAAAihkAAAAAAACKGQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAAH8ZAAAAAAAAgBkAAAAAAAAAAAAAgBkAAAAAAACBGQAAAAAAAAAAAACBGQAAAAAAAIIZAAAAAAAAAAAAAIIZAAAAAAAAgxkAAAAAAAAAAAAAgxkAAAAAAACEGQAAAAAAAAAAAACEGQAAAAAAAIUZAAAAAAAAAAAAAIUZAAAAAAAAhhkAAAAAAAAAAAAAhhkAAAAAAACHGQAAAAAAAAAAAACHGQAAAAAAAIgZAAAAAAAAAAAAAIgZAAAAAAAAiRkAAAAAAAAAAAAAiRkAAAAAAACKGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxkAAAAAAAB/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAJYZAAAAAAAAlxkAAAAAAAAAAAAAlxkAAAAAAACYGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhkAAAAAAACWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKQZAAAAAAAAphkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApBkAAAAAAACkGQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"",
					null,
					"AQAAAJYZAAAAAAAAmxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxoAAAAAAAAUGgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"",
					null,
					"AQAAAKkZAAAAAAAArhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhkAAAAAAACbGQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"duplicate_line",
					null,
					"AQAAALIZAAAAAAAA5RkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRkAAAAAAACxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"right_delete",
					null,
					"AQAAAJ0ZAAAAAAAAnRkAAAAAAAATAAAALCB1cGRhdGVkUm93LmRhdGEoKQ",
					"AQAAAAAAAAABAAAAnRkAAAAAAACwGQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "info"
					},
					"BQAAAKcZAAAAAAAAqBkAAAAAAAAAAAAAqBkAAAAAAACoGQAAAAAAAAMAAABsb2eoGQAAAAAAAKkZAAAAAAAAAAAAAKkZAAAAAAAAqhkAAAAAAAAAAAAAqhkAAAAAAACrGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxkAAAAAAACqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"right_delete",
					null,
					"AQAAAKwZAAAAAAAArBkAAAAAAAAUAAAAdXBkYXRlZENlbGwuZGF0YSgpLCA",
					"AQAAAAAAAAABAAAAwBkAAAAAAACsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ0ZAAAAAAAAnhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRkAAAAAAACdGQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"paste",
					null,
					"AQAAAJ4ZAAAAAAAAqhkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhkAAAAAAACeGQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "\n\nду"
					},
					"BAAAAMsZAAAAAAAAzBkAAAAAAAAAAAAAzBkAAAAAAADNGQAAAAAAAAAAAADNGQAAAAAAAM4ZAAAAAAAAAAAAAM4ZAAAAAAAAzxkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxkAAAAAAADLGQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "е"
					},
					"AQAAAM8ZAAAAAAAA0BkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxkAAAAAAADPGQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANAZAAAAAAAA0RkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BkAAAAAAADQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					4,
					"left_delete",
					null,
					"BAAAANAZAAAAAAAA0BkAAAAAAAABAAAAIM8ZAAAAAAAAzxkAAAAAAAACAAAA0LXOGQAAAAAAAM4ZAAAAAAAAAgAAANGDzRkAAAAAAADNGQAAAAAAAAIAAADQtA",
					"AQAAAAAAAAABAAAA0RkAAAAAAADRGQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAM0ZAAAAAAAAzhkAAAAAAAAAAAAAzhkAAAAAAADPGQAAAAAAAAAAAADPGQAAAAAAANAZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzRkAAAAAAADNGQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANAZAAAAAAAA0RkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BkAAAAAAADQGQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAANEZAAAAAAAA0hkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RkAAAAAAADRGQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "ow"
					},
					"AgAAANIZAAAAAAAA0xkAAAAAAAAAAAAA0xkAAAAAAADUGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0hkAAAAAAADSGQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAANQZAAAAAAAA1RkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BkAAAAAAADUGQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"paste",
					null,
					"AQAAANUZAAAAAAAA5hkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RkAAAAAAADVGQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOYZAAAAAAAA5xkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hkAAAAAAADmGQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BAAAAOcZAAAAAAAA6BkAAAAAAAAAAAAA6BkAAAAAAADpGQAAAAAAAAAAAADpGQAAAAAAAOoZAAAAAAAAAAAAAOoZAAAAAAAA6xkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xkAAAAAAADnGQAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsZAAAAAAAA7BkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xkAAAAAAADrGQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "field"
					},
					"BQAAAOwZAAAAAAAA7RkAAAAAAAAAAAAA7RkAAAAAAADuGQAAAAAAAAAAAADuGQAAAAAAAO8ZAAAAAAAAAAAAAO8ZAAAAAAAA8BkAAAAAAAAAAAAA8BkAAAAAAADxGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BkAAAAAAADsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAPEZAAAAAAAA8hkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RkAAAAAAADxGQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPIZAAAAAAAA8xkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hkAAAAAAADyGQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"paste",
					null,
					"AQAAAPMZAAAAAAAA9hkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8xkAAAAAAADzGQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAPYZAAAAAAAA9xkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hkAAAAAAAD2GQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"left_delete",
					null,
					"AQAAAPYZAAAAAAAA9hkAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAA9xkAAAAAAAD3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPYZAAAAAAAA+BkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hkAAAAAAAD2GQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPcZAAAAAAAA+RkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xkAAAAAAAD3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAPcZAAAAAAAA9xkAAAAAAAABAAAAIvcZAAAAAAAA9xkAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA+BkAAAAAAAD4GQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "col"
					},
					"AwAAAPcZAAAAAAAA+BkAAAAAAAAAAAAA+BkAAAAAAAD5GQAAAAAAAAAAAAD5GQAAAAAAAPoZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xkAAAAAAAD3GQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAPoZAAAAAAAA+xkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hkAAAAAAAD6GQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert_completion",
					{
						"completion": "columnIndex",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "columnIndex"
					},
					"AgAAAPcZAAAAAAAA9xkAAAAAAAAEAAAAY29sdfcZAAAAAAAAAhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xkAAAAAAAD7GQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAMaAAAAAAAABBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxoAAAAAAAADGgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAUaAAAAAAAABhoAAAAAAAAAAAAABhoAAAAAAAAHGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRoAAAAAAAAFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"paste",
					null,
					"AQAAAAYaAAAAAAAAMhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhoAAAAAAAAGGgAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"paste",
					null,
					"AgAAABIaAAAAAAAAFRoAAAAAAAAAAAAAFRoAAAAAAAAVGgAAAAAAABIAAAB1cGRhdGVkQ2VsbC5kYXRhKCk",
					"AQAAAAAAAAABAAAAEhoAAAAAAAAkGgAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACIaAAAAAAAAIxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhoAAAAAAAAiGgAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"paste",
					null,
					"AQAAACMaAAAAAAAAKBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIxoAAAAAAAAjGgAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAQaAAAAAAAABRoAAAAAAAAAAAAABRoAAAAAAAAGGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBoAAAAAAAAEGgAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"paste",
					null,
					"AQAAAAYaAAAAAAAAExoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhoAAAAAAAAGGgAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "дуе"
					},
					"AwAAAAYaAAAAAAAABxoAAAAAAAAAAAAABxoAAAAAAAAIGgAAAAAAAAAAAAAIGgAAAAAAAAkaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhoAAAAAAAAGGgAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAkaAAAAAAAAChoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRoAAAAAAAAJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					4,
					"left_delete",
					null,
					"BAAAAAkaAAAAAAAACRoAAAAAAAABAAAAIAgaAAAAAAAACBoAAAAAAAACAAAA0LUHGgAAAAAAAAcaAAAAAAAAAgAAANGDBhoAAAAAAAAGGgAAAAAAAAIAAADQtA",
					"AQAAAAAAAAABAAAAChoAAAAAAAAKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAAYaAAAAAAAABxoAAAAAAAAAAAAABxoAAAAAAAAIGgAAAAAAAAAAAAAIGgAAAAAAAAkaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhoAAAAAAAAGGgAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " keys"
					},
					"BQAAAAkaAAAAAAAAChoAAAAAAAAAAAAAChoAAAAAAAALGgAAAAAAAAAAAAALGgAAAAAAAAwaAAAAAAAAAAAAAAwaAAAAAAAADRoAAAAAAAAAAAAADRoAAAAAAAAOGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACRoAAAAAAAAJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAA4aAAAAAAAADxoAAAAAAAAAAAAADxoAAAAAAAAQGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhoAAAAAAAAOGgAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABAaAAAAAAAAERoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBoAAAAAAAAQGgAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"paste",
					null,
					"AQAAAB0aAAAAAAAAIBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHRoAAAAAAAAdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"paste",
					null,
					"AQAAADMaAAAAAAAANxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxoAAAAAAAAzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADcaAAAAAAAAOBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANxoAAAAAAAA3GgAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAAKwZAAAAAAAArxkAAAAAAAAAAAAAfxkAAAAAAACCGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxkAAAAAAAB/GQAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACcaAAAAAAAAKBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJxoAAAAAAAAnGgAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "\nle"
					},
					"AwAAACgaAAAAAAAAKRoAAAAAAAAAAAAAKRoAAAAAAAAqGgAAAAAAAAAAAAAqGgAAAAAAACsaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBoAAAAAAAAoGgAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAACsaAAAAAAAALBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKxoAAAAAAAArGgAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": " my"
					},
					"AwAAACwaAAAAAAAALRoAAAAAAAAAAAAALRoAAAAAAAAuGgAAAAAAAAAAAAAuGgAAAAAAAC8aAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBoAAAAAAAAsGgAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "Key="
					},
					"BAAAAC8aAAAAAAAAMBoAAAAAAAAAAAAAMBoAAAAAAAAxGgAAAAAAAAAAAAAxGgAAAAAAADIaAAAAAAAAAAAAADIaAAAAAAAAMxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxoAAAAAAAAvGgAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": " kr"
					},
					"AwAAADMaAAAAAAAANBoAAAAAAAAAAAAANBoAAAAAAAA1GgAAAAAAAAAAAAA1GgAAAAAAADYaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxoAAAAAAAAzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAADYaAAAAAAAANxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhoAAAAAAAA2GgAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					2,
					"left_delete",
					null,
					"AgAAADYaAAAAAAAANhoAAAAAAAABAAAAeTUaAAAAAAAANRoAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAANxoAAAAAAAA3GgAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "eys"
					},
					"AwAAADUaAAAAAAAANhoAAAAAAAAAAAAANhoAAAAAAAA3GgAAAAAAAAAAAAA3GgAAAAAAADgaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANRoAAAAAAAA1GgAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAADgaAAAAAAAAOhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOBoAAAAAAAA4GgAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"paste",
					null,
					"AgAAADgaAAAAAAAARRoAAAAAAAAAAAAARRoAAAAAAABFGgAAAAAAAAIAAABbXQ",
					"AQAAAAAAAAABAAAAOBoAAAAAAAA6GgAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEUaAAAAAAAARhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARRoAAAAAAABFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"paste",
					null,
					"AgAAAOAaAAAAAAAA5RoAAAAAAAAAAAAA5RoAAAAAAADlGgAAAAAAAAkAAABjb21wYW55SUQ",
					"AQAAAAAAAAABAAAA4BoAAAAAAADpGgAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG8aAAAAAAAAcBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxoAAAAAAABvGgAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"paste",
					null,
					"AQAAAHAaAAAAAAAAdRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBoAAAAAAABwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"duplicate_line",
					null,
					"AQAAALAbAAAAAAAA1BsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxsAAAAAAACvGwAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"paste",
					null,
					"BAAAAMcbAAAAAAAAzBsAAAAAAAAAAAAAzBsAAAAAAADMGwAAAAAAAAsAAABjb2x1bW5JbmRleLkbAAAAAAAAvhsAAAAAAAAAAAAAvhsAAAAAAAC+GwAAAAAAAAsAAABjb2x1bW5JbmRleA",
					"AQAAAAAAAAACAAAAuRsAAAAAAADEGwAAAAAAAAAAAAAAAPC/xxsAAAAAAADSGwAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"duplicate_line",
					null,
					"AQAAAO0aAAAAAAAAFxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BoAAAAAAADsGgAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAMcaAAAAAAAAyhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BoAAAAAAADsGgAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "кщц"
					},
					"BAAAAAEbAAAAAAAAAhsAAAAAAAAAAAAAAhsAAAAAAAACGwAAAAAAABEAAAB1cGRhdGVkUm93LmRhdGEoKQIbAAAAAAAAAxsAAAAAAAAAAAAAAxsAAAAAAAAEGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARsAAAAAAAASGwAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					3,
					"left_delete",
					null,
					"AwAAAAMbAAAAAAAAAxsAAAAAAAACAAAA0YYCGwAAAAAAAAIbAAAAAAAAAgAAANGJARsAAAAAAAABGwAAAAAAAAIAAADQug",
					"AQAAAAAAAAABAAAABBsAAAAAAAAEGwAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "row"
					},
					"AwAAAAEbAAAAAAAAAhsAAAAAAAAAAAAAAhsAAAAAAAADGwAAAAAAAAAAAAADGwAAAAAAAAQbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARsAAAAAAAABGwAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"left_delete",
					null,
					"AQAAAAQbAAAAAAAABBsAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAABRsAAAAAAAAFGwAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAAQbAAAAAAAABRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBsAAAAAAAAEGwAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAAobAAAAAAAACxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChsAAAAAAAAKGwAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"duplicate_line",
					null,
					"AQAAAEcaAAAAAAAAZRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARhoAAAAAAABGGgAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "prim"
					},
					"BQAAAEsaAAAAAAAATBoAAAAAAAAAAAAATBoAAAAAAABMGgAAAAAAAAIAAABteUwaAAAAAAAATRoAAAAAAAAAAAAATRoAAAAAAABOGgAAAAAAAAAAAABOGgAAAAAAAE8aAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASxoAAAAAAABNGgAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "ary"
					},
					"AwAAAE8aAAAAAAAAUBoAAAAAAAAAAAAAUBoAAAAAAABRGgAAAAAAAAAAAABRGgAAAAAAAFIaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATxoAAAAAAABPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAFwaAAAAAAAAXRoAAAAAAAAAAAAAXRoAAAAAAABdGgAAAAAAAAsAAABjb2x1bW5JbmRleA",
					"AQAAAAAAAAABAAAAXBoAAAAAAABnGgAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"paste",
					null,
					"AgAAAB4bAAAAAAAAKBsAAAAAAAAAAAAAKBsAAAAAAAAoGwAAAAAAAAUAAABteUtleQ",
					"AQAAAAAAAAABAAAAHhsAAAAAAAAjGwAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"duplicate_line",
					null,
					"AQAAAAYcAAAAAAAAHhwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRwAAAAAAAAFHAAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"paste",
					null,
					"BAAAABccAAAAAAAAIRwAAAAAAAAAAAAAIRwAAAAAAAAhHAAAAAAAAAUAAABteUtleQ8cAAAAAAAAGRwAAAAAAAAAAAAAGRwAAAAAAAAZHAAAAAAAAAUAAABteUtleQ",
					"AQAAAAAAAAACAAAADxwAAAAAAAAUHAAAAAAAAAAAAAAAAPC/FxwAAAAAAAAcHAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "admin/core/includes/conf_columns.php",
			"settings":
			{
				"buffer_size": 8672,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "admin/admin.php",
			"settings":
			{
				"buffer_size": 6540,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					3,
					"right_delete",
					null,
					"AwAAAGIZAAAAAAAAYhkAAAAAAACAAQAALy8gJGJvb2sgPSBSOjpkaXNwZW5zZSgiYW50X2NvbXBhbmllcyIpOwovLyBkZCgkYm9vayk7CgovLyAkcG9zdCAgICAgICAgICAgID0gUjo6eGRpc3BlbnNlKCdhbnRfaXBwb3N0Jyk7Ci8vICRwb3N0LT50aW1lU3RhbXAgPSBhZGRzbGFzaGVzKHRpbWUoKSk7Ci8vICRwb3N0LT50aXRsZSAgICAgPSAnTXkgYW50YU5UINCv0LrQvtCR0YsgSVAnOwovLyAkcG9zdC0+aXAgICAgICAgID0gYWRkc2xhc2hlcyhzdEdldEN1c3RvbWVySVBfQWRkcmVzcygpKTsKLy8gJGlkICAgICAgICAgICAgICA9IFI6OnN0b3JlKCRwb3N0KTsKCi8vICR0ID0gUjo6Z2V0QWxsKCdTRUxFQ1QgKiBGUk9NIGFudF9pcHBvc3Qgd2hlcmUgdGltZV9TdGFtcCBMaWtlICIlNyUiOycpOwoKLy8gZCgkdCk7YhkAAAAAAABiGQAAAAAAAAEAAAAKYhkAAAAAAABiGQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA3RoAAAAAAABiGQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "admin/core/includes/default_dpt.php",
			"settings":
			{
				"buffer_size": 3978,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					64,
					10,
					"insert_snippet",
					{
						"contents": "\n${TM_CURRENT_LINE/^\\s*((?:#|\\/\\/[\\/!]?)\\s*).*/$1/}"
					},
					"CgAAAJMOAAAAAAAAow4AAAAAAAAAAAAAow4AAAAAAACzDgAAAAAAAAAAAACzDgAAAAAAAMMOAAAAAAAAAAAAAMMOAAAAAAAA0w4AAAAAAAAAAAAA0w4AAAAAAADjDgAAAAAAAAAAAADjDgAAAAAAAPMOAAAAAAAAAAAAAPMOAAAAAAAAAw8AAAAAAAAAAAAAAw8AAAAAAAATDwAAAAAAAAAAAAATDwAAAAAAACMPAAAAAAAAAAAAACMPAAAAAAAAMw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkw4AAAAAAACTDgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"right_delete",
					null,
					"AQAAAJQOAAAAAAAAlA4AAAAAAACfAAAAICAgICAgICAgICAgLy8gCiAgICAgICAgICAgIC8vIAogICAgICAgICAgICAvLyAKICAgICAgICAgICAgLy8gCiAgICAgICAgICAgIC8vIAogICAgICAgICAgICAvLyAKICAgICAgICAgICAgLy8gCiAgICAgICAgICAgIC8vIAogICAgICAgICAgICAvLyAKICAgICAgICAgICAgLy8g",
					"AQAAAAAAAAABAAAAMw8AAAAAAACUDgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					3,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line Before.sublime-macro"
					},
					"BwAAAJQOAAAAAAAAlQ4AAAAAAAAAAAAAlA4AAAAAAACgDgAAAAAAAAAAAACUDgAAAAAAAJUOAAAAAAAAAAAAAJQOAAAAAAAAoA4AAAAAAAAAAAAAlA4AAAAAAACVDgAAAAAAAAAAAACiDgAAAAAAAKIOAAAAAAAADAAAACAgICAgICAgICAgIJQOAAAAAAAAoA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlA4AAAAAAACUDgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"paste",
					null,
					"AQAAAK0OAAAAAAAA8A4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQ4AAAAAAACtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"paste",
					null,
					"AgAAAMMOAAAAAAAAyw4AAAAAAAAAAAAAyw4AAAAAAADLDgAAAAAAAA0AAABBTlRfUkJDT0xVTU5T",
					"AQAAAAAAAAABAAAAww4AAAAAAADQDgAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"paste",
					null,
					"AQAAAKAOAAAAAAAApg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoA4AAAAAAACgDgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAKYOAAAAAAAApw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApg4AAAAAAACmDgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAKcOAAAAAAAAqQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApw4AAAAAAACnDgAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKkOAAAAAAAAqg4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQ4AAAAAAACpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAKgOAAAAAAAAqQ4AAAAAAAAAAAAAqQ4AAAAAAAC1DgAAAAAAAAAAAAC1DgAAAAAAALYOAAAAAAAAAAAAALYOAAAAAAAAwg4AAAAAAAAAAAAAqQ4AAAAAAACpDgAAAAAAAAwAAAAgICAgICAgICAgICC2DgAAAAAAALcOAAAAAAAAAAAAALcOAAAAAAAAww4AAAAAAAAAAAAAqg4AAAAAAACqDgAAAAAAAAwAAAAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAqA4AAAAAAACoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"paste_and_indent",
					null,
					"AQAAAKkOAAAAAAAA/g4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQ4AAAAAAACpDgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"paste",
					null,
					"AgAAALoOAAAAAAAAwA4AAAAAAAAAAAAAwA4AAAAAAADADgAAAAAAAAsAAABjb25maWdfbmFtZQ",
					"AQAAAAAAAAABAAAAug4AAAAAAADFDgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"paste",
					null,
					"AgAAAMYOAAAAAAAAzA4AAAAAAAAAAAAAzA4AAAAAAADMDgAAAAAAAAsAAABjb25maWdfbmFtZQ",
					"AQAAAAAAAAABAAAAxg4AAAAAAADRDgAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"right_delete",
					null,
					"AQAAALkOAAAAAAAAuQ4AAAAAAAAIAAAAJ2VkaXRJRCc",
					"AQAAAAAAAAABAAAAuQ4AAAAAAADBDgAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAALkOAAAAAAAAuw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQ4AAAAAAAC5DgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"paste",
					null,
					"AQAAALoOAAAAAAAAxQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAug4AAAAAAAC6DgAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAALoOAAAAAAAAug4AAAAAAAALAAAAJHByaW1hcnlLZXm6DgAAAAAAAMcOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQ4AAAAAAAC6DgAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"right_delete",
					null,
					"AQAAAOUOAAAAAAAA5Q4AAAAAAAAHAAAAJ2RhdGEnIA",
					"AQAAAAAAAAABAAAA5Q4AAAAAAADsDgAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAOYOAAAAAAAA6A4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5g4AAAAAAADmDgAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"paste",
					null,
					"AQAAAOcOAAAAAAAA9g4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5w4AAAAAAADnDgAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"right_delete",
					null,
					"AQAAAOUOAAAAAAAA5Q4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5Q4AAAAAAADlDgAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					5,
					"right_delete",
					null,
					"BQAAAPYOAAAAAAAA9g4AAAAAAAABAAAAIPYOAAAAAAAA9g4AAAAAAAABAAAAIPYOAAAAAAAA9g4AAAAAAAABAAAAIPYOAAAAAAAA9g4AAAAAAAABAAAAIPYOAAAAAAAA9g4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA9g4AAAAAAAD2DgAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"paste",
					null,
					"AgAAAPsOAAAAAAAAAw8AAAAAAAAAAAAAAw8AAAAAAAADDwAAAAAAAAMAAABrZXk",
					"AQAAAAAAAAABAAAA+w4AAAAAAAD+DgAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"code_formatter",
					null,
					"AQAAAAAAAAAAAAAAbRIAAAAAAAC+EgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IGFycmF5KCk7CgppZiAoIWlzX251bGwoJHRhYmxlX25hbWUpKQp7CiAgICAkZGJUYWJsZUZpZWxkcyAgICAgPSBkYl9nZXRDb2x1bW5OYW1lcygkdGFibGVfbmFtZSk7CiAgICAkZGJUYWJsZUZpZWxkTmFtZXMgPSBhcnJheV9rZXlzKCRkYlRhYmxlRmllbGRzKTsgLy8g0LLRi9Cy0L7QtNC40Lwg0LIg0LvQvtCz0LMg0LLRgdC1INC90LDQt9Cy0LDQvdC40Y8g0L/QvtC70LXQuQogICAgJHNtYXJ0eS0+YXNzaWduKCdkYlRhYmxlRmllbGRzJywgJGRiVGFibGVGaWVsZHMpOwogICAgJHNtYXJ0eS0+YXNzaWduKCdkYlRhYmxlRmllbGROYW1lcycsICRkYlRhYmxlRmllbGROYW1lcyk7CgogICAgaWYgKCFpc19udWxsKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgIHsKICAgICAgICBpZiAoZmlsZV9leGlzdHMoJGNvbHVtbnNKc29uRmlsZU5hbWUpKQogICAgICAgIHsKICAgICAgICAgICAgJGpzb25Db2x1bW5zICA9IGZpbGVfZ2V0X2NvbnRlbnRzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKTsKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdkYXRhdGFibGVzIGNvbHVtbnMgbG9hZGVkIGZyb206ICcgLiAkY29sdW1uc0pzb25GaWxlTmFtZSAuICcnOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICAvLyBkKCdOTyBGSUxFJyk7CiAgICAgICAgICAgICRkdENvbHVtbkZpZWxkTmFtZXMgPSAkZGJUYWJsZUZpZWxkTmFtZXM7CgogICAgICAgICAgICAkanNvbkNvbHVtbnMgICAgICAgPSBleHBvcnRDb2x1bW5zVG9Kc29uKCRkdENvbHVtbkZpZWxkTmFtZXMsICRsaW1pdCA9IDQpOwogICAgICAgICAgICAkaXNTYXZlZCAgICAgICAgICAgPSBmaWxlX3B1dF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSwgJGpzb25Db2x1bW5zKTsKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSAgICAgID0gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnIElzIHNhdmVkIHNpemU6ICcgLiBmb3JtYXRfc2l6ZSgoaW50KSAkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBhcnJheSgpOwogICAgICAgIH0KCiAgICAgICAgaGVhZGVyKCdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnKTsKICAgICAgICBleGl0KGpzb25fZW5jb2RlKCRzc3BfcmVzdWx0KSk7CiAgICB9CgojIyMjIyMjIyMjIyMjIyMjCiAgICAjIyMjIyMjIyMjIyMjIyMjCiAgICBpZiAoJF9HRVRbJ29wZXJhdGlvbiddID09PSAnZWRpdENlbGwnKQogICAgewogICAgICAgIGdsb2JhbCAkcGRvX2Nvbm5lY3Q7CgogICAgICAgICREQVRBICAgPSBqc29uX2RlY29kZShmaWxlX2dldF9jb250ZW50cygncGhwOi8vaW5wdXQnKSwgdHJ1ZSwgSlNPTl9CSUdJTlRfQVNfU1RSSU5HIHwgSlNPTl9JTlZBTElEX1VURjhfSUdOT1JFKTsKICAgICAgICAkcmVzdWx0ID0gZmFsc2U7CgogICAgICAgICRjb2x1bW5JbmRleCA9ICREQVRBWydjb2x1bW5JbmRleCddOwogICAgICAgICRuZXdWYWx1ZSAgICA9ICREQVRBWyduZXdWYWx1ZSddOwogICAgICAgICRlZGl0SUQgICAgICA9ICREQVRBWydlZGl0SUQnXTsKCiAgICAgICAgJENvbHVtbiA9IGFycmF5KAogICAgICAgICAgICAnaW5kZXgnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kZXgnXSwKICAgICAgICAgICAgJ2RhdGEnICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2RhdGEnXSwKICAgICAgICAgICAgJ2RiJyAgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2RiJ10sCiAgICAgICAgICAgICdkdCcgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkdCddCiAgICAgICAgKTsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vICRlZGl0ZWRJRD0kX1BPU1RbJ3VwZGF0ZWRDZWxsJ11bJ2NvbXBhbnlJRCddOwogICAgICAgICAgICAkc3FsID0gIlVQREFURSBgeyRkYlRhYmxlfWAgU0VUIGB7JENvbHVtblsnZGInXX1gID0gOm5ld1ZhbHVlIFdIRVJFIGB7JHByaW1hcnlLZXl9YD0gOmVkaXRJRDsiOwoKICAgICAgICAgICAgUjo6c2V0dXAoJ215c3FsOmhvc3Q9JyAuIERCX0hPU1QgLiAnO2RibmFtZT0nIC4gREJfTkFNRSwgREJfVVNFUiwgREJfUEFTUyk7CiAgICAgICAgICAgICMjICDRgNCw0YHRiNC40YDQtdC90LjQtSDQtNC70Y8g0YLQsNCx0LvQuNGGINGBIF8g0LIg0LjQvNC10L3QuAogICAgICAgICAgICBSOjpleHQoJ3hkaXNwZW5zZScsIGZ1bmN0aW9uICgkdGFibGVfbmFtZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcmV0dXJuIFI6OmdldFJlZEJlYW4oKS0+ZGlzcGVuc2UoJHRhYmxlX25hbWUpO30pOwoKICAgICAgICAgICAgJHJiICAgID0gUjo6eGRpc3BlbnNlKCRkYlRhYmxlKTsKICAgICAgICAgICAgJGFSb3dzID0gUjo6ZXhlYygkc3FsLCBhcnJheSgnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCkpKTsKICAgICAgICAgICAgLy8gJGFSb3dzID0gUjo6ZXhlYygkc3FsLCBhcnJheSgnOm5ld1ZhbHVlJyA9PiB0cmltKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCkpKTsKCiAgICAgICAgICAgIC8vIGQoJGFSb3dzKTsKICAgICAgICAgICAgJHdoZXJlPVsKICAgICAgICAgICAgICAgICJ7JHByaW1hcnlLZXl9IiA9PiAkZWRpdElELAogICAgICAgICAgICAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgXTsKICAgICAgICAgICAgJHIgICAgICAgPSAkZGItPnRhYmxlKCRkYlRhYmxlKS0+d2hlcmUoJHdoZXJlKS0+dXBkYXRlKCRkYXRhKTsKCgoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKGFycmF5KAogICAgICAgICAgICAncGFnZV9tZXNzYWdlJyA9PiAkcGFnZV9tZXNzYWdlLAogICAgICAgICAgICAndGFibGVfbmFtZScgICA9PiAkZGJUYWJsZSwKICAgICAgICAgICAgJ3ByaW1hcnlLZXknICAgPT4gJHByaW1hcnlLZXksCiAgICAgICAgICAgICdjb2x1bW5JbmRleCcgID0+ICRjb2x1bW5JbmRleCwKICAgICAgICAgICAgJ0NvbHVtbicgICAgICAgPT4gJENvbHVtbiwKICAgICAgICAgICAgJ3NxbCcgICAgICAgICAgPT4gJHNxbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgJ3BocERBVEEnICAgICAgPT4gJERBVEEgLy9hcyBhcnJheQogICAgICAgICkpKTsKICAgIH0KCiMjIyMjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMjIyMjIyMKfQoKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2UnLCAkcGFnZV9tZXNzYWdlKTsKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2VfdHlwZScsICRwYWdlX21lc3NhZ2VfdHlwZSk7CgovLyBkKGFycmF5KAovLyAgICAgJGFkbWluX3BhZ2UsCi8vICAgICAkdGFibGVfbmFtZSwKLy8gICAgICRjb2x1bW5zSnNvbkZpbGVOYW1lLAovLyAgICAgJHRhYmxlX3ByaW1hcnlLZXkKLy8gKSk7Cg",
					"AQAAAAAAAAABAAAAqA4AAAAAAACoDgAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"duplicate_line",
					null,
					"AQAAAAQPAAAAAAAAiQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABA8AAAAAAAB/DgAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAQPAAAAAAAABQ8AAAAAAAAAAAAABQ8AAAAAAAARDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABA8AAAAAAAAEDwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJYPAAAAAAAAlw8AAAAAAAAAAAAAlw8AAAAAAACjDwAAAAAAAAAAAAAFDwAAAAAAAAUPAAAAAAAADAAAACAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAlg8AAAAAAACWDwAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BgAAABMPAAAAAAAAFA8AAAAAAAAAAAAAFA8AAAAAAAAUDwAAAAAAAAUAAAB3aGVyZYcPAAAAAAAAhw8AAAAAAAAMAAAAICAgICAgICAgICAgFA8AAAAAAAAVDwAAAAAAAAAAAAAVDwAAAAAAABYPAAAAAAAAAAAAABYPAAAAAAAAFw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEw8AAAAAAAAYDwAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					2,
					"right_delete",
					null,
					"AgAAABwPAAAAAAAAHA8AAAAAAAAtAAAAICAgICAgICAgICAgICAgICJ7JHByaW1hcnlLZXl9IiAgID0+ICRlZGl0SUQsHA8AAAAAAAAcDwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAASQ8AAAAAAAAcDwAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					3,
					"right_delete",
					null,
					"AwAAAMUOAAAAAAAAxQ4AAAAAAAAvAAAAICAgICAgICAgICAgICAgICJ7JENvbHVtblsnZGInXX0iID0+ICRuZXdWYWx1ZSzFDgAAAAAAAMUOAAAAAAAAAQAAAArFDgAAAAAAAMUOAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAA9A4AAAAAAADFDgAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"code_formatter",
					null,
					"AQAAAAAAAAAAAAAAkhIAAAAAAADKEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmRleCcgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydpbmRleCddLAogICAgICAgICAgICAnZGF0YScgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZGF0YSddLAogICAgICAgICAgICAnZGInICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZGInXSwKICAgICAgICAgICAgJ2R0JyAgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2R0J10sCiAgICAgICAgXTsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vICRlZGl0ZWRJRD0kX1BPU1RbJ3VwZGF0ZWRDZWxsJ11bJ2NvbXBhbnlJRCddOwogICAgICAgICAgICAkc3FsID0gIlVQREFURSBgeyRkYlRhYmxlfWAgU0VUIGB7JENvbHVtblsnZGInXX1gID0gOm5ld1ZhbHVlIFdIRVJFIGB7JHByaW1hcnlLZXl9YD0gOmVkaXRJRDsiOwoKICAgICAgICAgICAgUjo6c2V0dXAoJ215c3FsOmhvc3Q9JyAuIERCX0hPU1QgLiAnO2RibmFtZT0nIC4gREJfTkFNRSwgREJfVVNFUiwgREJfUEFTUyk7CiAgICAgICAgICAgICMjICDRgNCw0YHRiNC40YDQtdC90LjQtSDQtNC70Y8g0YLQsNCx0LvQuNGGINGBIF8g0LIg0LjQvNC10L3QuAogICAgICAgICAgICBSOjpleHQoJ3hkaXNwZW5zZScsIGZ1bmN0aW9uICgkdGFibGVfbmFtZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcmV0dXJuIFI6OmdldFJlZEJlYW4oKS0+ZGlzcGVuc2UoJHRhYmxlX25hbWUpO30pOwoKICAgICAgICAgICAgJHJiICAgID0gUjo6eGRpc3BlbnNlKCRkYlRhYmxlKTsKICAgICAgICAgICAgJGFSb3dzID0gUjo6ZXhlYygkc3FsLCBbJzpuZXdWYWx1ZScgPT4gaHRtbHNwZWNpYWxjaGFycygkbmV3VmFsdWUpLCAnOmVkaXRJRCcgPT4gKCRlZGl0SUQpXSk7CiAgICAgICAgICAgIC8vICRhUm93cyA9IFI6OmV4ZWMoJHNxbCwgYXJyYXkoJzpuZXdWYWx1ZScgPT4gdHJpbSgkbmV3VmFsdWUpLCAnOmVkaXRJRCcgPT4gKCRlZGl0SUQpKSk7CgogICAgICAgICAgICAvLyBkKCRhUm93cyk7CiAgICAgICAgICAgICR3aGVyZSA9IFsKICAgICAgICAgICAgICAgICJ7JHByaW1hcnlLZXl9IiAgID0+ICRlZGl0SUQsCiAgICAgICAgICAgIF07CgogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICJ7JENvbHVtblsnZGInXX0iID0+ICRuZXdWYWx1ZSwKCiAgICAgICAgICAgIF07CgogICAgICAgICAgICAkciA9ICRkYi0+dGFibGUoJGRiVGFibGUpLT53aGVyZSgkd2hlcmUpLT51cGRhdGUoJGRhdGEpOwoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgJ3BhZ2VfbWVzc2FnZScgPT4gJHBhZ2VfbWVzc2FnZSwKICAgICAgICAgICAgJ3RhYmxlX25hbWUnICAgPT4gJGRiVGFibGUsCiAgICAgICAgICAgICdwcmltYXJ5S2V5JyAgID0+ICRwcmltYXJ5S2V5LAogICAgICAgICAgICAnY29sdW1uSW5kZXgnICA9PiAkY29sdW1uSW5kZXgsCiAgICAgICAgICAgICdDb2x1bW4nICAgICAgID0+ICRDb2x1bW4sCiAgICAgICAgICAgICdzcWwnICAgICAgICAgID0+ICRzcWwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAiZWRpdGVkSUQiPT4gKGludCkkZWRpdGVkSUQsCiAgICAgICAgICAgICAncGhwREFUQScgICAgICA9PiAkREFUQSwgLy9hcyBhcnJheQogICAgICAgIF0pKTsKICAgIH0KCiMjIyMjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMjIyMjIyMKfQoKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2UnLCAkcGFnZV9tZXNzYWdlKTsKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2VfdHlwZScsICRwYWdlX21lc3NhZ2VfdHlwZSk7CgovLyBkKGFycmF5KAovLyAgICAgJGFkbWluX3BhZ2UsCi8vICAgICAkdGFibGVfbmFtZSwKLy8gICAgICRjb2x1bW5zSnNvbkZpbGVOYW1lLAovLyAgICAgJHRhYmxlX3ByaW1hcnlLZXkKLy8gKSk7Cg",
					"AQAAAAAAAAABAAAAxQ4AAAAAAADFDgAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert_snippet",
					{
						"contents": "\n${TM_CURRENT_LINE/^\\s*((?:#|\\/\\/[\\/!]?)\\s*).*/$1/}"
					},
					"AQAAAH8OAAAAAAAAjw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfw4AAAAAAAB/DgAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"right_delete",
					null,
					"AQAAAIAOAAAAAAAAgA4AAAAAAAAOAAAAICAgICAgICAgICAgLy8",
					"AQAAAAAAAAABAAAAjg4AAAAAAACADgAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAHIOAAAAAAAAcg4AAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAH0OAAAAAAAAfQ4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAcg4AAAAAAAByDgAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BwAAADQPAAAAAAAANw8AAAAAAAAAAAAAJA8AAAAAAAAnDwAAAAAAAAAAAADzDgAAAAAAAPYOAAAAAAAAAAAAAN0OAAAAAAAA4A4AAAAAAAAAAAAAzQ4AAAAAAADQDgAAAAAAAAAAAAChDgAAAAAAAKQOAAAAAAAAAAAAAIoOAAAAAAAAjQ4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbA8AAAAAAAB+DgAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAHMOAAAAAAAAdA4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcw4AAAAAAABzDgAAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADcEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmRleCcgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydpbmRleCddLAogICAgICAgICAgICAnZGF0YScgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZGF0YSddLAogICAgICAgICAgICAnZGInICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZGInXSwKICAgICAgICAgICAgJ2R0JyAgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2R0J10sCiAgICAgICAgXTsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vICRlZGl0ZWRJRD0kX1BPU1RbJ3VwZGF0ZWRDZWxsJ11bJ2NvbXBhbnlJRCddOwogICAgICAgICAgICAkc3FsID0gIlVQREFURSBgeyRkYlRhYmxlfWAgU0VUIGB7JENvbHVtblsnZGInXX1gID0gOm5ld1ZhbHVlIFdIRVJFIGB7JHByaW1hcnlLZXl9YD0gOmVkaXRJRDsiOwoKICAgICAgICAgICAgUjo6c2V0dXAoJ215c3FsOmhvc3Q9JyAuIERCX0hPU1QgLiAnO2RibmFtZT0nIC4gREJfTkFNRSwgREJfVVNFUiwgREJfUEFTUyk7CiAgICAgICAgICAgICMjICDRgNCw0YHRiNC40YDQtdC90LjQtSDQtNC70Y8g0YLQsNCx0LvQuNGGINGBIF8g0LIg0LjQvNC10L3QuAogICAgICAgICAgICBSOjpleHQoJ3hkaXNwZW5zZScsIGZ1bmN0aW9uICgkdGFibGVfbmFtZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcmV0dXJuIFI6OmdldFJlZEJlYW4oKS0+ZGlzcGVuc2UoJHRhYmxlX25hbWUpO30pOwoKICAgICAgICAgICAgJHJiICAgID0gUjo6eGRpc3BlbnNlKCRkYlRhYmxlKTsKICAgICAgICAgICAgJGFSb3dzID0gUjo6ZXhlYygkc3FsLCBbJzpuZXdWYWx1ZScgPT4gaHRtbHNwZWNpYWxjaGFycygkbmV3VmFsdWUpLCAnOmVkaXRJRCcgPT4gKCRlZGl0SUQpXSk7CiAgICAgICAgICAgIC8vICRhUm93cyA9IFI6OmV4ZWMoJHNxbCwgYXJyYXkoJzpuZXdWYWx1ZScgPT4gdHJpbSgkbmV3VmFsdWUpLCAnOmVkaXRJRCcgPT4gKCRlZGl0SUQpKSk7CgogICAgICAgICAgICBkZCgkYVJvd3MpOwoKICAgICAgICAgICAgLy8gJHdoZXJlID0gWwogICAgICAgICAgICAvLyAgICAgInskcHJpbWFyeUtleX0iID0+ICRlZGl0SUQsCiAgICAgICAgICAgIC8vIF07CgogICAgICAgICAgICAvLyAkZGF0YSA9IFsKICAgICAgICAgICAgLy8gICAgICJ7JENvbHVtblsnZGInXX0iID0+ICRuZXdWYWx1ZSwKCiAgICAgICAgICAgIC8vIF07CgogICAgICAgICAgICAvLyAkciA9ICRkYi0+dGFibGUoJGRiVGFibGUpLT53aGVyZSgkd2hlcmUpLT51cGRhdGUoJGRhdGEpOwoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgJ3BhZ2VfbWVzc2FnZScgPT4gJHBhZ2VfbWVzc2FnZSwKICAgICAgICAgICAgJ3RhYmxlX25hbWUnICAgPT4gJGRiVGFibGUsCiAgICAgICAgICAgICdwcmltYXJ5S2V5JyAgID0+ICRwcmltYXJ5S2V5LAogICAgICAgICAgICAnY29sdW1uSW5kZXgnICA9PiAkY29sdW1uSW5kZXgsCiAgICAgICAgICAgICdDb2x1bW4nICAgICAgID0+ICRDb2x1bW4sCiAgICAgICAgICAgICdzcWwnICAgICAgICAgID0+ICRzcWwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAiZWRpdGVkSUQiPT4gKGludCkkZWRpdGVkSUQsCiAgICAgICAgICAgICAncGhwREFUQScgICAgICA9PiAkREFUQSwgLy9hcyBhcnJheQogICAgICAgIF0pKTsKICAgIH0KCiMjIyMjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMjIyMjIyMKfQoKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2UnLCAkcGFnZV9tZXNzYWdlKTsKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2VfdHlwZScsICRwYWdlX21lc3NhZ2VfdHlwZSk7CgovLyBkKGFycmF5KAovLyAgICAgJGFkbWluX3BhZ2UsCi8vICAgICAkdGFibGVfbmFtZSwKLy8gICAgICRjb2x1bW5zSnNvbkZpbGVOYW1lLAovLyAgICAgJHRhYmxlX3ByaW1hcnlLZXkKLy8gKSk7CgAAAAAAAAAAohIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADYEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKICAgICAgICAgICAgLy8gJGFSb3dzID0gUjo6ZXhlYygkc3FsLCBhcnJheSgnOm5ld1ZhbHVlJyA9PiB0cmltKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCkpKTsKCiAgICAgICAgICAgIGRkKCRhUm93cyk7CgogICAgICAgICAgICAvLyAkd2hlcmUgPSBbCiAgICAgICAgICAgIC8vICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgLy8gXTsKCiAgICAgICAgICAgIC8vICRkYXRhID0gWwogICAgICAgICAgICAvLyAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgLy8gXTsKCiAgICAgICAgICAgIC8vICRyID0gJGRiLT50YWJsZSgkZGJUYWJsZSktPndoZXJlKCR3aGVyZSktPnVwZGF0ZSgkZGF0YSk7CgogICAgICAgICAgICAkcGFnZV9tZXNzYWdlID0gJ0NFTEwgSEFTIEJFRU4gRURJVEVEJzsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CgogICAgICAgIGV4aXQoanNvbl9lbmNvZGUoWwogICAgICAgICAgICAncGFnZV9tZXNzYWdlJyA9PiAkcGFnZV9tZXNzYWdlLAogICAgICAgICAgICAndGFibGVfbmFtZScgICA9PiAkZGJUYWJsZSwKICAgICAgICAgICAgJ3ByaW1hcnlLZXknICAgPT4gJHByaW1hcnlLZXksCiAgICAgICAgICAgICdjb2x1bW5JbmRleCcgID0+ICRjb2x1bW5JbmRleCwKICAgICAgICAgICAgJ0NvbHVtbicgICAgICAgPT4gJENvbHVtbiwKICAgICAgICAgICAgJ3NxbCcgICAgICAgICAgPT4gJHNxbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsKAAAAAAAAAAA8EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAByEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIGRkKCRhUm93cyk7CgogICAgICAgICAgICAvLyAkd2hlcmUgPSBbCiAgICAgICAgICAgIC8vICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgLy8gXTsKCiAgICAgICAgICAgIC8vICRkYXRhID0gWwogICAgICAgICAgICAvLyAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgLy8gXTsKCiAgICAgICAgICAgIC8vICRyID0gJGRiLT50YWJsZSgkZGJUYWJsZSktPndoZXJlKCR3aGVyZSktPnVwZGF0ZSgkZGF0YSk7CgogICAgICAgICAgICAkcGFnZV9tZXNzYWdlID0gJ0NFTEwgSEFTIEJFRU4gRURJVEVEJzsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CgogICAgICAgIGV4aXQoanNvbl9lbmNvZGUoWwogICAgICAgICAgICAncGFnZV9tZXNzYWdlJyA9PiAkcGFnZV9tZXNzYWdlLAogICAgICAgICAgICAndGFibGVfbmFtZScgICA9PiAkZGJUYWJsZSwKICAgICAgICAgICAgJ3ByaW1hcnlLZXknICAgPT4gJHByaW1hcnlLZXksCiAgICAgICAgICAgICdjb2x1bW5JbmRleCcgID0+ICRjb2x1bW5JbmRleCwKICAgICAgICAgICAgJ0NvbHVtbicgICAgICAgPT4gJENvbHVtbiwKICAgICAgICAgICAgJ3NxbCcgICAgICAgICAgPT4gJHNxbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsKAAAAAAAAAAA/EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB1EgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIC8vIGRkKCRhUm93cyk7CgogICAgICAgICAgICAvLyAkd2hlcmUgPSBbCiAgICAgICAgICAgIC8vICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgLy8gXTsKCiAgICAgICAgICAgIC8vICRkYXRhID0gWwogICAgICAgICAgICAvLyAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgLy8gXTsKCiAgICAgICAgICAgIC8vICRyID0gJGRiLT50YWJsZSgkZGJUYWJsZSktPndoZXJlKCR3aGVyZSktPnVwZGF0ZSgkZGF0YSk7CgogICAgICAgICAgICAkcGFnZV9tZXNzYWdlID0gJ0NFTEwgSEFTIEJFRU4gRURJVEVEJzsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CgogICAgICAgIGV4aXQoanNvbl9lbmNvZGUoWwogICAgICAgICAgICAncGFnZV9tZXNzYWdlJyA9PiAkcGFnZV9tZXNzYWdlLAogICAgICAgICAgICAndGFibGVfbmFtZScgICA9PiAkZGJUYWJsZSwKICAgICAgICAgICAgJ3ByaW1hcnlLZXknICAgPT4gJHByaW1hcnlLZXksCiAgICAgICAgICAgICdjb2x1bW5JbmRleCcgID0+ICRjb2x1bW5JbmRleCwKICAgICAgICAgICAgJ0NvbHVtbicgICAgICAgPT4gJENvbHVtbiwKICAgICAgICAgICAgJ3NxbCcgICAgICAgICAgPT4gJHNxbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsKAAAAAAAAAABgEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICAvLyBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgLy8gIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIC8vIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICAvLyB7CiAgICAgICAgICAgIC8vICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAvLyAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAvLyAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIC8vIGRkKCRhUm93cyk7CgogICAgICAgICAgICAkd2hlcmUgPSBbCiAgICAgICAgICAgICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRyID0gJGRiLT50YWJsZSgkZGJUYWJsZSktPndoZXJlKCR3aGVyZSktPnVwZGF0ZSgkZGF0YSk7CgogICAgICAgICAgICAkcGFnZV9tZXNzYWdlID0gJ0NFTEwgSEFTIEJFRU4gRURJVEVEJzsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CgogICAgICAgIGV4aXQoanNvbl9lbmNvZGUoWwogICAgICAgICAgICAncGFnZV9tZXNzYWdlJyA9PiAkcGFnZV9tZXNzYWdlLAogICAgICAgICAgICAndGFibGVfbmFtZScgICA9PiAkZGJUYWJsZSwKICAgICAgICAgICAgJ3ByaW1hcnlLZXknICAgPT4gJHByaW1hcnlLZXksCiAgICAgICAgICAgICdjb2x1bW5JbmRleCcgID0+ICRjb2x1bW5JbmRleCwKICAgICAgICAgICAgJ0NvbHVtbicgICAgICAgPT4gJENvbHVtbiwKICAgICAgICAgICAgJ3NxbCcgICAgICAgICAgPT4gJHNxbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsKAAAAAAAAAABjEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACZEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICAvLyBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgLy8gIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIC8vIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICAvLyB7CiAgICAgICAgICAgIC8vICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAvLyAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAvLyAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIC8vIGRkKCRhUm93cyk7CgogICAgICAgICAgICAkd2hlcmUgPSBbCiAgICAgICAgICAgICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRyID0gJGRiLT50YWJsZSgkZGJUYWJsZSktPndoZXJlKCR3aGVyZSktPnVwZGF0ZSgkZGF0YSk7CgogICAgICAgICAgICAkcGFnZV9tZXNzYWdlID0gJ0NFTEwgSEFTIEJFRU4gRURJVEVEJzsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CgogICAgICAgIGV4aXQoanNvbl9lbmNvZGUoWwogICAgICAgICAgICAncGFnZV9tZXNzYWdlJyA9PiAkcGFnZV9tZXNzYWdlLAogICAgICAgICAgICAndGFibGVfbmFtZScgICA9PiAkZGJUYWJsZSwKICAgICAgICAgICAgJ3ByaW1hcnlLZXknICAgPT4gJHByaW1hcnlLZXksCiAgICAgICAgICAgICdjb2x1bW5JbmRleCcgID0+ICRjb2x1bW5JbmRleCwKICAgICAgICAgICAgJ0NvbHVtbicgICAgICAgPT4gJENvbHVtbiwKICAgICAgICAgICAgLy8gJ3NxbCcgICAgICAgICAgPT4gJHNxbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsKAAAAAAAAAAB5EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACvEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICAvLyBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgLy8gIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIC8vIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICAvLyB7CiAgICAgICAgICAgIC8vICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAvLyAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAvLyAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIC8vIGRkKCRhUm93cyk7CgogICAgICAgICAgICAkd2hlcmUgPSBbCiAgICAgICAgICAgICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgXTsKCmR1bXAoJHdoZXJlLCRkYXRhKTsKCgogICAgICAgICAgICAkciA9ICRkYi0+dGFibGUoJGRiVGFibGUpLT53aGVyZSgkd2hlcmUpLT51cGRhdGUoJGRhdGEpOwoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgJ3BhZ2VfbWVzc2FnZScgPT4gJHBhZ2VfbWVzc2FnZSwKICAgICAgICAgICAgJ3RhYmxlX25hbWUnICAgPT4gJGRiVGFibGUsCiAgICAgICAgICAgICdwcmltYXJ5S2V5JyAgID0+ICRwcmltYXJ5S2V5LAogICAgICAgICAgICAnY29sdW1uSW5kZXgnICA9PiAkY29sdW1uSW5kZXgsCiAgICAgICAgICAgICdDb2x1bW4nICAgICAgID0+ICRDb2x1bW4sCiAgICAgICAgICAgIC8vICdzcWwnICAgICAgICAgID0+ICRzcWwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAiZWRpdGVkSUQiPT4gKGludCkkZWRpdGVkSUQsCiAgICAgICAgICAgICAncGhwREFUQScgICAgICA9PiAkREFUQSwgLy9hcyBhcnJheQogICAgICAgIF0pKTsKICAgIH0KCiMjIyMjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMjIyMjIyMKfQoKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2UnLCAkcGFnZV9tZXNzYWdlKTsKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2VfdHlwZScsICRwYWdlX21lc3NhZ2VfdHlwZSk7CgovLyBkKGFycmF5KAovLyAgICAgJGFkbWluX3BhZ2UsCi8vICAgICAkdGFibGVfbmFtZSwKLy8gICAgICRjb2x1bW5zSnNvbkZpbGVOYW1lLAovLyAgICAgJHRhYmxlX3ByaW1hcnlLZXkKLy8gKSk7CgAAAAAAAAAAqBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADeEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICAvLyBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgLy8gIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIC8vIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICAvLyB7CiAgICAgICAgICAgIC8vICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAvLyAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAvLyAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIC8vIGRkKCRhUm93cyk7CgogICAgICAgICAgICAkd2hlcmUgPSBbCiAgICAgICAgICAgICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgXTsKCmR1bXAoJHdoZXJlLCRkYXRhKTsKCgogICAgICAgICAgICAkciA9ICRkYi0+dGFibGUoJGRiVGFibGUpLT53aGVyZSgkd2hlcmUpLT51cGRhdGUoJGRhdGEpOwoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgJ3BhZ2VfbWVzc2FnZScgPT4gJHBhZ2VfbWVzc2FnZSwKICAgICAgICAgICAgJ3RhYmxlX25hbWUnICAgPT4gJGRiVGFibGUsCiAgICAgICAgICAgICdwcmltYXJ5S2V5JyAgID0+ICRwcmltYXJ5S2V5LAogICAgICAgICAgICAnY29sdW1uSW5kZXgnICA9PiAkY29sdW1uSW5kZXgsCiAgICAgICAgICAgICdDb2x1bW4nICAgICAgID0+ICRDb2x1bW4sCiAgICAgICAgICAgIC8vICdzcWwnICAgICAgICAgID0+ICRzcWwsCiAgICAgICAgICAgICdzcWwnICAgICAgICAgID0+ICRkYi0+Z2V0UXVlcnkoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsKAAAAAAAAAACrEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADhEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICAvLyBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgLy8gIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIC8vIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICAvLyB7CiAgICAgICAgICAgIC8vICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAvLyAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAvLyAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIC8vIGRkKCRhUm93cyk7CgogICAgICAgICAgICAkd2hlcmUgPSBbCiAgICAgICAgICAgICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgXTsKCi8vIGR1bXAoJHdoZXJlLCRkYXRhKTsKCgogICAgICAgICAgICAkciA9ICRkYi0+dGFibGUoJGRiVGFibGUpLT53aGVyZSgkd2hlcmUpLT51cGRhdGUoJGRhdGEpOwoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgJ3BhZ2VfbWVzc2FnZScgPT4gJHBhZ2VfbWVzc2FnZSwKICAgICAgICAgICAgJ3RhYmxlX25hbWUnICAgPT4gJGRiVGFibGUsCiAgICAgICAgICAgICdwcmltYXJ5S2V5JyAgID0+ICRwcmltYXJ5S2V5LAogICAgICAgICAgICAnY29sdW1uSW5kZXgnICA9PiAkY29sdW1uSW5kZXgsCiAgICAgICAgICAgICdDb2x1bW4nICAgICAgID0+ICRDb2x1bW4sCiAgICAgICAgICAgIC8vICdzcWwnICAgICAgICAgID0+ICRzcWwsCiAgICAgICAgICAgICdzcWwnICAgICAgICAgID0+ICRkYi0+Z2V0UXVlcnkoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsKAAAAAAAAAAClEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADbEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2luZCddLAogICAgICAgICAgICAnZGF0YScgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2RiJ10sCiAgICAgICAgICAgICdkdCcgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2R0J10sCiAgICAgICAgXTsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vICRlZGl0ZWRJRD0kX1BPU1RbJ3VwZGF0ZWRDZWxsJ11bJ2NvbXBhbnlJRCddOwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyAkc3FsID0gIlVQREFURSBgeyRkYlRhYmxlfWAgU0VUIGB7JENvbHVtblsnZGInXX1gID0gOm5ld1ZhbHVlIFdIRVJFIGB7JHByaW1hcnlLZXl9YD0gOmVkaXRJRDsiOwoKICAgICAgICAgICAgLy8gUjo6c2V0dXAoJ215c3FsOmhvc3Q9JyAuIERCX0hPU1QgLiAnO2RibmFtZT0nIC4gREJfTkFNRSwgREJfVVNFUiwgREJfUEFTUyk7CiAgICAgICAgICAgIC8vICMjICDRgNCw0YHRiNC40YDQtdC90LjQtSDQtNC70Y8g0YLQsNCx0LvQuNGGINGBIF8g0LIg0LjQvNC10L3QuAogICAgICAgICAgICAvLyBSOjpleHQoJ3hkaXNwZW5zZScsIGZ1bmN0aW9uICgkdGFibGVfbmFtZSkKICAgICAgICAgICAgLy8gewogICAgICAgICAgICAvLyAgICAgcmV0dXJuIFI6OmdldFJlZEJlYW4oKS0+ZGlzcGVuc2UoJHRhYmxlX25hbWUpO30pOwoKICAgICAgICAgICAgLy8gJHJiICAgID0gUjo6eGRpc3BlbnNlKCRkYlRhYmxlKTsKICAgICAgICAgICAgLy8gJGFSb3dzID0gUjo6ZXhlYygkc3FsLCBbJzpuZXdWYWx1ZScgPT4gaHRtbHNwZWNpYWxjaGFycygkbmV3VmFsdWUpLCAnOmVkaXRJRCcgPT4gKCRlZGl0SUQpXSk7CgogICAgICAgICAgICAvLyBkZCgkYVJvd3MpOwoKICAgICAgICAgICAgJHdoZXJlID0gWwogICAgICAgICAgICAgICAgInskcHJpbWFyeUtleX0iID0+ICRlZGl0SUQsCiAgICAgICAgICAgIF07CgogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICJ7JENvbHVtblsnZGInXX0iID0+ICRuZXdWYWx1ZSwKCiAgICAgICAgICAgIF07CgovLyBkdW1wKCR3aGVyZSwkZGF0YSk7CgogICAgICAgICAgICAkciA9ICRkYi0+dGFibGUoJGRiVGFibGUpLT53aGVyZSgkd2hlcmUpLT51cGRhdGUoJGRhdGEpOwoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgJ3BhZ2VfbWVzc2FnZScgPT4gJHBhZ2VfbWVzc2FnZSwKICAgICAgICAgICAgJ3RhYmxlX25hbWUnICAgPT4gJGRiVGFibGUsCiAgICAgICAgICAgICdwcmltYXJ5S2V5JyAgID0+ICRwcmltYXJ5S2V5LAogICAgICAgICAgICAnY29sdW1uSW5kZXgnICA9PiAkY29sdW1uSW5kZXgsCiAgICAgICAgICAgICdDb2x1bW4nICAgICAgID0+ICRDb2x1bW4sCiAgICAgICAgICAgICdzcWwnICAgICAgICAgID0+ICRkYi0+Z2V0UXVlcnkoKSwKICAgICAgICAgICAgJ3F1ZXJ5X2NvdW50JyAgPT4gJGRiLT5xdWVyeUNvdW50KCksCiAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgICAgIC8vICdzcWwnICAgICAgICAgID0+ICRzcWwsCiAgICAgICAgLy8gImVkaXRlZElEIj0+IChpbnQpJGVkaXRlZElELAogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsKAAAAAAAAAADoDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAEEAAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2luZCddLAogICAgICAgICAgICAnZGF0YScgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2RiJ10sCiAgICAgICAgICAgICdkdCcgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2R0J10sCiAgICAgICAgXTsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CgogICAgICAgICAgICAkd2hlcmUgPSBbCiAgICAgICAgICAgICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRyID0gJGRiLT50YWJsZSgkZGJUYWJsZSktPndoZXJlKCR3aGVyZSktPnVwZGF0ZSgkZGF0YSk7CgogICAgICAgICAgICAkcGFnZV9tZXNzYWdlID0gJ0NFTEwgSEFTIEJFRU4gRURJVEVEJzsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CgogICAgICAgIGV4aXQoanNvbl9lbmNvZGUoWwogICAgICAgICAgICAncGFnZV9tZXNzYWdlJyA9PiAkcGFnZV9tZXNzYWdlLAogICAgICAgICAgICAndGFibGVfbmFtZScgICA9PiAkZGJUYWJsZSwKICAgICAgICAgICAgJ3ByaW1hcnlLZXknICAgPT4gJHByaW1hcnlLZXksCiAgICAgICAgICAgICdjb2x1bW5JbmRleCcgID0+ICRjb2x1bW5JbmRleCwKICAgICAgICAgICAgJ0NvbHVtbicgICAgICAgPT4gJENvbHVtbiwKICAgICAgICAgICAgJ3NxbCcgICAgICAgICAgPT4gJGRiLT5nZXRRdWVyeSgpLAogICAgICAgICAgICAncXVlcnlfY291bnQnICA9PiAkZGItPnF1ZXJ5Q291bnQoKSwKICAgICAgICAgICAgJ3BocERBVEEnICAgICAgPT4gJERBVEEsIC8vYXMgYXJyYXkKICAgICAgICBdKSk7CiAgICAgICAgLy8gJ3NxbCcgICAgICAgICAgPT4gJHNxbCwKICAgICAgICAvLyAiZWRpdGVkSUQiPT4gKGludCkkZWRpdGVkSUQsCiAgICB9CgojIyMjIyMjIyMjIyMjIyMjCiAgICAjIyMjIyMjIyMjIyMjIyMjCn0KCiRzbWFydHktPmFzc2lnbigncGFnZV9tZXNzYWdlJywgJHBhZ2VfbWVzc2FnZSk7CiRzbWFydHktPmFzc2lnbigncGFnZV9tZXNzYWdlX3R5cGUnLCAkcGFnZV9tZXNzYWdlX3R5cGUpOwoKLy8gZChhcnJheSgKLy8gICAgICRhZG1pbl9wYWdlLAovLyAgICAgJHRhYmxlX25hbWUsCi8vICAgICAkY29sdW1uc0pzb25GaWxlTmFtZSwKLy8gICAgICR0YWJsZV9wcmltYXJ5S2V5Ci8vICkpOwoAAAAAAAAAAIoPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/W/domains/antCMS.os/admin/core/includes/default_dpt.php",
			"settings":
			{
				"buffer_size": 3978,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					37,
					1,
					"insert",
					{
						"characters": "ind"
					},
					"CAAAANUKAAAAAAAA1goAAAAAAAAAAAAA1goAAAAAAADWCgAAAAAAAAUAAABpbmRleLEKAAAAAAAAsgoAAAAAAAAAAAAAsgoAAAAAAACyCgAAAAAAAAUAAABpbmRleNIKAAAAAAAA0woAAAAAAAAAAAAAsgoAAAAAAACzCgAAAAAAAAAAAADUCgAAAAAAANUKAAAAAAAAAAAAALMKAAAAAAAAtAoAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAsQoAAAAAAAC2CgAAAAAAAAAAAAAAAPC/1QoAAAAAAADaCgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Line.sublime-macro"
					},
					"AQAAAPsNAAAAAAAA+w0AAAAAAABmAAAAICAgICAgICAgICAgLy8gJGFSb3dzID0gUjo6ZXhlYygkc3FsLCBhcnJheSgnOm5ld1ZhbHVlJyA9PiB0cmltKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCkpKTsK",
					"AQAAAAAAAAABAAAAIA4AAAAAAAAgDgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAgOAAAAAAAACw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEw4AAAAAAAATDgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					2,
					"insert_snippet",
					{
						"contents": "\n${TM_CURRENT_LINE/^\\s*((?:#|\\/\\/[\\/!]?)\\s*).*/$1/}"
					},
					"AgAAAOQLAAAAAAAA9AsAAAAAAAAAAAAA9AsAAAAAAAAEDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AsAAAAAAADkCwAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"CAAAAL0NAAAAAAAAwA0AAAAAAAAAAAAAkA0AAAAAAACTDQAAAAAAAAAAAABNDQAAAAAAAFANAAAAAAAAAAAAAD8NAAAAAAAAQg0AAAAAAAAAAAAACA0AAAAAAAALDQAAAAAAAAAAAADWDAAAAAAAANkMAAAAAAAAAAAAAH4MAAAAAAAAgQwAAAAAAAAAAAAAEQwAAAAAAAAUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGg4AAAAAAAAFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BwAAABgPAAAAAAAAGA8AAAAAAAADAAAALy8gBQ8AAAAAAAAFDwAAAAAAAAMAAAAvLyDRDgAAAAAAANEOAAAAAAAAAwAAAC8vILgOAAAAAAAAuA4AAAAAAAADAAAALy8gpQ4AAAAAAAClDgAAAAAAAAMAAAAvLyB2DgAAAAAAAHYOAAAAAAAAAwAAAC8vIFwOAAAAAAAAXA4AAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAAUw8AAAAAAABQDgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAAAMMAAAAAAAAAwwAAAAAAAABAAAAIPMLAAAAAAAA8wsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAPg8AAAAAAABQDgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAALkQAAAAAAAAvBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0BAAAAAAAADQEAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPcOAAAAAAAA+A4AAAAAAAAAAAAA+A4AAAAAAAD5DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9w4AAAAAAAD3DgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "\ndump"
					},
					"BQAAAPcOAAAAAAAA+A4AAAAAAAAAAAAA+A4AAAAAAAD5DgAAAAAAAAAAAAD5DgAAAAAAAPoOAAAAAAAAAAAAAPoOAAAAAAAA+w4AAAAAAAAAAAAA+w4AAAAAAAD8DgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9w4AAAAAAAD3DgAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPwOAAAAAAAA/g4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/A4AAAAAAAD8DgAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "$wer"
					},
					"BAAAAP0OAAAAAAAA/g4AAAAAAAAAAAAA/g4AAAAAAAD/DgAAAAAAAAAAAAD/DgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/Q4AAAAAAAD9DgAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					2,
					"left_delete",
					null,
					"AgAAAAAPAAAAAAAAAA8AAAAAAAABAAAAcv8OAAAAAAAA/w4AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAAQ8AAAAAAAABDwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "here"
					},
					"BAAAAP8OAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAABDwAAAAAAAAAAAAABDwAAAAAAAAIPAAAAAAAAAAAAAAIPAAAAAAAAAw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/w4AAAAAAAD/DgAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": ",$"
					},
					"AgAAAAMPAAAAAAAABA8AAAAAAAAAAAAABA8AAAAAAAAFDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAw8AAAAAAAADDwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAAAUPAAAAAAAABg8AAAAAAAAAAAAABg8AAAAAAAAHDwAAAAAAAAAAAAAHDwAAAAAAAAgPAAAAAAAAAAAAAAgPAAAAAAAACQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQ8AAAAAAAAFDwAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAoPAAAAAAAACw8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACg8AAAAAAAAKDwAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAM8QAAAAAAAAzxAAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAA6RAAAAAAAADpEAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"duplicate_line",
					null,
					"AQAAAOcQAAAAAAAACxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hAAAAAAAADmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAM8QAAAAAAAA0hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hAAAAAAAADmEAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"paste",
					null,
					"AgAAAAgRAAAAAAAAFxEAAAAAAAAAAAAAFxEAAAAAAAAXEQAAAAAAAAQAAAAkc3Fs",
					"AQAAAAAAAAABAAAACBEAAAAAAAAMEQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAPgOAAAAAAAA+w4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACw8AAAAAAAALDwAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABsRAAAAAAAAHBEAAAAAAAAAAAAAHBEAAAAAAAAoEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxEAAAAAAAAbEQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"paste",
					null,
					"AQAAACgRAAAAAAAAOhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBEAAAAAAAAoEQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAADkRAAAAAAAAOREAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAOhEAAAAAAAA6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADkRAAAAAAAAOhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOREAAAAAAAA5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"",
					null,
					"AQAAACgRAAAAAAAAOhEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BAAAAAAAAAKEQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "query"
					},
					"BgAAACoRAAAAAAAAKxEAAAAAAAAAAAAAKxEAAAAAAAArEQAAAAAAAAMAAABzcWwrEQAAAAAAACwRAAAAAAAAAAAAACwRAAAAAAAALREAAAAAAAAAAAAALREAAAAAAAAuEQAAAAAAAAAAAAAuEQAAAAAAAC8RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhEAAAAAAAAtEQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "_count"
					},
					"BgAAAC8RAAAAAAAAMBEAAAAAAAAAAAAAMBEAAAAAAAAxEQAAAAAAAAAAAAAxEQAAAAAAADIRAAAAAAAAAAAAADIRAAAAAAAAMxEAAAAAAAAAAAAAMxEAAAAAAAA0EQAAAAAAAAAAAAA0EQAAAAAAADURAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALxEAAAAAAAAvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"code_formatter",
					null,
					"AQAAAAAAAAAAAAAAyBIAAAAAAAAaEwAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCnVzZSBSZWRCZWFuUEhQXFI7CgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnaW5kJ10sCiAgICAgICAgICAgICdkYXRhJyAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICAgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYiddLAogICAgICAgICAgICAnZHQnICAgID0+ICRkdENvbHVtbnNbJGNvbHVtbkluZGV4XVsnZHQnXSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJE9LKQogICAgICAgIHsKICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICAvLyBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgLy8gIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIC8vIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICAvLyB7CiAgICAgICAgICAgIC8vICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAvLyAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAvLyAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIC8vIGRkKCRhUm93cyk7CgogICAgICAgICAgICAkd2hlcmUgPSBbCiAgICAgICAgICAgICAgICAieyRwcmltYXJ5S2V5fSIgPT4gJGVkaXRJRCwKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgInskQ29sdW1uWydkYiddfSIgPT4gJG5ld1ZhbHVlLAoKICAgICAgICAgICAgXTsKCi8vIGR1bXAoJHdoZXJlLCRkYXRhKTsKCgogICAgICAgICAgICAkciA9ICRkYi0+dGFibGUoJGRiVGFibGUpLT53aGVyZSgkd2hlcmUpLT51cGRhdGUoJGRhdGEpOwoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgJ3BhZ2VfbWVzc2FnZScgPT4gJHBhZ2VfbWVzc2FnZSwKICAgICAgICAgICAgJ3RhYmxlX25hbWUnICAgPT4gJGRiVGFibGUsCiAgICAgICAgICAgICdwcmltYXJ5S2V5JyAgID0+ICRwcmltYXJ5S2V5LAogICAgICAgICAgICAnY29sdW1uSW5kZXgnICA9PiAkY29sdW1uSW5kZXgsCiAgICAgICAgICAgICdDb2x1bW4nICAgICAgID0+ICRDb2x1bW4sCiAgICAgICAgICAgIC8vICdzcWwnICAgICAgICAgID0+ICRzcWwsCiAgICAgICAgICAgICdzcWwnICAgICAgICAgID0+ICRkYi0+Z2V0UXVlcnkoKSwKICAgICAgICAgICAgICdxdWVyeV9jb3VudCcgICAgICAgICAgPT4kZGItPnF1ZXJ5Q291bnQoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgICAgICAgICAgICdwaHBEQVRBJyAgICAgID0+ICREQVRBLCAvL2FzIGFycmF5CiAgICAgICAgXSkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwp9Cgokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZScsICRwYWdlX21lc3NhZ2UpOwokc21hcnR5LT5hc3NpZ24oJ3BhZ2VfbWVzc2FnZV90eXBlJywgJHBhZ2VfbWVzc2FnZV90eXBlKTsKCi8vIGQoYXJyYXkoCi8vICAgICAkYWRtaW5fcGFnZSwKLy8gICAgICR0YWJsZV9uYW1lLAovLyAgICAgJGNvbHVtbnNKc29uRmlsZU5hbWUsCi8vICAgICAkdGFibGVfcHJpbWFyeUtleQovLyApKTsK",
					"AQAAAAAAAAABAAAANREAAAAAAAA1EQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					5,
					"swap_line_down",
					null,
					"CgAAAAgRAAAAAAAALxEAAAAAAAAAAAAAsRAAAAAAAACxEAAAAAAAACcAAAAgICAgICAgICAgICAvLyAnc3FsJyAgICAgICAgICA9PiAkc3FsLAo5EQAAAAAAAGARAAAAAAAAAAAAAOEQAAAAAAAA4RAAAAAAAAAnAAAAICAgICAgICAgICAgLy8gJ3NxbCcgICAgICAgICAgPT4gJHNxbCwKfhEAAAAAAAClEQAAAAAAAAAAAAASEQAAAAAAABIRAAAAAAAAJwAAACAgICAgICAgICAgIC8vICdzcWwnICAgICAgICAgID0+ICRzcWwsCq8RAAAAAAAA1hEAAAAAAAAAAAAAVxEAAAAAAABXEQAAAAAAACcAAAAgICAgICAgICAgICAvLyAnc3FsJyAgICAgICAgICA9PiAkc3FsLAq8EQAAAAAAAOMRAAAAAAAAAAAAAIgRAAAAAAAAiBEAAAAAAAAnAAAAICAgICAgICAgICAgLy8gJ3NxbCcgICAgICAgICAgPT4gJHNxbCwK",
					"AQAAAAAAAAABAAAA1xAAAAAAAADXEAAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					3,
					"swap_line_down",
					null,
					"BgAAAIgRAAAAAAAAzREAAAAAAAAAAAAAEhEAAAAAAAASEQAAAAAAAEUAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gImVkaXRlZElEIj0+IChpbnQpJGVkaXRlZElELAqVEQAAAAAAANoRAAAAAAAAAAAAAEMRAAAAAAAAQxEAAAAAAABFAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKvBEAAAAAAAABEgAAAAAAAAAAAABQEQAAAAAAAFARAAAAAAAARQAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAiZWRpdGVkSUQiPT4gKGludCkkZWRpdGVkSUQsCg",
					"AQAAAAAAAAABAAAAOBEAAAAAAAA4EQAAAAAAAAAAAAAA4HRA"
				],
				[
					151,
					6,
					"unindent",
					null,
					"BgAAAHcRAAAAAAAAdxEAAAAAAAAEAAAAICAgIHcRAAAAAAAAdxEAAAAAAAAEAAAAICAgIHcRAAAAAAAAdxEAAAAAAAAEAAAAICAgIHcRAAAAAAAAdxEAAAAAAAAEAAAAICAgIHcRAAAAAAAAdxEAAAAAAAAEAAAAICAgIHcRAAAAAAAAdxEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAnREAAAAAAACdEQAAAAAAAAAAAAAA4HRA"
				],
				[
					152,
					1,
					"unindent",
					null,
					"AQAAAHcRAAAAAAAAdxEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAhREAAAAAAACFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"code_formatter",
					null,
					"AQAAAAAAAAAAAAAApRIAAAAAAADiEgAAPD9waHAKIyMjZGVmYXVsdF9kcHQucGhwCgokcGFnZV9tZXNzYWdlICAgICAgPSAnJzsKJHBhZ2VfbWVzc2FnZV90eXBlID0gJ3N1Y2Nlc3MnOwokZGVwYXJ0bWVudCAgICAgICAgPSAkRGVwYXJ0bWVudHNbJGN1cnJlbnRfZHB0X2luZGV4XTsKJGRlcGFydG1lbnRfc3ViICAgID0gJGRlcGFydG1lbnRbJ3N1Yl9kZXBhcnRtZW50cyddWyRjdXJyZW50X3N1Yl9pbmRleF07CgokYWRtaW5fcGFnZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsnYWRtaW5fcGFnZSddOwokdGFibGVfbmFtZSAgICAgICAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfbmFtZSddOwokY29sdW1uc0pzb25GaWxlTmFtZSA9ICRkZXBhcnRtZW50X3N1YlsnY29sdW1uc0pzb25GaWxlTmFtZSddOwokdGFibGVfcHJpbWFyeUtleSAgICA9ICRkZXBhcnRtZW50X3N1YlsndGFibGVfcHJpbWFyeUtleSddOwoKJE9LICAgICAgICAgICAgICAgICA9IDA7CiRzYXZlTmV3SnNvbkNvbHVtbnMgPSBmYWxzZTsKJGR0Q29sdW1ucyAgICAgICAgICA9IFtdOwoKaWYgKCFpc19udWxsKCR0YWJsZV9uYW1lKSkKewogICAgJGRiVGFibGVGaWVsZHMgICAgID0gZGJfZ2V0Q29sdW1uTmFtZXMoJHRhYmxlX25hbWUpOwogICAgJGRiVGFibGVGaWVsZE5hbWVzID0gYXJyYXlfa2V5cygkZGJUYWJsZUZpZWxkcyk7IC8vINCy0YvQstC+0LTQuNC8INCyINC70L7Qs9CzINCy0YHQtSDQvdCw0LfQstCw0L3QuNGPINC/0L7Qu9C10LkKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkcycsICRkYlRhYmxlRmllbGRzKTsKICAgICRzbWFydHktPmFzc2lnbignZGJUYWJsZUZpZWxkTmFtZXMnLCAkZGJUYWJsZUZpZWxkTmFtZXMpOwoKICAgIGlmICghaXNfbnVsbCgkY29sdW1uc0pzb25GaWxlTmFtZSkpCiAgICB7CiAgICAgICAgaWYgKGZpbGVfZXhpc3RzKCRjb2x1bW5zSnNvbkZpbGVOYW1lKSkKICAgICAgICB7CiAgICAgICAgICAgICRqc29uQ29sdW1ucyAgPSBmaWxlX2dldF9jb250ZW50cygkY29sdW1uc0pzb25GaWxlTmFtZSk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgPSAnZGF0YXRhYmxlcyBjb2x1bW5zIGxvYWRlZCBmcm9tOiAnIC4gJGNvbHVtbnNKc29uRmlsZU5hbWUgLiAnJzsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOwogICAgICAgICAgICAkZHRDb2x1bW5GaWVsZE5hbWVzID0gJGRiVGFibGVGaWVsZE5hbWVzOwoKICAgICAgICAgICAgJGpzb25Db2x1bW5zICAgICAgID0gZXhwb3J0Q29sdW1uc1RvSnNvbigkZHRDb2x1bW5GaWVsZE5hbWVzLCAkbGltaXQgPSA0KTsKICAgICAgICAgICAgJGlzU2F2ZWQgICAgICAgICAgID0gZmlsZV9wdXRfY29udGVudHMoJGNvbHVtbnNKc29uRmlsZU5hbWUsICRqc29uQ29sdW1ucyk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2UgICAgICA9ICRjb2x1bW5zSnNvbkZpbGVOYW1lIC4gJyBJcyBzYXZlZCBzaXplOiAnIC4gZm9ybWF0X3NpemUoKGludCkkaXNTYXZlZCk7CiAgICAgICAgICAgICRwYWdlX21lc3NhZ2VfdHlwZSA9ICd3YXJuaW5nJzsKICAgICAgICB9CgogICAgICAgICRkdENvbHVtbnMgPSBqc29uX2RlY29kZSgkanNvbkNvbHVtbnMsIHRydWUpOyAvL2FzIGFycmF5CgogICAgICAgIGlmICghaXNfbnVsbCgkdGFibGVfcHJpbWFyeUtleSkpCiAgICAgICAgewogICAgICAgICAgICAkZGJUYWJsZSAgICA9ICR0YWJsZV9uYW1lOwogICAgICAgICAgICAkcHJpbWFyeUtleSA9ICR0YWJsZV9wcmltYXJ5S2V5OwogICAgICAgICAgICAkT0sgICAgICAgICA9IDE7CiAgICAgICAgfQogICAgfQp9CgppZiAoJE9LICYmIGlzc2V0KCRfR0VUWydvcGVyYXRpb24nXSkpCnsKICAgIGlmICgkX0dFVFsnb3BlcmF0aW9uJ10gPT09ICdpbml0RGVmYXVsdERhdGFUYWJsZScpCiAgICB7CiAgICAgICAgZ2xvYmFsICRwZG9fY29ubmVjdDsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vIGR1bXAoWyRfUE9TVCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zXSk7CiAgICAgICAgICAgICRzc3BfcmVzdWx0ID0gYWRtaW5TU1A6OnNpbXBsZSgkX1BPU1QsICRwZG9fY29ubmVjdCwgJGRiVGFibGUsICRwcmltYXJ5S2V5LCAkZHRDb2x1bW5zKTsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgIHsKICAgICAgICAgICAgJHNzcF9yZXN1bHQgPSBbXTsKICAgICAgICB9CgogICAgICAgIGhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04Jyk7CiAgICAgICAgZXhpdChqc29uX2VuY29kZSgkc3NwX3Jlc3VsdCkpOwogICAgfQoKIyMjIyMjIyMjIyMjIyMjIwogICAgIyMjIyMjIyMjIyMjIyMjIwogICAgaWYgKCRfR0VUWydvcGVyYXRpb24nXSA9PT0gJ2VkaXRDZWxsJykKICAgIHsKICAgICAgICBnbG9iYWwgJHBkb19jb25uZWN0OwoKICAgICAgICAkREFUQSAgID0ganNvbl9kZWNvZGUoZmlsZV9nZXRfY29udGVudHMoJ3BocDovL2lucHV0JyksIHRydWUsIEpTT05fQklHSU5UX0FTX1NUUklORyB8IEpTT05fSU5WQUxJRF9VVEY4X0lHTk9SRSk7CiAgICAgICAgJHJlc3VsdCA9IGZhbHNlOwoKICAgICAgICAkY29sdW1uSW5kZXggPSAkREFUQVsnY29sdW1uSW5kZXgnXTsKICAgICAgICAkbmV3VmFsdWUgICAgPSAkREFUQVsnbmV3VmFsdWUnXTsKICAgICAgICAkZWRpdElEICAgICAgPSAkREFUQVsnZWRpdElEJ107CgogICAgICAgICRDb2x1bW4gPSBbCiAgICAgICAgICAgICdpbmQnICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2luZCddLAogICAgICAgICAgICAnZGF0YScgPT4gJGR0Q29sdW1uc1skY29sdW1uSW5kZXhdWydkYXRhJ10sCiAgICAgICAgICAgICdkYicgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2RiJ10sCiAgICAgICAgICAgICdkdCcgICA9PiAkZHRDb2x1bW5zWyRjb2x1bW5JbmRleF1bJ2R0J10sCiAgICAgICAgXTsKCiAgICAgICAgaWYgKCRPSykKICAgICAgICB7CiAgICAgICAgICAgIC8vICRlZGl0ZWRJRD0kX1BPU1RbJ3VwZGF0ZWRDZWxsJ11bJ2NvbXBhbnlJRCddOwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLwogICAgICAgICAgICAvLyAkc3FsID0gIlVQREFURSBgeyRkYlRhYmxlfWAgU0VUIGB7JENvbHVtblsnZGInXX1gID0gOm5ld1ZhbHVlIFdIRVJFIGB7JHByaW1hcnlLZXl9YD0gOmVkaXRJRDsiOwoKICAgICAgICAgICAgLy8gUjo6c2V0dXAoJ215c3FsOmhvc3Q9JyAuIERCX0hPU1QgLiAnO2RibmFtZT0nIC4gREJfTkFNRSwgREJfVVNFUiwgREJfUEFTUyk7CiAgICAgICAgICAgIC8vICMjICDRgNCw0YHRiNC40YDQtdC90LjQtSDQtNC70Y8g0YLQsNCx0LvQuNGGINGBIF8g0LIg0LjQvNC10L3QuAogICAgICAgICAgICAvLyBSOjpleHQoJ3hkaXNwZW5zZScsIGZ1bmN0aW9uICgkdGFibGVfbmFtZSkKICAgICAgICAgICAgLy8gewogICAgICAgICAgICAvLyAgICAgcmV0dXJuIFI6OmdldFJlZEJlYW4oKS0+ZGlzcGVuc2UoJHRhYmxlX25hbWUpO30pOwoKICAgICAgICAgICAgLy8gJHJiICAgID0gUjo6eGRpc3BlbnNlKCRkYlRhYmxlKTsKICAgICAgICAgICAgLy8gJGFSb3dzID0gUjo6ZXhlYygkc3FsLCBbJzpuZXdWYWx1ZScgPT4gaHRtbHNwZWNpYWxjaGFycygkbmV3VmFsdWUpLCAnOmVkaXRJRCcgPT4gKCRlZGl0SUQpXSk7CgogICAgICAgICAgICAvLyBkZCgkYVJvd3MpOwoKICAgICAgICAgICAgJHdoZXJlID0gWwogICAgICAgICAgICAgICAgInskcHJpbWFyeUtleX0iID0+ICRlZGl0SUQsCiAgICAgICAgICAgIF07CgogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICJ7JENvbHVtblsnZGInXX0iID0+ICRuZXdWYWx1ZSwKCiAgICAgICAgICAgIF07CgovLyBkdW1wKCR3aGVyZSwkZGF0YSk7CgogICAgICAgICAgICAkciA9ICRkYi0+dGFibGUoJGRiVGFibGUpLT53aGVyZSgkd2hlcmUpLT51cGRhdGUoJGRhdGEpOwoKICAgICAgICAgICAgJHBhZ2VfbWVzc2FnZSA9ICdDRUxMIEhBUyBCRUVOIEVESVRFRCc7CiAgICAgICAgfQoKICAgICAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcpOwoKICAgICAgICBleGl0KGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgJ3BhZ2VfbWVzc2FnZScgPT4gJHBhZ2VfbWVzc2FnZSwKICAgICAgICAgICAgJ3RhYmxlX25hbWUnICAgPT4gJGRiVGFibGUsCiAgICAgICAgICAgICdwcmltYXJ5S2V5JyAgID0+ICRwcmltYXJ5S2V5LAogICAgICAgICAgICAnY29sdW1uSW5kZXgnICA9PiAkY29sdW1uSW5kZXgsCiAgICAgICAgICAgICdDb2x1bW4nICAgICAgID0+ICRDb2x1bW4sCiAgICAgICAgICAgICAnc3FsJyAgICAgICAgICA9PiAkZGItPmdldFF1ZXJ5KCksCiAgICAgICAgICAgICdxdWVyeV9jb3VudCcgID0+ICRkYi0+cXVlcnlDb3VudCgpLAogICAgICAgICAgICAgJ3BocERBVEEnICAgICAgPT4gJERBVEEsIC8vYXMgYXJyYXkKICAgICAgICBdKSk7CiAgICAgICAgICAgIC8vICdzcWwnICAgICAgICAgID0+ICRzcWwsCiAgICAgICAgIC8vICJlZGl0ZWRJRCI9PiAoaW50KSRlZGl0ZWRJRCwKICAgIH0KCiMjIyMjIyMjIyMjIyMjIyMKICAgICMjIyMjIyMjIyMjIyMjIyMKfQoKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2UnLCAkcGFnZV9tZXNzYWdlKTsKJHNtYXJ0eS0+YXNzaWduKCdwYWdlX21lc3NhZ2VfdHlwZScsICRwYWdlX21lc3NhZ2VfdHlwZSk7CgovLyBkKGFycmF5KAovLyAgICAgJGFkbWluX3BhZ2UsCi8vICAgICAkdGFibGVfbmFtZSwKLy8gICAgICRjb2x1bW5zSnNvbkZpbGVOYW1lLAovLyAgICAgJHRhYmxlX3ByaW1hcnlLZXkKLy8gKSk7Cg",
					"AQAAAAAAAAABAAAAgREAAAAAAACBEQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					2,
					"right_delete",
					null,
					"AgAAAJQLAAAAAAAAlAsAAAAAAAC+AgAAICAgICAgICAgICAgLy8gJGVkaXRlZElEPSRfUE9TVFsndXBkYXRlZENlbGwnXVsnY29tcGFueUlEJ107CiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vCiAgICAgICAgICAgIC8vICRzcWwgPSAiVVBEQVRFIGB7JGRiVGFibGV9YCBTRVQgYHskQ29sdW1uWydkYiddfWAgPSA6bmV3VmFsdWUgV0hFUkUgYHskcHJpbWFyeUtleX1gPSA6ZWRpdElEOyI7CgogICAgICAgICAgICAvLyBSOjpzZXR1cCgnbXlzcWw6aG9zdD0nIC4gREJfSE9TVCAuICc7ZGJuYW1lPScgLiBEQl9OQU1FLCBEQl9VU0VSLCBEQl9QQVNTKTsKICAgICAgICAgICAgLy8gIyMgINGA0LDRgdGI0LjRgNC10L3QuNC1INC00LvRjyDRgtCw0LHQu9C40YYg0YEgXyDQsiDQuNC80LXQvdC4CiAgICAgICAgICAgIC8vIFI6OmV4dCgneGRpc3BlbnNlJywgZnVuY3Rpb24gKCR0YWJsZV9uYW1lKQogICAgICAgICAgICAvLyB7CiAgICAgICAgICAgIC8vICAgICByZXR1cm4gUjo6Z2V0UmVkQmVhbigpLT5kaXNwZW5zZSgkdGFibGVfbmFtZSk7fSk7CgogICAgICAgICAgICAvLyAkcmIgICAgPSBSOjp4ZGlzcGVuc2UoJGRiVGFibGUpOwogICAgICAgICAgICAvLyAkYVJvd3MgPSBSOjpleGVjKCRzcWwsIFsnOm5ld1ZhbHVlJyA9PiBodG1sc3BlY2lhbGNoYXJzKCRuZXdWYWx1ZSksICc6ZWRpdElEJyA9PiAoJGVkaXRJRCldKTsKCiAgICAgICAgICAgIC8vIGRkKCRhUm93cyk7lAsAAAAAAACUCwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAOA4AAAAAAACUCwAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					2,
					"right_delete",
					null,
					"AgAAAD4MAAAAAAAAPgwAAAAAAAAXAAAACi8vIGR1bXAoJHdoZXJlLCRkYXRhKTs+DAAAAAAAAD4MAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAVQwAAAAAAAA+DAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"right_delete",
					null,
					"AQAAAFsEAAAAAAAAWwQAAAAAAAAcAAAAICAgICAgICAgICAgLy8gZCgnTk8gRklMRScpOw",
					"AQAAAAAAAAABAAAAdwQAAAAAAABbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					2,
					"right_delete",
					null,
					"AgAAAHkHAAAAAAAAeQcAAAAAAABBAAAAICAgICAgICAgICAgLy8gZHVtcChbJF9QT1NULCAkZGJUYWJsZSwgJHByaW1hcnlLZXksICRkdENvbHVtbnNdKTt5BwAAAAAAAHkHAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAugcAAAAAAAB5BwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "admin/functions/adminUI_functions.php",
			"settings":
			{
				"buffer_size": 3945,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"noty",
				"ReadOnly Protect: Toggle read-only"
			],
			[
				"pac",
				"Package Control: Enable Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"Package Control: en",
				"Package Control: Enable Package"
			],
			[
				"insp",
				"Package Control: Install Package"
			],
			[
				"ip",
				"Package Control: Install Package"
			],
			[
				"inpa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"rempa",
				"Package Control: Remove Package"
			],
			[
				"codein",
				"SublimeCodeIntel: Disable Plugin"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"inspa",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"merge",
				"Set Syntax: Git Blame Ignore Revisions"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 355.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/OSPanel/domains/antCMS.os",
		"/C/OSPanel/domains/antCMS.os/admin",
		"/C/OSPanel/domains/antCMS.os/admin/log",
		"/C/OSPanel/domains/antCMS.os/vendor"
	],
	"file_history":
	[
		"/C/OSPanel/domains/antCMS.os/admin/functions/adminUI_functions.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/functions.php",
		"/C/OSPanel/domains/antCMS.os/admin/admin.php",
		"/W/domains/antCMS.os/vendor/smarty/smarty/src/Extension/DefaultExtension.php",
		"/W/domains/antCMS.os/admin/core/includes/conf_columns.php",
		"/C/OSPanel/domains/antCMS.os/vendor/tracy/tracy/src/Tracy/Debugger/Debugger.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/controlSnippetsProcessor.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/includes/conf_columns.php",
		"/C/OSPanel/domains/antCMS.os/vendor/twbs/bootstrap/.github/workflows/calibreapp-image-actions.yml",
		"/C/OSPanel/domains/antCMS.os/admin/log/FILEDEBUG.JSON",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/admin__navbar.tpl.html",
		"/W/domains/antCMS.os/vendor/tracy/tracy/src/Tracy/Dumper/Dumper.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/bootstrap.php",
		"/C/OSPanel/domains/antCMS.os/vendor/tracy/tracy/src/Tracy/functions.php",
		"/C/OSPanel/domains/antCMS.os/vendor/tracy/tracy/.phpstorm.meta.php",
		"/C/OSPanel/domains/antCMS.os/admin/functions/registration_functions.php",
		"/W/domains/antCMS.os/admin/functions/admin_functions.php",
		"/C/OSPanel/domains/antCMS.os/admin/functions/admin_functions.php",
		"/C/OSPanel/domains/antCMS.os/admin/css/uiAdmin.css",
		"/W/domains/antCMS.os/admin/core/authentication.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/const.php",
		"/C/OSPanel/domains/http-skeleton.os/app/config/config.php",
		"/C/OSPanel/domains/http-skeleton.os/app/config/bootstrap.php",
		"/C/OSPanel/domains/antCMS.os/vendor/tracy/install.cmd",
		"/C/OSPanel/domains/antCMS.os/vendor/tracy/open-editor.js",
		"/W/domains/antCMS.os/admin/core/bootstrap.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/mysqli.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/settings.php",
		"/W/domains/antCMS.os/admin/core/settings.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/connect.php",
		"/C/OSPanel/domains/antCMS.os/PROJECT_antCMS.sublime-project",
		"/C/OSPanel/domains/antCMS.os/vendor/tracy-extensions/src/debug/tracy/TracyExtensionLoader.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/errors.php",
		"/C/OSPanel/domains/antCMS.os/admin/js/index.js",
		"/C/OSPanel/domains/antCMS.os/vendor/symfony/var-dumper/CHANGELOG.md",
		"/C/OSPanel/domains/antCMS.os/vendor/smarty/smarty/src/Extension/DefaultExtension.php",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/admin2.tpl.html",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/admin__footer.tpl.html",
		"/C/OSPanel/domains/antCMS.os/admin/js/cs/csEvents.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/ui/uiAdmin.js",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/admin.tpl.html",
		"/C/OSPanel/domains/antCMS.os/Toaster.bundle.js",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/admin__menu_offcanvas.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/admin.php",
		"/D/OSPanel/domains/antCMS.os/admin/adminOLD.php",
		"/D/OSPanel/domains/antCMS.os/PROJECT_antCMS.sublime-project",
		"/D/OSPanel/domains/antCMS.os/admin/css/uiAdmin.css",
		"/D/OSPanel/domains/antCMS.os/admin/core/admin_end.php",
		"/D/OSPanel/domains/antCMS.os/admin/core/includes/conf_columns.php",
		"/D/OSPanel/domains/antCMS.os/admin/js/ui/uiAdmin.js",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/sub/conf_columns.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/admin2.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/cs/single_inputtext.tpl",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/cs/single_plaintext.tpl",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/cs/single_radio.tpl",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/cs/single_badge.tpl",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/cs/single_checkbox.tpl",
		"/D/OSPanel/domains/antCMS.os/admin/core/bootstrap.php",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/cs/single_inputnumber.tpl",
		"/D/OSPanel/domains/antCMS.os/admin/logs/FILEDEBUG.JSON",
		"/D/OSPanel/domains/antCMS.os/admin/functions/debug_functions.php",
		"/D/OSPanel/domains/antCMS.os/admin/js/cs/csEvents.js",
		"/D/OSPanel/domains/antCMS.os/admin/js/ui/sub/conf_columns.js",
		"/D/OSPanel/domains/antCMS.os/admin/logs/php.php",
		"/D/OSPanel/domains/antCMS.os/admin/js/ui/uiEvents.js",
		"/D/OSPanel/domains/antCMS.os/admin/js/dt/dataTables.cellEdit.js",
		"/D/OSPanel/domains/antCMS.os/admin/core/includes/default_dpt.php",
		"/D/OSPanel/domains/antCMS.os/admin/js/dt/standartDataTable.js",
		"/D/OSPanel/domains/antCMS.os/admin/js/cs/uiCS.js",
		"/C/Users/antaNT64pro/AppData/Roaming/Sublime Text/Packages/JavaScript Completions/JavaScript-Completions.sublime-settings",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/atoms/aEmptyTableBodyWithPlaceholders.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/core/cache/php/wrt6658edbe139044_62701690",
		"/D/OSPanel/domains/antCMS.os/admin/apps/Toasts/appToasts.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/admin__footer.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/admin.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/apps/Toasts/appToasts.js",
		"/C/Users/antaNT64pro/AppData/Roaming/Sublime Text/Packages/User/CodeFormatter.sublime-settings",
		"/D/OSPanel/domains/antCMS.os/admin/core/settings.php",
		"/D/OSPanel/domains/antCMS.os/admin/functions/adminUI_functions.php",
		"/D/OSPanel/domains/antCMS.os/vendor/smarty/smarty/demo/templates/footer.tpl",
		"/D/OSPanel/domains/antCMS.os/admin/core/classes/class.Toasts.php",
		"/D/OSPanel/domains/antCMS.os/vendor/twbs/bootstrap-icons/icons/aspect-ratio.svg",
		"/D/OSPanel/domains/antCMS.os/vendor/symfony/var-dumper/Cloner/ClonerInterface.php",
		"/D/OSPanel/domains/antCMS.os/admin/functions/admin_functions.php",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/atoms/aPageH1.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/core/classes/asad.js",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/sub/default_sub.tpl.html",
		"/D/OSPanel/domains/antCMS.os/admin/core/functions.php",
		"/D/OSPanel/domains/antCMS.os/vendor/smarty/smarty/docs/designers/language-basic-syntax/language-syntax-attributes.md",
		"/D/OSPanel/domains/antCMS.os/admin/tpl/default_dpt.tpl.html",
		"/D/OSPanel/domains/antCMS.os/vendor/izniburak/pdox/src/Pdox.php",
		"/D/OSPanel/domains/antCMS.os/admin/logs/PDOx.md",
		"/D/OSPanel/domains/antCMS.os/admin/core/mysqli.php",
		"/C/OSPanel/domains/antCMS.os/vendor/izniburak/pdox/src/Pdox.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/classes/antDataBase.php",
		"/C/OSPanel/domains/antCMS.os/vendor/gabordemooij/redbean/RedBeanPHP/Driver/RPDO.php",
		"/C/OSPanel/domains/antCMS.os/admin/logs/md.md",
		"/C/OSPanel/domains/antCMS.os/admin/core/tables.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/departments.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/headers.php",
		"/C/Users/A/AppData/Roaming/Sublime Text/Packages/User/CodeFormatter.sublime-settings",
		"/C/OSPanel/domains/antCMS.os/admin/core/orklang.php",
		"/C/OSPanel/domains/antCMS.os/admin/functions/crypto_functions.php",
		"/C/OSPanel/domains/antCMS.os/admin/functions/debug_functions.php",
		"/C/OSPanel/domains/antCMS.os/admin/functions/expired_functions.php",
		"/C/OSPanel/domains/antCMS.os/admin/functions/session_functions.php",
		"/C/OSPanel/domains/antCMS.os/admin/js/dt/dataTables.cellEdit.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/dt/dataTables.cellEdit_ORIGINAL.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/dt/defaultKatzapskayaMova.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/dt/dtButtons.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/dt/dtEditExample.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/dt/dtEvents.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/dt/dtStandartLayout.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/dt/standartDataTable.js",
		"/C/OSPanel/domains/antCMS.os/admin/js/admin.js",
		"/C/OSPanel/domains/antCMS.os/admin/core/classes/class.adminSSP.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/configs/conf_admin_edit__columns.json",
		"/C/OSPanel/domains/antCMS.os/admin/core/admin_end.php",
		"/C/OSPanel/domains/antCMS.os/admin/core/authentication.php",
		"/C/OSPanel/domains/antCMS.os/vendor/izniburak/pdox/DOCS.md",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/sub/conf_columns.tpl.html",
		"/C/OSPanel/domains/antCMS.os/admin/logs/php.php",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/cs/single_checkbox.tpl",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/cs/single_inputtext.tpl",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/cs/single_radio.tpl",
		"/C/OSPanel/domains/antCMS.os/admin/core/includes/default_dpt.php",
		"/C/OSPanel/domains/antCMS.os/admin/logs/FILEDEBUG.JSON",
		"/C/OSPanel/domains/antCMS.os/admin/tpl/sub/default_sub.tpl.html"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 150.0,
		"where_history":
		[
			"<project filters>",
			"<project filters>, -vendor/*.*",
			"<project filters>",
			"<project filters>, *.js",
			"<project filters>",
			"<project filters>, *.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"redbea",
			"redb",
			"$OK",
			"MakeCellsEditable",
			"updateEditableCell",
			"columnIndex",
			"R::",
			"use RedBeanPHP",
			"RedBeanPHP\\R",
			"redb",
			"DEPTH",
			"$r",
			"rb",
			"class=\"navbar navbar-expand-lg bg-dark fixed-top\"",
			"getAll",
			"$Row->",
			"->",
			"preferred_color_mode",
			"//",
			"IS_WINDOWS",
			"$config",
			"flight",
			"PdoQueryCapture",
			"logs/",
			"logs",
			"VarDumper",
			"noty",
			"$DB ",
			"= new Smarty",
			"console.log(ui)",
			"text-body-secondary",
			"opacity-",
			"text-muted",
			"container_width",
			"uiControl",
			"background-color: #8888aa02;",
			"Меню",
			"Меню antCMS.os",
			"dump",
			"btnCloseMenu",
			"export const bsOffcanvasMenu = new bootstrap.Offcanvas(elOffcanvasMenu);",
			"$p",
			"attributes",
			"dataset",
			"$dataset",
			"options",
			"options=",
			"options",
			"smarty",
			"debug_print_var",
			"</option>",
			"nearest('thead')",
			"options",
			"fieldData",
			"'atributes'",
			"colData",
			"table_data",
			"fields",
			"table_data",
			"3624",
			"jlog",
			"table_data",
			"debug_print_var",
			"$p",
			"p",
			"$p",
			"dataset",
			"data_set",
			"datalist",
			"$datalist",
			"datalist",
			"rowIndex",
			"columnIndex",
			"row",
			"colInd",
			"id",
			"colInd",
			"editID",
			"e.target",
			"let",
			"csDefaultCallbackFunction",
			" data-id=\"{$colData.id}\" d",
			"td data-value",
			"td data-value=",
			"dtDefaultCallbackFunction",
			"MakeCellsEditable",
			"editCell",
			"MakeCellsEditable",
			"El",
			"name\"",
			"db_getColumnNames",
			"disabledControlSnippets",
			"removeAttribute",
			"attributes.",
			"readonly",
			"./",
			"childrenTp",
			"<small class=\"opacity-25\">",
			"</td>",
			"$dataset",
			"dataset",
			"tableData",
			"datalist",
			"loop=",
			"$allowedToastPlacementNames",
			"data-key",
			"data-value",
			"darrk",
			"toast_placementID",
			"new_toast_placement",
			"ADMIN_CONTAINER_WIDTH",
			"new_toast_placement",
			"tem\"  href",
			"  ",
			"\">",
			"data-value",
			"container_width",
			"template_width",
			"change_template_width",
			"data-value",
			"<a value",
			"option",
			"atomic=\"true\"",
			"toastContainer",
			"oast-container",
			"col-12",
			"run",
			"RedirectMetaRefresh"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"log/",
			"text-body-secondary",
			"$p.dataset",
			"atributes",
			"iuConfigs",
			"table_columns",
			"adminlogname",
			"PATH_CONFIGS"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "admin/log/q/PDOx.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14066,
						"regions":
						{
						},
						"selection":
						[
							[
								13868,
								13850
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Breakers.sublime-color-scheme",
							"color_helper.refresh": false,
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".md",
								"current_syntax": "Markdown/Markdown",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "meta.declaration-list.css -support.type.property-name.css -comment -string,meta.property-value.css -comment -string,meta.value.css -comment -string,meta.tag.inline.any.html string.quoted -constant.character.entity.html,meta.tag.any.html meta.attribute-with-value.style.html"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9945.33333333,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "admin/js/dt/dataTables.cellEdit.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15893,
						"regions":
						{
						},
						"selection":
						[
							[
								797,
								814
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										815,
										816
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										814,
										815
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Dark Knight.sublime-color-scheme",
							"color_helper.refresh": false,
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".js",
								"current_syntax": "JavaScript/JavaScript",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "string.quoted"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 282226,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "",
								"scope": ""
							}
						},
						"selection":
						[
							[
								281149,
								281149
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										280833,
										280834
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.scan":
							{
								"allow_scanning": false,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": null,
								"current_syntax": "Default/Find Results",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "-comment"
							},
							"default_dir": "C:\\OSPanel\\domains\\antCMS.os\\admin\\js\\dt",
							"detect_indentation": false,
							"incomplete_sync": null,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 135223.333333,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "admin/core/bootstrap.php",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5944,
						"regions":
						{
						},
						"selection":
						[
							[
								446,
								446
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Mariana.sublime-color-scheme",
							"color_helper.refresh": false,
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".php",
								"current_syntax": "PHP/PHP",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "meta.declaration-list.css -support.type.property-name.css -comment -string,meta.property-value.css -comment -string,meta.value.css -comment -string,meta.tag.inline.any.html string.quoted -constant.character.entity.html,meta.tag.any.html meta.attribute-with-value.style.html"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "admin/js/dt/standartDataTable.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7886,
						"regions":
						{
						},
						"selection":
						[
							[
								7193,
								7193
							],
							[
								7206,
								7206
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										7193,
										7194
									],
									"2":
									[
										7212,
										7213
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									],
									"2":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										7182,
										7183
									],
									"2":
									[
										6971,
										6972
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Dark Knight.sublime-color-scheme",
							"color_helper.refresh": false,
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".js",
								"current_syntax": "JavaScript/JavaScript",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "string.quoted"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3742.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "admin/core/includes/conf_columns.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8672,
						"regions":
						{
						},
						"selection":
						[
							[
								3406,
								3321
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3419,
										3420
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										3319,
										3320
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Mariana.sublime-color-scheme",
							"color_helper.refresh": false,
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".php",
								"current_syntax": "PHP/PHP",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "meta.declaration-list.css -support.type.property-name.css -comment -string,meta.property-value.css -comment -string,meta.value.css -comment -string,meta.tag.inline.any.html string.quoted -constant.character.entity.html,meta.tag.any.html meta.attribute-with-value.style.html"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1540.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "admin/admin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6540,
						"regions":
						{
						},
						"selection":
						[
							[
								6498,
								6498
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Mariana.sublime-color-scheme",
							"color_helper.refresh": false,
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".php",
								"current_syntax": "PHP/PHP",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "meta.declaration-list.css -support.type.property-name.css -comment -string,meta.property-value.css -comment -string,meta.value.css -comment -string,meta.tag.inline.any.html string.quoted -constant.character.entity.html,meta.tag.any.html meta.attribute-with-value.style.html"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2972.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 7,
					"file": "admin/core/includes/default_dpt.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3978,
						"regions":
						{
						},
						"selection":
						[
							[
								3700,
								3700
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3714,
										3715
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										2285,
										2286
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Mariana.sublime-color-scheme",
							"color_helper.refresh": false,
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".php",
								"current_syntax": "PHP/PHP",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "meta.declaration-list.css -support.type.property-name.css -comment -string,meta.property-value.css -comment -string,meta.value.css -comment -string,meta.tag.inline.any.html string.quoted -constant.character.entity.html,meta.tag.any.html meta.attribute-with-value.style.html"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1370.66666667,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/W/domains/antCMS.os/admin/core/includes/default_dpt.php",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3978,
						"regions":
						{
						},
						"selection":
						[
							[
								1913,
								1913
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2022,
										2023
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										1911,
										1912
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Mariana.sublime-color-scheme",
							"color_helper.refresh": false,
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".php",
								"current_syntax": "PHP/PHP",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "meta.declaration-list.css -support.type.property-name.css -comment -string,meta.property-value.css -comment -string,meta.value.css -comment -string,meta.tag.inline.any.html string.quoted -constant.character.entity.html,meta.tag.any.html meta.attribute-with-value.style.html"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1428.66666667,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "admin/functions/adminUI_functions.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3945,
						"regions":
						{
						},
						"selection":
						[
							[
								96,
								96
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"color_helper.box_height": 19,
							"color_helper.color_scheme": "Mariana.sublime-color-scheme",
							"color_helper.scan":
							{
								"allow_scanning": true,
								"color_class":
								[
									{
										"class": "css-level-4",
										"scopes": ""
									}
								],
								"color_trigger": "(?xi)\n(?:\n    \\b(?<![-#&$])(?:\n        color\\((?!\\s*-)|(?:hsla?|(?:ok)?(?:lch|lab)|hwb|rgba?)\\(\n) |\n\\b(?<![-#&$])[\\w]{3,}(?![(-])\\b|(?<![&])\\#)\n",
								"current_ext": ".php",
								"current_syntax": "PHP/PHP",
								"enabled": true,
								"last_updated": 1718600595.28,
								"scanning": "meta.declaration-list.css -support.type.property-name.css -comment -string,meta.property-value.css -comment -string,meta.value.css -comment -string,meta.tag.inline.any.html string.quoted -constant.character.entity.html,meta.tag.any.html meta.attribute-with-value.style.html"
							},
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.442927278306,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.composer":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "PROJECT_antCMS.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"colu",
				"admin\\core\\includes\\conf_columns.php"
			],
			[
				"pdox",
				"admin\\log\\q\\PDOx.md"
			],
			[
				"showLocation",
				"vendor\\twbs\\bootstrap\\.github\\workflows\\calibreapp-image-actions.yml"
			],
			[
				"boo",
				"admin\\core\\bootstrap.php"
			],
			[
				"colphp",
				"admin\\core\\includes\\conf_columns.php"
			],
			[
				"adm",
				"admin\\admin.php"
			],
			[
				"col",
				"admin\\core\\includes\\conf_columns.php"
			],
			[
				"adcss",
				"admin\\css\\uiAdmin.css"
			],
			[
				"const.php",
				"admin\\core\\const.php"
			],
			[
				"boot",
				"admin\\core\\bootstrap.php"
			],
			[
				"errors.php",
				"admin\\core\\errors.php"
			],
			[
				"admin__footer",
				"admin\\tpl\\admin__footer.tpl.html"
			],
			[
				"css",
				"admin\\css\\uiAdmin.css"
			],
			[
				"",
				"admin\\adminOLD.php"
			],
			[
				"admin__navbar",
				"admin\\tpl\\admin__navbar.tpl.html"
			],
			[
				"adm2tp",
				"admin\\tpl\\admin2.tpl.html"
			],
			[
				"admtp",
				"admin\\tpl\\admin.tpl.html"
			],
			[
				"columtpl",
				"admin\\tpl\\sub\\conf_columns.tpl.html"
			],
			[
				"column",
				"admin\\core\\includes\\conf_columns.php"
			],
			[
				"admend",
				"admin\\core\\admin_end.php"
			],
			[
				"admin2",
				"admin\\tpl\\admin2.tpl.html"
			],
			[
				"admi",
				"admin\\admin.php"
			],
			[
				"coljs",
				"admin\\js\\ui\\sub\\conf_columns.js"
			],
			[
				"iel",
				"admin\\logs\\FILEDEBUG.JSON"
			],
			[
				"editjs",
				"admin\\js\\dt\\dataTables.cellEdit.js"
			],
			[
				"single_checkbox",
				"admin\\tpl\\cs\\single_checkbox.tpl"
			],
			[
				"aEmptyTableBodyWithPlaceholders",
				"admin\\tpl\\atoms\\aEmptyTableBodyWithPlaceholders.tpl.html"
			],
			[
				"uiev",
				"admin\\js\\ui\\uiEvents.js"
			],
			[
				"colujs",
				"admin\\js\\ui\\sub\\conf_columns.js"
			],
			[
				"singch",
				"admin\\tpl\\cs\\single_checkbox.tpl"
			],
			[
				"ui",
				"admin\\js\\ui\\uiEvents.js"
			],
			[
				"admui",
				"admin\\js\\ui\\uiAdmin.js"
			],
			[
				"admtpl",
				"admin\\tpl\\admin.tpl.html"
			],
			[
				"footer",
				"vendor\\smarty\\smarty\\demo\\templates\\footer.tpl"
			],
			[
				"aden",
				"admin\\core\\admin_end.php"
			],
			[
				"plactp",
				"admin\\tpl\\atoms\\aEmptyTableBodyWithPlaceholders.tpl.html"
			],
			[
				"Toastph",
				"admin\\core\\classes\\class.Toasts.php"
			],
			[
				"confc",
				"admin\\core\\includes\\conf_columns.php"
			],
			[
				"clphp",
				"vendor\\symfony\\var-dumper\\Cloner\\ClonerInterface.php"
			],
			[
				"admuij",
				"admin\\js\\ui\\uiAdmin.js"
			],
			[
				"set",
				"admin\\core\\settings.php"
			],
			[
				"fun",
				"admin\\core\\functions.php"
			],
			[
				"uifu",
				"admin\\functions\\adminUI_functions.php"
			],
			[
				"defsub",
				"admin\\tpl\\sub\\default_sub.tpl.html"
			],
			[
				"deftp",
				"admin\\tpl\\sub\\default_sub.tpl.html"
			],
			[
				"coltp",
				"admin\\tpl\\sub\\conf_columns.tpl.html"
			],
			[
				"toastp",
				"admin\\core\\classes\\class.Toasts.php"
			],
			[
				"FIL",
				"admin\\logs\\FILEDEBUG.JSON"
			],
			[
				"uif",
				"admin\\functions\\adminUI_functions.php"
			],
			[
				"admf",
				"admin\\functions\\admin_functions.php"
			],
			[
				"stajs",
				"admin\\js\\dt\\standartDataTable.js"
			],
			[
				"celed",
				"admin\\js\\dt\\dataTables.cellEdit.js"
			],
			[
				"inputt",
				"admin\\tpl\\cs\\single_inputtext.tpl"
			],
			[
				"md",
				"admin\\logs\\md.md"
			],
			[
				"confcoltp",
				"admin\\tpl\\sub\\conf_columns.tpl.html"
			],
			[
				"tab",
				"admin\\core\\tables.php"
			],
			[
				"conf",
				"admin\\core\\includes\\conf_columns.php"
			],
			[
				"func",
				"admin\\core\\functions.php"
			],
			[
				"php",
				"admin\\logs\\php.php"
			],
			[
				"jso",
				"admin\\logs\\FILEDEBUG.JSON"
			],
			[
				"defphp",
				"admin\\core\\includes\\default_dpt.php"
			],
			[
				"admijs",
				"admin\\js\\admin.js"
			],
			[
				"butt",
				"admin\\js\\dt\\dtButtons.js"
			],
			[
				"admphp",
				"admin\\admin.php"
			],
			[
				"confcotp",
				"admin\\tpl\\sub\\conf_columns.tpl.html"
			],
			[
				"conf_",
				"admin\\core\\includes\\conf_columns.php"
			],
			[
				"conn",
				"admin\\core\\connect.php"
			],
			[
				"depa",
				"admin\\core\\departments.php"
			],
			[
				"admin",
				"admin\\admin.php"
			],
			[
				"standartDataTable",
				"admin\\js\\dt\\standartDataTable.js"
			],
			[
				"off",
				"admin\\tpl\\admin__menu_offcanvas.tpl.html"
			],
			[
				"accordtpl",
				"admin\\tpl\\admin__menu_accordion.tpl.html"
			],
			[
				"debu",
				"admin\\functions\\debug_functions.php"
			],
			[
				"OLD",
				"admin\\adminOLD.php"
			],
			[
				"const",
				"admin\\core\\const.php"
			],
			[
				"cons",
				"admin\\core\\const.php"
			],
			[
				"mysqli.php",
				"admin\\core\\mysqli.php"
			],
			[
				"admin.php",
				"admin\\admin.php"
			],
			[
				"admintp",
				"admin\\tpl\\admin.tpl.html"
			],
			[
				"terphp",
				"admin\\core\\includes\\trade_orders.php"
			],
			[
				"table",
				"admin\\core\\tables.php"
			],
			[
				"file",
				"admin\\logs\\FILEDEBUG.JSON"
			],
			[
				"err",
				"admin\\core\\errors.php"
			],
			[
				"foot",
				"admin\\tpl\\admin__footer.tpl.html"
			],
			[
				"js",
				"admin\\js\\ui\\uiEvents.js"
			],
			[
				"admiss",
				"admin\\core\\classes\\class.adminSSP.php"
			],
			[
				"admssp",
				"admin\\core\\classes\\class.adminSSP.php"
			],
			[
				"eve",
				"admin\\js\\ui\\uiEvents.js"
			],
			[
				"canv",
				"admin\\tpl\\admin__menu_offcanvas.tpl.html"
			],
			[
				"fo",
				"admin\\logs\\FILEDEBUG.JSON"
			],
			[
				"sqld",
				"admin\\logs\\SQLDEBUG"
			],
			[
				"ad",
				"admin\\tpl\\admin.tpl.html"
			],
			[
				"foote",
				"admin\\tpl\\admin__footer.tpl.html"
			],
			[
				"admin__menu_accordion",
				"admin\\tpl\\admin__menu_accordion.tpl.html"
			],
			[
				"offc",
				"admin\\tpl\\admin__menu_offcanvas.tpl.html"
			],
			[
				"toattp",
				"admin\\apps\\Toasts\\appToasts.tpl.html"
			],
			[
				"taast",
				"admin\\apps\\Toasts\\appToasts.js"
			],
			[
				"error_handler",
				"core\\config\\error_handler.php"
			],
			[
				".css",
				"core\\tpl\\user\\nano\\css\\nano.css"
			],
			[
				"admin.css",
				"core\\tpl\\admin\\css\\admin.css"
			],
			[
				"admin__megamenu.tpl.html",
				"core\\tpl\\admin\\admin__megamenu.tpl.html"
			],
			[
				"navtplhtml",
				"core\\tpl\\admin\\admin__navbar.tpl.html"
			],
			[
				"notfound.tpl.html",
				"core\\tpl\\admin\\notfound.tpl.html"
			],
			[
				"lang",
				"core\\config\\language_list.php"
			],
			[
				"appInvoicePrint.tpl.html",
				"core\\tpl\\admin\\apps\\appInvoicePrint.tpl.html"
			],
			[
				"conne",
				"core\\config\\connect.inc.php"
			],
			[
				"invoi",
				"core\\modules\\payment\\invoice_2024.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\OSPanel\\domains\\nixminsk_private\\VH87_nixminsk.by.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 387.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
